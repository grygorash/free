function initMap(){map=new google.maps.Map(document.getElementById("map"),{center:{lat:50.4386,lng:30.5225},zoom:17,mapTypeControl:!1,scrollwheel:!1});var e="../img/map-ic.png",t=(new google.maps.Marker({position:{lat:50.4389,lng:30.52315},map:map,icon:e}),document.getElementById("style-selector-control"));map.controls[google.maps.ControlPosition.TOP_LEFT].push(t);var i=document.getElementById("style-selector");map.setOptions({styles:styles[i.value]}),i.addEventListener("change",function(){map.setOptions({styles:styles[i.value]})})}if(!function(e,t){"use strict";"object"==typeof module&&"object"==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error("jQuery requires a window with a document");return t(e)}:t(e)}("undefined"!=typeof window?window:this,function(e,t){"use strict";function i(e,t){t=t||te;var i=t.createElement("script");i.text=e,t.head.appendChild(i).parentNode.removeChild(i)}function n(e){var t=!!e&&"length"in e&&e.length,i=fe.type(e);return"function"!==i&&!fe.isWindow(e)&&("array"===i||0===t||"number"==typeof t&&t>0&&t-1 in e)}function s(e,t,i){return fe.isFunction(t)?fe.grep(e,function(e,n){return!!t.call(e,n,e)!==i}):t.nodeType?fe.grep(e,function(e){return e===t!==i}):"string"!=typeof t?fe.grep(e,function(e){return ae.call(t,e)>-1!==i}):Se.test(t)?fe.filter(t,e,i):(t=fe.filter(t,e),fe.grep(e,function(e){return ae.call(t,e)>-1!==i&&1===e.nodeType}))}function r(e,t){for(;(e=e[t])&&1!==e.nodeType;);return e}function a(e){var t={};return fe.each(e.match(Ie)||[],function(e,i){t[i]=!0}),t}function o(e){return e}function l(e){throw e}function p(e,t,i){var n;try{e&&fe.isFunction(n=e.promise)?n.call(e).done(t).fail(i):e&&fe.isFunction(n=e.then)?n.call(e,t,i):t.call(void 0,e)}catch(e){i.call(void 0,e)}}function c(){te.removeEventListener("DOMContentLoaded",c),e.removeEventListener("load",c),fe.ready()}function u(){this.expando=fe.expando+u.uid++}function d(e){return"true"===e||"false"!==e&&("null"===e?null:e===+e+""?+e:Oe.test(e)?JSON.parse(e):e)}function h(e,t,i){var n;if(void 0===i&&1===e.nodeType)if(n="data-"+t.replace(He,"-$&").toLowerCase(),i=e.getAttribute(n),"string"==typeof i){try{i=d(i)}catch(e){}Ne.set(e,t,i)}else i=void 0;return i}function f(e,t,i,n){var s,r=1,a=20,o=n?function(){return n.cur()}:function(){return fe.css(e,t,"")},l=o(),p=i&&i[3]||(fe.cssNumber[t]?"":"px"),c=(fe.cssNumber[t]||"px"!==p&&+l)&&je.exec(fe.css(e,t));if(c&&c[3]!==p){p=p||c[3],i=i||[],c=+l||1;do r=r||".5",c/=r,fe.style(e,t,c+p);while(r!==(r=o()/l)&&1!==r&&--a)}return i&&(c=+c||+l||0,s=i[1]?c+(i[1]+1)*i[2]:+i[2],n&&(n.unit=p,n.start=c,n.end=s)),s}function m(e){var t,i=e.ownerDocument,n=e.nodeName,s=qe[n];return s?s:(t=i.body.appendChild(i.createElement(n)),s=fe.css(t,"display"),t.parentNode.removeChild(t),"none"===s&&(s="block"),qe[n]=s,s)}function g(e,t){for(var i,n,s=[],r=0,a=e.length;r<a;r++)n=e[r],n.style&&(i=n.style.display,t?("none"===i&&(s[r]=Le.get(n,"display")||null,s[r]||(n.style.display="")),""===n.style.display&&Fe(n)&&(s[r]=m(n))):"none"!==i&&(s[r]="none",Le.set(n,"display",i)));for(r=0;r<a;r++)null!=s[r]&&(e[r].style.display=s[r]);return e}function v(e,t){var i;return i="undefined"!=typeof e.getElementsByTagName?e.getElementsByTagName(t||"*"):"undefined"!=typeof e.querySelectorAll?e.querySelectorAll(t||"*"):[],void 0===t||t&&fe.nodeName(e,t)?fe.merge([e],i):i}function y(e,t){for(var i=0,n=e.length;i<n;i++)Le.set(e[i],"globalEval",!t||Le.get(t[i],"globalEval"))}function w(e,t,i,n,s){for(var r,a,o,l,p,c,u=t.createDocumentFragment(),d=[],h=0,f=e.length;h<f;h++)if(r=e[h],r||0===r)if("object"===fe.type(r))fe.merge(d,r.nodeType?[r]:r);else if(Ue.test(r)){for(a=a||u.appendChild(t.createElement("div")),o=(Ge.exec(r)||["",""])[1].toLowerCase(),l=Ve[o]||Ve._default,a.innerHTML=l[1]+fe.htmlPrefilter(r)+l[2],c=l[0];c--;)a=a.lastChild;fe.merge(d,a.childNodes),a=u.firstChild,a.textContent=""}else d.push(t.createTextNode(r));for(u.textContent="",h=0;r=d[h++];)if(n&&fe.inArray(r,n)>-1)s&&s.push(r);else if(p=fe.contains(r.ownerDocument,r),a=v(u.appendChild(r),"script"),p&&y(a),i)for(c=0;r=a[c++];)Ye.test(r.type||"")&&i.push(r);return u}function b(){return!0}function x(){return!1}function T(){try{return te.activeElement}catch(e){}}function C(e,t,i,n,s,r){var a,o;if("object"==typeof t){"string"!=typeof i&&(n=n||i,i=void 0);for(o in t)C(e,o,i,n,t[o],r);return e}if(null==n&&null==s?(s=i,n=i=void 0):null==s&&("string"==typeof i?(s=n,n=void 0):(s=n,n=i,i=void 0)),s===!1)s=x;else if(!s)return e;return 1===r&&(a=s,s=function(e){return fe().off(e),a.apply(this,arguments)},s.guid=a.guid||(a.guid=fe.guid++)),e.each(function(){fe.event.add(this,t,s,n,i)})}function S(e,t){return fe.nodeName(e,"table")&&fe.nodeName(11!==t.nodeType?t:t.firstChild,"tr")?e.getElementsByTagName("tbody")[0]||e:e}function E(e){return e.type=(null!==e.getAttribute("type"))+"/"+e.type,e}function _(e){var t=nt.exec(e.type);return t?e.type=t[1]:e.removeAttribute("type"),e}function k(e,t){var i,n,s,r,a,o,l,p;if(1===t.nodeType){if(Le.hasData(e)&&(r=Le.access(e),a=Le.set(t,r),p=r.events)){delete a.handle,a.events={};for(s in p)for(i=0,n=p[s].length;i<n;i++)fe.event.add(t,s,p[s][i])}Ne.hasData(e)&&(o=Ne.access(e),l=fe.extend({},o),Ne.set(t,l))}}function M(e,t){var i=t.nodeName.toLowerCase();"input"===i&&Xe.test(e.type)?t.checked=e.checked:"input"!==i&&"textarea"!==i||(t.defaultValue=e.defaultValue)}function z(e,t,n,s){t=se.apply([],t);var r,a,o,l,p,c,u=0,d=e.length,h=d-1,f=t[0],m=fe.isFunction(f);if(m||d>1&&"string"==typeof f&&!de.checkClone&&it.test(f))return e.each(function(i){var r=e.eq(i);m&&(t[0]=f.call(this,i,r.html())),z(r,t,n,s)});if(d&&(r=w(t,e[0].ownerDocument,!1,e,s),a=r.firstChild,1===r.childNodes.length&&(r=a),a||s)){for(o=fe.map(v(r,"script"),E),l=o.length;u<d;u++)p=r,u!==h&&(p=fe.clone(p,!0,!0),l&&fe.merge(o,v(p,"script"))),n.call(e[u],p,u);if(l)for(c=o[o.length-1].ownerDocument,fe.map(o,_),u=0;u<l;u++)p=o[u],Ye.test(p.type||"")&&!Le.access(p,"globalEval")&&fe.contains(c,p)&&(p.src?fe._evalUrl&&fe._evalUrl(p.src):i(p.textContent.replace(st,""),c))}return e}function I(e,t,i){for(var n,s=t?fe.filter(t,e):e,r=0;null!=(n=s[r]);r++)i||1!==n.nodeType||fe.cleanData(v(n)),n.parentNode&&(i&&fe.contains(n.ownerDocument,n)&&y(v(n,"script")),n.parentNode.removeChild(n));return e}function D(e,t,i){var n,s,r,a,o=e.style;return i=i||ot(e),i&&(a=i.getPropertyValue(t)||i[t],""!==a||fe.contains(e.ownerDocument,e)||(a=fe.style(e,t)),!de.pixelMarginRight()&&at.test(a)&&rt.test(t)&&(n=o.width,s=o.minWidth,r=o.maxWidth,o.minWidth=o.maxWidth=o.width=a,a=i.width,o.width=n,o.minWidth=s,o.maxWidth=r)),void 0!==a?a+"":a}function P(e,t){return{get:function(){return e()?void delete this.get:(this.get=t).apply(this,arguments)}}}function $(e){if(e in dt)return e;for(var t=e[0].toUpperCase()+e.slice(1),i=ut.length;i--;)if(e=ut[i]+t,e in dt)return e}function A(e,t,i){var n=je.exec(t);return n?Math.max(0,n[2]-(i||0))+(n[3]||"px"):t}function L(e,t,i,n,s){var r,a=0;for(r=i===(n?"border":"content")?4:"width"===t?1:0;r<4;r+=2)"margin"===i&&(a+=fe.css(e,i+Re[r],!0,s)),n?("content"===i&&(a-=fe.css(e,"padding"+Re[r],!0,s)),"margin"!==i&&(a-=fe.css(e,"border"+Re[r]+"Width",!0,s))):(a+=fe.css(e,"padding"+Re[r],!0,s),"padding"!==i&&(a+=fe.css(e,"border"+Re[r]+"Width",!0,s)));return a}function N(e,t,i){var n,s=!0,r=ot(e),a="border-box"===fe.css(e,"boxSizing",!1,r);if(e.getClientRects().length&&(n=e.getBoundingClientRect()[t]),n<=0||null==n){if(n=D(e,t,r),(n<0||null==n)&&(n=e.style[t]),at.test(n))return n;s=a&&(de.boxSizingReliable()||n===e.style[t]),n=parseFloat(n)||0}return n+L(e,t,i||(a?"border":"content"),s,r)+"px"}function O(e,t,i,n,s){return new O.prototype.init(e,t,i,n,s)}function H(){ft&&(e.requestAnimationFrame(H),fe.fx.tick())}function B(){return e.setTimeout(function(){ht=void 0}),ht=fe.now()}function j(e,t){var i,n=0,s={height:e};for(t=t?1:0;n<4;n+=2-t)i=Re[n],s["margin"+i]=s["padding"+i]=e;return t&&(s.opacity=s.width=e),s}function R(e,t,i){for(var n,s=(q.tweeners[t]||[]).concat(q.tweeners["*"]),r=0,a=s.length;r<a;r++)if(n=s[r].call(i,t,e))return n}function F(e,t,i){var n,s,r,a,o,l,p,c,u="width"in t||"height"in t,d=this,h={},f=e.style,m=e.nodeType&&Fe(e),v=Le.get(e,"fxshow");i.queue||(a=fe._queueHooks(e,"fx"),null==a.unqueued&&(a.unqueued=0,o=a.empty.fire,a.empty.fire=function(){a.unqueued||o()}),a.unqueued++,d.always(function(){d.always(function(){a.unqueued--,fe.queue(e,"fx").length||a.empty.fire()})}));for(n in t)if(s=t[n],mt.test(s)){if(delete t[n],r=r||"toggle"===s,s===(m?"hide":"show")){if("show"!==s||!v||void 0===v[n])continue;m=!0}h[n]=v&&v[n]||fe.style(e,n)}if(l=!fe.isEmptyObject(t),l||!fe.isEmptyObject(h)){u&&1===e.nodeType&&(i.overflow=[f.overflow,f.overflowX,f.overflowY],p=v&&v.display,null==p&&(p=Le.get(e,"display")),c=fe.css(e,"display"),"none"===c&&(p?c=p:(g([e],!0),p=e.style.display||p,c=fe.css(e,"display"),g([e]))),("inline"===c||"inline-block"===c&&null!=p)&&"none"===fe.css(e,"float")&&(l||(d.done(function(){f.display=p}),null==p&&(c=f.display,p="none"===c?"":c)),f.display="inline-block")),i.overflow&&(f.overflow="hidden",d.always(function(){f.overflow=i.overflow[0],f.overflowX=i.overflow[1],f.overflowY=i.overflow[2]})),l=!1;for(n in h)l||(v?"hidden"in v&&(m=v.hidden):v=Le.access(e,"fxshow",{display:p}),r&&(v.hidden=!m),m&&g([e],!0),d.done(function(){m||g([e]),Le.remove(e,"fxshow");for(n in h)fe.style(e,n,h[n])})),l=R(m?v[n]:0,n,d),n in v||(v[n]=l.start,m&&(l.end=l.start,l.start=0))}}function W(e,t){var i,n,s,r,a;for(i in e)if(n=fe.camelCase(i),s=t[n],r=e[i],fe.isArray(r)&&(s=r[1],r=e[i]=r[0]),i!==n&&(e[n]=r,delete e[i]),a=fe.cssHooks[n],a&&"expand"in a){r=a.expand(r),delete e[n];for(i in r)i in e||(e[i]=r[i],t[i]=s)}else t[n]=s}function q(e,t,i){var n,s,r=0,a=q.prefilters.length,o=fe.Deferred().always(function(){delete l.elem}),l=function(){if(s)return!1;for(var t=ht||B(),i=Math.max(0,p.startTime+p.duration-t),n=i/p.duration||0,r=1-n,a=0,l=p.tweens.length;a<l;a++)p.tweens[a].run(r);return o.notifyWith(e,[p,r,i]),r<1&&l?i:(o.resolveWith(e,[p]),!1)},p=o.promise({elem:e,props:fe.extend({},t),opts:fe.extend(!0,{specialEasing:{},easing:fe.easing._default},i),originalProperties:t,originalOptions:i,startTime:ht||B(),duration:i.duration,tweens:[],createTween:function(t,i){var n=fe.Tween(e,p.opts,t,i,p.opts.specialEasing[t]||p.opts.easing);return p.tweens.push(n),n},stop:function(t){var i=0,n=t?p.tweens.length:0;if(s)return this;for(s=!0;i<n;i++)p.tweens[i].run(1);return t?(o.notifyWith(e,[p,1,0]),o.resolveWith(e,[p,t])):o.rejectWith(e,[p,t]),this}}),c=p.props;for(W(c,p.opts.specialEasing);r<a;r++)if(n=q.prefilters[r].call(p,e,c,p.opts))return fe.isFunction(n.stop)&&(fe._queueHooks(p.elem,p.opts.queue).stop=fe.proxy(n.stop,n)),n;return fe.map(c,R,p),fe.isFunction(p.opts.start)&&p.opts.start.call(e,p),fe.fx.timer(fe.extend(l,{elem:e,anim:p,queue:p.opts.queue})),p.progress(p.opts.progress).done(p.opts.done,p.opts.complete).fail(p.opts.fail).always(p.opts.always)}function X(e){var t=e.match(Ie)||[];return t.join(" ")}function G(e){return e.getAttribute&&e.getAttribute("class")||""}function Y(e,t,i,n){var s;if(fe.isArray(t))fe.each(t,function(t,s){i||_t.test(e)?n(e,s):Y(e+"["+("object"==typeof s&&null!=s?t:"")+"]",s,i,n)});else if(i||"object"!==fe.type(t))n(e,t);else for(s in t)Y(e+"["+s+"]",t[s],i,n)}function V(e){return function(t,i){"string"!=typeof t&&(i=t,t="*");var n,s=0,r=t.toLowerCase().match(Ie)||[];if(fe.isFunction(i))for(;n=r[s++];)"+"===n[0]?(n=n.slice(1)||"*",(e[n]=e[n]||[]).unshift(i)):(e[n]=e[n]||[]).push(i)}}function U(e,t,i,n){function s(o){var l;return r[o]=!0,fe.each(e[o]||[],function(e,o){var p=o(t,i,n);return"string"!=typeof p||a||r[p]?a?!(l=p):void 0:(t.dataTypes.unshift(p),s(p),!1)}),l}var r={},a=e===Ht;return s(t.dataTypes[0])||!r["*"]&&s("*")}function Q(e,t){var i,n,s=fe.ajaxSettings.flatOptions||{};for(i in t)void 0!==t[i]&&((s[i]?e:n||(n={}))[i]=t[i]);return n&&fe.extend(!0,e,n),e}function K(e,t,i){for(var n,s,r,a,o=e.contents,l=e.dataTypes;"*"===l[0];)l.shift(),void 0===n&&(n=e.mimeType||t.getResponseHeader("Content-Type"));if(n)for(s in o)if(o[s]&&o[s].test(n)){l.unshift(s);break}if(l[0]in i)r=l[0];else{for(s in i){if(!l[0]||e.converters[s+" "+l[0]]){r=s;break}a||(a=s)}r=r||a}if(r)return r!==l[0]&&l.unshift(r),i[r]}function Z(e,t,i,n){var s,r,a,o,l,p={},c=e.dataTypes.slice();if(c[1])for(a in e.converters)p[a.toLowerCase()]=e.converters[a];for(r=c.shift();r;)if(e.responseFields[r]&&(i[e.responseFields[r]]=t),!l&&n&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),l=r,r=c.shift())if("*"===r)r=l;else if("*"!==l&&l!==r){if(a=p[l+" "+r]||p["* "+r],!a)for(s in p)if(o=s.split(" "),o[1]===r&&(a=p[l+" "+o[0]]||p["* "+o[0]])){a===!0?a=p[s]:p[s]!==!0&&(r=o[0],c.unshift(o[1]));break}if(a!==!0)if(a&&e.throws)t=a(t);else try{t=a(t)}catch(e){return{state:"parsererror",error:a?e:"No conversion from "+l+" to "+r}}}return{state:"success",data:t}}function J(e){return fe.isWindow(e)?e:9===e.nodeType&&e.defaultView}var ee=[],te=e.document,ie=Object.getPrototypeOf,ne=ee.slice,se=ee.concat,re=ee.push,ae=ee.indexOf,oe={},le=oe.toString,pe=oe.hasOwnProperty,ce=pe.toString,ue=ce.call(Object),de={},he="3.1.1",fe=function(e,t){return new fe.fn.init(e,t)},me=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,ge=/^-ms-/,ve=/-([a-z])/g,ye=function(e,t){return t.toUpperCase()};fe.fn=fe.prototype={jquery:he,constructor:fe,length:0,toArray:function(){return ne.call(this)},get:function(e){return null==e?ne.call(this):e<0?this[e+this.length]:this[e]},pushStack:function(e){var t=fe.merge(this.constructor(),e);return t.prevObject=this,t},each:function(e){return fe.each(this,e)},map:function(e){return this.pushStack(fe.map(this,function(t,i){return e.call(t,i,t)}))},slice:function(){return this.pushStack(ne.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(e){var t=this.length,i=+e+(e<0?t:0);return this.pushStack(i>=0&&i<t?[this[i]]:[])},end:function(){return this.prevObject||this.constructor()},push:re,sort:ee.sort,splice:ee.splice},fe.extend=fe.fn.extend=function(){var e,t,i,n,s,r,a=arguments[0]||{},o=1,l=arguments.length,p=!1;for("boolean"==typeof a&&(p=a,a=arguments[o]||{},o++),"object"==typeof a||fe.isFunction(a)||(a={}),o===l&&(a=this,o--);o<l;o++)if(null!=(e=arguments[o]))for(t in e)i=a[t],n=e[t],a!==n&&(p&&n&&(fe.isPlainObject(n)||(s=fe.isArray(n)))?(s?(s=!1,r=i&&fe.isArray(i)?i:[]):r=i&&fe.isPlainObject(i)?i:{},a[t]=fe.extend(p,r,n)):void 0!==n&&(a[t]=n));return a},fe.extend({expando:"jQuery"+(he+Math.random()).replace(/\D/g,""),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isFunction:function(e){return"function"===fe.type(e)},isArray:Array.isArray,isWindow:function(e){return null!=e&&e===e.window},isNumeric:function(e){var t=fe.type(e);return("number"===t||"string"===t)&&!isNaN(e-parseFloat(e))},isPlainObject:function(e){var t,i;return!(!e||"[object Object]"!==le.call(e)||(t=ie(e))&&(i=pe.call(t,"constructor")&&t.constructor,"function"!=typeof i||ce.call(i)!==ue))},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},type:function(e){return null==e?e+"":"object"==typeof e||"function"==typeof e?oe[le.call(e)]||"object":typeof e},globalEval:function(e){i(e)},camelCase:function(e){return e.replace(ge,"ms-").replace(ve,ye)},nodeName:function(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()},each:function(e,t){var i,s=0;if(n(e))for(i=e.length;s<i&&t.call(e[s],s,e[s])!==!1;s++);else for(s in e)if(t.call(e[s],s,e[s])===!1)break;return e},trim:function(e){return null==e?"":(e+"").replace(me,"")},makeArray:function(e,t){var i=t||[];return null!=e&&(n(Object(e))?fe.merge(i,"string"==typeof e?[e]:e):re.call(i,e)),i},inArray:function(e,t,i){return null==t?-1:ae.call(t,e,i)},merge:function(e,t){for(var i=+t.length,n=0,s=e.length;n<i;n++)e[s++]=t[n];return e.length=s,e},grep:function(e,t,i){for(var n,s=[],r=0,a=e.length,o=!i;r<a;r++)n=!t(e[r],r),n!==o&&s.push(e[r]);return s},map:function(e,t,i){var s,r,a=0,o=[];if(n(e))for(s=e.length;a<s;a++)r=t(e[a],a,i),null!=r&&o.push(r);else for(a in e)r=t(e[a],a,i),null!=r&&o.push(r);return se.apply([],o)},guid:1,proxy:function(e,t){var i,n,s;if("string"==typeof t&&(i=e[t],t=e,e=i),fe.isFunction(e))return n=ne.call(arguments,2),s=function(){return e.apply(t||this,n.concat(ne.call(arguments)))},s.guid=e.guid=e.guid||fe.guid++,s},now:Date.now,support:de}),"function"==typeof Symbol&&(fe.fn[Symbol.iterator]=ee[Symbol.iterator]),fe.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(e,t){oe["[object "+t+"]"]=t.toLowerCase()});var we=function(e){function t(e,t,i,n){var s,r,a,o,l,p,c,d=t&&t.ownerDocument,f=t?t.nodeType:9;if(i=i||[],"string"!=typeof e||!e||1!==f&&9!==f&&11!==f)return i;if(!n&&((t?t.ownerDocument||t:R)!==$&&P(t),t=t||$,L)){if(11!==f&&(l=ve.exec(e)))if(s=l[1]){if(9===f){if(!(a=t.getElementById(s)))return i;if(a.id===s)return i.push(a),i}else if(d&&(a=d.getElementById(s))&&B(t,a)&&a.id===s)return i.push(a),i}else{if(l[2])return Z.apply(i,t.getElementsByTagName(e)),i;if((s=l[3])&&T.getElementsByClassName&&t.getElementsByClassName)return Z.apply(i,t.getElementsByClassName(s)),i}if(T.qsa&&!G[e+" "]&&(!N||!N.test(e))){if(1!==f)d=t,c=e;else if("object"!==t.nodeName.toLowerCase()){for((o=t.getAttribute("id"))?o=o.replace(xe,Te):t.setAttribute("id",o=j),p=_(e),r=p.length;r--;)p[r]="#"+o+" "+h(p[r]);c=p.join(","),d=ye.test(e)&&u(t.parentNode)||t}if(c)try{return Z.apply(i,d.querySelectorAll(c)),i}catch(e){}finally{o===j&&t.removeAttribute("id")}}}return M(e.replace(oe,"$1"),t,i,n)}function i(){function e(i,n){return t.push(i+" ")>C.cacheLength&&delete e[t.shift()],e[i+" "]=n}var t=[];return e}function n(e){return e[j]=!0,e}function s(e){var t=$.createElement("fieldset");try{return!!e(t)}catch(e){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function r(e,t){for(var i=e.split("|"),n=i.length;n--;)C.attrHandle[i[n]]=t}function a(e,t){var i=t&&e,n=i&&1===e.nodeType&&1===t.nodeType&&e.sourceIndex-t.sourceIndex;if(n)return n;if(i)for(;i=i.nextSibling;)if(i===t)return-1;return e?1:-1}function o(e){return function(t){var i=t.nodeName.toLowerCase();return"input"===i&&t.type===e}}function l(e){return function(t){var i=t.nodeName.toLowerCase();return("input"===i||"button"===i)&&t.type===e}}function p(e){return function(t){return"form"in t?t.parentNode&&t.disabled===!1?"label"in t?"label"in t.parentNode?t.parentNode.disabled===e:t.disabled===e:t.isDisabled===e||t.isDisabled!==!e&&Se(t)===e:t.disabled===e:"label"in t&&t.disabled===e}}function c(e){return n(function(t){return t=+t,n(function(i,n){for(var s,r=e([],i.length,t),a=r.length;a--;)i[s=r[a]]&&(i[s]=!(n[s]=i[s]))})})}function u(e){return e&&"undefined"!=typeof e.getElementsByTagName&&e}function d(){}function h(e){for(var t=0,i=e.length,n="";t<i;t++)n+=e[t].value;return n}function f(e,t,i){var n=t.dir,s=t.next,r=s||n,a=i&&"parentNode"===r,o=W++;return t.first?function(t,i,s){for(;t=t[n];)if(1===t.nodeType||a)return e(t,i,s);return!1}:function(t,i,l){var p,c,u,d=[F,o];if(l){for(;t=t[n];)if((1===t.nodeType||a)&&e(t,i,l))return!0}else for(;t=t[n];)if(1===t.nodeType||a)if(u=t[j]||(t[j]={}),c=u[t.uniqueID]||(u[t.uniqueID]={}),s&&s===t.nodeName.toLowerCase())t=t[n]||t;else{if((p=c[r])&&p[0]===F&&p[1]===o)return d[2]=p[2];if(c[r]=d,d[2]=e(t,i,l))return!0}return!1}}function m(e){return e.length>1?function(t,i,n){for(var s=e.length;s--;)if(!e[s](t,i,n))return!1;return!0}:e[0]}function g(e,i,n){for(var s=0,r=i.length;s<r;s++)t(e,i[s],n);return n}function v(e,t,i,n,s){for(var r,a=[],o=0,l=e.length,p=null!=t;o<l;o++)(r=e[o])&&(i&&!i(r,n,s)||(a.push(r),p&&t.push(o)));return a}function y(e,t,i,s,r,a){return s&&!s[j]&&(s=y(s)),r&&!r[j]&&(r=y(r,a)),n(function(n,a,o,l){var p,c,u,d=[],h=[],f=a.length,m=n||g(t||"*",o.nodeType?[o]:o,[]),y=!e||!n&&t?m:v(m,d,e,o,l),w=i?r||(n?e:f||s)?[]:a:y;if(i&&i(y,w,o,l),s)for(p=v(w,h),s(p,[],o,l),c=p.length;c--;)(u=p[c])&&(w[h[c]]=!(y[h[c]]=u));if(n){if(r||e){if(r){for(p=[],c=w.length;c--;)(u=w[c])&&p.push(y[c]=u);r(null,w=[],p,l)}for(c=w.length;c--;)(u=w[c])&&(p=r?ee(n,u):d[c])>-1&&(n[p]=!(a[p]=u))}}else w=v(w===a?w.splice(f,w.length):w),r?r(null,a,w,l):Z.apply(a,w)})}function w(e){for(var t,i,n,s=e.length,r=C.relative[e[0].type],a=r||C.relative[" "],o=r?1:0,l=f(function(e){return e===t},a,!0),p=f(function(e){return ee(t,e)>-1},a,!0),c=[function(e,i,n){var s=!r&&(n||i!==z)||((t=i).nodeType?l(e,i,n):p(e,i,n));return t=null,s}];o<s;o++)if(i=C.relative[e[o].type])c=[f(m(c),i)];else{if(i=C.filter[e[o].type].apply(null,e[o].matches),i[j]){for(n=++o;n<s&&!C.relative[e[n].type];n++);return y(o>1&&m(c),o>1&&h(e.slice(0,o-1).concat({value:" "===e[o-2].type?"*":""})).replace(oe,"$1"),i,o<n&&w(e.slice(o,n)),n<s&&w(e=e.slice(n)),n<s&&h(e))}c.push(i)}return m(c)}function b(e,i){var s=i.length>0,r=e.length>0,a=function(n,a,o,l,p){var c,u,d,h=0,f="0",m=n&&[],g=[],y=z,w=n||r&&C.find.TAG("*",p),b=F+=null==y?1:Math.random()||.1,x=w.length;for(p&&(z=a===$||a||p);f!==x&&null!=(c=w[f]);f++){if(r&&c){for(u=0,a||c.ownerDocument===$||(P(c),o=!L);d=e[u++];)if(d(c,a||$,o)){l.push(c);break}p&&(F=b)}s&&((c=!d&&c)&&h--,n&&m.push(c))}if(h+=f,s&&f!==h){for(u=0;d=i[u++];)d(m,g,a,o);if(n){if(h>0)for(;f--;)m[f]||g[f]||(g[f]=Q.call(l));g=v(g)}Z.apply(l,g),p&&!n&&g.length>0&&h+i.length>1&&t.uniqueSort(l)}return p&&(F=b,z=y),m};return s?n(a):a}var x,T,C,S,E,_,k,M,z,I,D,P,$,A,L,N,O,H,B,j="sizzle"+1*new Date,R=e.document,F=0,W=0,q=i(),X=i(),G=i(),Y=function(e,t){return e===t&&(D=!0),0},V={}.hasOwnProperty,U=[],Q=U.pop,K=U.push,Z=U.push,J=U.slice,ee=function(e,t){for(var i=0,n=e.length;i<n;i++)if(e[i]===t)return i;return-1},te="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",ie="[\\x20\\t\\r\\n\\f]",ne="(?:\\\\.|[\\w-]|[^\0-\\xa0])+",se="\\["+ie+"*("+ne+")(?:"+ie+"*([*^$|!~]?=)"+ie+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+ne+"))|)"+ie+"*\\]",re=":("+ne+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+se+")*)|.*)\\)|)",ae=new RegExp(ie+"+","g"),oe=new RegExp("^"+ie+"+|((?:^|[^\\\\])(?:\\\\.)*)"+ie+"+$","g"),le=new RegExp("^"+ie+"*,"+ie+"*"),pe=new RegExp("^"+ie+"*([>+~]|"+ie+")"+ie+"*"),ce=new RegExp("="+ie+"*([^\\]'\"]*?)"+ie+"*\\]","g"),ue=new RegExp(re),de=new RegExp("^"+ne+"$"),he={ID:new RegExp("^#("+ne+")"),CLASS:new RegExp("^\\.("+ne+")"),TAG:new RegExp("^("+ne+"|[*])"),ATTR:new RegExp("^"+se),PSEUDO:new RegExp("^"+re),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+ie+"*(even|odd|(([+-]|)(\\d*)n|)"+ie+"*(?:([+-]|)"+ie+"*(\\d+)|))"+ie+"*\\)|)","i"),bool:new RegExp("^(?:"+te+")$","i"),needsContext:new RegExp("^"+ie+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+ie+"*((?:-\\d)?\\d*)"+ie+"*\\)|)(?=[^-]|$)","i")},fe=/^(?:input|select|textarea|button)$/i,me=/^h\d$/i,ge=/^[^{]+\{\s*\[native \w/,ve=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ye=/[+~]/,we=new RegExp("\\\\([\\da-f]{1,6}"+ie+"?|("+ie+")|.)","ig"),be=function(e,t,i){var n="0x"+t-65536;return n!==n||i?t:n<0?String.fromCharCode(n+65536):String.fromCharCode(n>>10|55296,1023&n|56320)},xe=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,Te=function(e,t){return t?"\0"===e?"�":e.slice(0,-1)+"\\"+e.charCodeAt(e.length-1).toString(16)+" ":"\\"+e},Ce=function(){P()},Se=f(function(e){return e.disabled===!0&&("form"in e||"label"in e)},{dir:"parentNode",next:"legend"});try{Z.apply(U=J.call(R.childNodes),R.childNodes),U[R.childNodes.length].nodeType}catch(e){Z={apply:U.length?function(e,t){K.apply(e,J.call(t))}:function(e,t){for(var i=e.length,n=0;e[i++]=t[n++];);e.length=i-1}}}T=t.support={},E=t.isXML=function(e){var t=e&&(e.ownerDocument||e).documentElement;return!!t&&"HTML"!==t.nodeName},P=t.setDocument=function(e){var t,i,n=e?e.ownerDocument||e:R;return n!==$&&9===n.nodeType&&n.documentElement?($=n,A=$.documentElement,L=!E($),R!==$&&(i=$.defaultView)&&i.top!==i&&(i.addEventListener?i.addEventListener("unload",Ce,!1):i.attachEvent&&i.attachEvent("onunload",Ce)),T.attributes=s(function(e){return e.className="i",!e.getAttribute("className")}),T.getElementsByTagName=s(function(e){return e.appendChild($.createComment("")),!e.getElementsByTagName("*").length}),T.getElementsByClassName=ge.test($.getElementsByClassName),T.getById=s(function(e){return A.appendChild(e).id=j,!$.getElementsByName||!$.getElementsByName(j).length}),T.getById?(C.filter.ID=function(e){var t=e.replace(we,be);return function(e){return e.getAttribute("id")===t}},C.find.ID=function(e,t){if("undefined"!=typeof t.getElementById&&L){var i=t.getElementById(e);return i?[i]:[]}}):(C.filter.ID=function(e){var t=e.replace(we,be);return function(e){var i="undefined"!=typeof e.getAttributeNode&&e.getAttributeNode("id");return i&&i.value===t}},C.find.ID=function(e,t){if("undefined"!=typeof t.getElementById&&L){var i,n,s,r=t.getElementById(e);if(r){if(i=r.getAttributeNode("id"),i&&i.value===e)return[r];for(s=t.getElementsByName(e),n=0;r=s[n++];)if(i=r.getAttributeNode("id"),i&&i.value===e)return[r]}return[]}}),C.find.TAG=T.getElementsByTagName?function(e,t){return"undefined"!=typeof t.getElementsByTagName?t.getElementsByTagName(e):T.qsa?t.querySelectorAll(e):void 0}:function(e,t){var i,n=[],s=0,r=t.getElementsByTagName(e);if("*"===e){for(;i=r[s++];)1===i.nodeType&&n.push(i);return n}return r},C.find.CLASS=T.getElementsByClassName&&function(e,t){if("undefined"!=typeof t.getElementsByClassName&&L)return t.getElementsByClassName(e)},O=[],N=[],(T.qsa=ge.test($.querySelectorAll))&&(s(function(e){A.appendChild(e).innerHTML="<a id='"+j+"'></a><select id='"+j+"-\r\\' msallowcapture=''><option selected=''></option></select>",e.querySelectorAll("[msallowcapture^='']").length&&N.push("[*^$]="+ie+"*(?:''|\"\")"),e.querySelectorAll("[selected]").length||N.push("\\["+ie+"*(?:value|"+te+")"),e.querySelectorAll("[id~="+j+"-]").length||N.push("~="),e.querySelectorAll(":checked").length||N.push(":checked"),e.querySelectorAll("a#"+j+"+*").length||N.push(".#.+[+~]")}),s(function(e){e.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var t=$.createElement("input");t.setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),e.querySelectorAll("[name=d]").length&&N.push("name"+ie+"*[*^$|!~]?="),2!==e.querySelectorAll(":enabled").length&&N.push(":enabled",":disabled"),A.appendChild(e).disabled=!0,2!==e.querySelectorAll(":disabled").length&&N.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),N.push(",.*:")})),(T.matchesSelector=ge.test(H=A.matches||A.webkitMatchesSelector||A.mozMatchesSelector||A.oMatchesSelector||A.msMatchesSelector))&&s(function(e){T.disconnectedMatch=H.call(e,"*"),H.call(e,"[s!='']:x"),O.push("!=",re)}),N=N.length&&new RegExp(N.join("|")),O=O.length&&new RegExp(O.join("|")),t=ge.test(A.compareDocumentPosition),B=t||ge.test(A.contains)?function(e,t){var i=9===e.nodeType?e.documentElement:e,n=t&&t.parentNode;return e===n||!(!n||1!==n.nodeType||!(i.contains?i.contains(n):e.compareDocumentPosition&&16&e.compareDocumentPosition(n)))}:function(e,t){if(t)for(;t=t.parentNode;)if(t===e)return!0;return!1},Y=t?function(e,t){if(e===t)return D=!0,0;var i=!e.compareDocumentPosition-!t.compareDocumentPosition;return i?i:(i=(e.ownerDocument||e)===(t.ownerDocument||t)?e.compareDocumentPosition(t):1,1&i||!T.sortDetached&&t.compareDocumentPosition(e)===i?e===$||e.ownerDocument===R&&B(R,e)?-1:t===$||t.ownerDocument===R&&B(R,t)?1:I?ee(I,e)-ee(I,t):0:4&i?-1:1)}:function(e,t){if(e===t)return D=!0,0;var i,n=0,s=e.parentNode,r=t.parentNode,o=[e],l=[t];if(!s||!r)return e===$?-1:t===$?1:s?-1:r?1:I?ee(I,e)-ee(I,t):0;if(s===r)return a(e,t);for(i=e;i=i.parentNode;)o.unshift(i);for(i=t;i=i.parentNode;)l.unshift(i);for(;o[n]===l[n];)n++;return n?a(o[n],l[n]):o[n]===R?-1:l[n]===R?1:0},$):$},t.matches=function(e,i){return t(e,null,null,i)},t.matchesSelector=function(e,i){if((e.ownerDocument||e)!==$&&P(e),i=i.replace(ce,"='$1']"),T.matchesSelector&&L&&!G[i+" "]&&(!O||!O.test(i))&&(!N||!N.test(i)))try{var n=H.call(e,i);if(n||T.disconnectedMatch||e.document&&11!==e.document.nodeType)return n}catch(e){}return t(i,$,null,[e]).length>0},t.contains=function(e,t){return(e.ownerDocument||e)!==$&&P(e),B(e,t)},t.attr=function(e,t){(e.ownerDocument||e)!==$&&P(e);var i=C.attrHandle[t.toLowerCase()],n=i&&V.call(C.attrHandle,t.toLowerCase())?i(e,t,!L):void 0;return void 0!==n?n:T.attributes||!L?e.getAttribute(t):(n=e.getAttributeNode(t))&&n.specified?n.value:null},t.escape=function(e){return(e+"").replace(xe,Te)},t.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},t.uniqueSort=function(e){var t,i=[],n=0,s=0;if(D=!T.detectDuplicates,I=!T.sortStable&&e.slice(0),e.sort(Y),D){for(;t=e[s++];)t===e[s]&&(n=i.push(s));for(;n--;)e.splice(i[n],1)}return I=null,e},S=t.getText=function(e){var t,i="",n=0,s=e.nodeType;if(s){if(1===s||9===s||11===s){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)i+=S(e)}else if(3===s||4===s)return e.nodeValue}else for(;t=e[n++];)i+=S(t);return i},C=t.selectors={cacheLength:50,createPseudo:n,match:he,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(we,be),e[3]=(e[3]||e[4]||e[5]||"").replace(we,be),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||t.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&t.error(e[0]),e},PSEUDO:function(e){var t,i=!e[6]&&e[2];return he.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":i&&ue.test(i)&&(t=_(i,!0))&&(t=i.indexOf(")",i.length-t)-i.length)&&(e[0]=e[0].slice(0,t),e[2]=i.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(we,be).toLowerCase();return"*"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=q[e+" "];return t||(t=new RegExp("(^|"+ie+")"+e+"("+ie+"|$)"))&&q(e,function(e){return t.test("string"==typeof e.className&&e.className||"undefined"!=typeof e.getAttribute&&e.getAttribute("class")||"")})},ATTR:function(e,i,n){return function(s){var r=t.attr(s,e);return null==r?"!="===i:!i||(r+="","="===i?r===n:"!="===i?r!==n:"^="===i?n&&0===r.indexOf(n):"*="===i?n&&r.indexOf(n)>-1:"$="===i?n&&r.slice(-n.length)===n:"~="===i?(" "+r.replace(ae," ")+" ").indexOf(n)>-1:"|="===i&&(r===n||r.slice(0,n.length+1)===n+"-"))}},CHILD:function(e,t,i,n,s){var r="nth"!==e.slice(0,3),a="last"!==e.slice(-4),o="of-type"===t;return 1===n&&0===s?function(e){return!!e.parentNode}:function(t,i,l){var p,c,u,d,h,f,m=r!==a?"nextSibling":"previousSibling",g=t.parentNode,v=o&&t.nodeName.toLowerCase(),y=!l&&!o,w=!1;if(g){if(r){for(;m;){for(d=t;d=d[m];)if(o?d.nodeName.toLowerCase()===v:1===d.nodeType)return!1;f=m="only"===e&&!f&&"nextSibling"}return!0}if(f=[a?g.firstChild:g.lastChild],a&&y){for(d=g,u=d[j]||(d[j]={}),c=u[d.uniqueID]||(u[d.uniqueID]={}),p=c[e]||[],h=p[0]===F&&p[1],w=h&&p[2],d=h&&g.childNodes[h];d=++h&&d&&d[m]||(w=h=0)||f.pop();)if(1===d.nodeType&&++w&&d===t){c[e]=[F,h,w];break}}else if(y&&(d=t,u=d[j]||(d[j]={}),c=u[d.uniqueID]||(u[d.uniqueID]={}),p=c[e]||[],h=p[0]===F&&p[1],w=h),w===!1)for(;(d=++h&&d&&d[m]||(w=h=0)||f.pop())&&((o?d.nodeName.toLowerCase()!==v:1!==d.nodeType)||!++w||(y&&(u=d[j]||(d[j]={}),c=u[d.uniqueID]||(u[d.uniqueID]={}),c[e]=[F,w]),d!==t)););return w-=s,w===n||w%n===0&&w/n>=0}}},PSEUDO:function(e,i){var s,r=C.pseudos[e]||C.setFilters[e.toLowerCase()]||t.error("unsupported pseudo: "+e);return r[j]?r(i):r.length>1?(s=[e,e,"",i],C.setFilters.hasOwnProperty(e.toLowerCase())?n(function(e,t){for(var n,s=r(e,i),a=s.length;a--;)n=ee(e,s[a]),e[n]=!(t[n]=s[a])}):function(e){return r(e,0,s)}):r}},pseudos:{not:n(function(e){var t=[],i=[],s=k(e.replace(oe,"$1"));return s[j]?n(function(e,t,i,n){for(var r,a=s(e,null,n,[]),o=e.length;o--;)(r=a[o])&&(e[o]=!(t[o]=r))}):function(e,n,r){
return t[0]=e,s(t,null,r,i),t[0]=null,!i.pop()}}),has:n(function(e){return function(i){return t(e,i).length>0}}),contains:n(function(e){return e=e.replace(we,be),function(t){return(t.textContent||t.innerText||S(t)).indexOf(e)>-1}}),lang:n(function(e){return de.test(e||"")||t.error("unsupported lang: "+e),e=e.replace(we,be).toLowerCase(),function(t){var i;do if(i=L?t.lang:t.getAttribute("xml:lang")||t.getAttribute("lang"))return i=i.toLowerCase(),i===e||0===i.indexOf(e+"-");while((t=t.parentNode)&&1===t.nodeType);return!1}}),target:function(t){var i=e.location&&e.location.hash;return i&&i.slice(1)===t.id},root:function(e){return e===A},focus:function(e){return e===$.activeElement&&(!$.hasFocus||$.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:p(!1),disabled:p(!0),checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,e.selected===!0},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!C.pseudos.empty(e)},header:function(e){return me.test(e.nodeName)},input:function(e){return fe.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},text:function(e){var t;return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(t=e.getAttribute("type"))||"text"===t.toLowerCase())},first:c(function(){return[0]}),last:c(function(e,t){return[t-1]}),eq:c(function(e,t,i){return[i<0?i+t:i]}),even:c(function(e,t){for(var i=0;i<t;i+=2)e.push(i);return e}),odd:c(function(e,t){for(var i=1;i<t;i+=2)e.push(i);return e}),lt:c(function(e,t,i){for(var n=i<0?i+t:i;--n>=0;)e.push(n);return e}),gt:c(function(e,t,i){for(var n=i<0?i+t:i;++n<t;)e.push(n);return e})}},C.pseudos.nth=C.pseudos.eq;for(x in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})C.pseudos[x]=o(x);for(x in{submit:!0,reset:!0})C.pseudos[x]=l(x);return d.prototype=C.filters=C.pseudos,C.setFilters=new d,_=t.tokenize=function(e,i){var n,s,r,a,o,l,p,c=X[e+" "];if(c)return i?0:c.slice(0);for(o=e,l=[],p=C.preFilter;o;){n&&!(s=le.exec(o))||(s&&(o=o.slice(s[0].length)||o),l.push(r=[])),n=!1,(s=pe.exec(o))&&(n=s.shift(),r.push({value:n,type:s[0].replace(oe," ")}),o=o.slice(n.length));for(a in C.filter)!(s=he[a].exec(o))||p[a]&&!(s=p[a](s))||(n=s.shift(),r.push({value:n,type:a,matches:s}),o=o.slice(n.length));if(!n)break}return i?o.length:o?t.error(e):X(e,l).slice(0)},k=t.compile=function(e,t){var i,n=[],s=[],r=G[e+" "];if(!r){for(t||(t=_(e)),i=t.length;i--;)r=w(t[i]),r[j]?n.push(r):s.push(r);r=G(e,b(s,n)),r.selector=e}return r},M=t.select=function(e,t,i,n){var s,r,a,o,l,p="function"==typeof e&&e,c=!n&&_(e=p.selector||e);if(i=i||[],1===c.length){if(r=c[0]=c[0].slice(0),r.length>2&&"ID"===(a=r[0]).type&&9===t.nodeType&&L&&C.relative[r[1].type]){if(t=(C.find.ID(a.matches[0].replace(we,be),t)||[])[0],!t)return i;p&&(t=t.parentNode),e=e.slice(r.shift().value.length)}for(s=he.needsContext.test(e)?0:r.length;s--&&(a=r[s],!C.relative[o=a.type]);)if((l=C.find[o])&&(n=l(a.matches[0].replace(we,be),ye.test(r[0].type)&&u(t.parentNode)||t))){if(r.splice(s,1),e=n.length&&h(r),!e)return Z.apply(i,n),i;break}}return(p||k(e,c))(n,t,!L,i,!t||ye.test(e)&&u(t.parentNode)||t),i},T.sortStable=j.split("").sort(Y).join("")===j,T.detectDuplicates=!!D,P(),T.sortDetached=s(function(e){return 1&e.compareDocumentPosition($.createElement("fieldset"))}),s(function(e){return e.innerHTML="<a href='#'></a>","#"===e.firstChild.getAttribute("href")})||r("type|href|height|width",function(e,t,i){if(!i)return e.getAttribute(t,"type"===t.toLowerCase()?1:2)}),T.attributes&&s(function(e){return e.innerHTML="<input/>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")})||r("value",function(e,t,i){if(!i&&"input"===e.nodeName.toLowerCase())return e.defaultValue}),s(function(e){return null==e.getAttribute("disabled")})||r(te,function(e,t,i){var n;if(!i)return e[t]===!0?t.toLowerCase():(n=e.getAttributeNode(t))&&n.specified?n.value:null}),t}(e);fe.find=we,fe.expr=we.selectors,fe.expr[":"]=fe.expr.pseudos,fe.uniqueSort=fe.unique=we.uniqueSort,fe.text=we.getText,fe.isXMLDoc=we.isXML,fe.contains=we.contains,fe.escapeSelector=we.escape;var be=function(e,t,i){for(var n=[],s=void 0!==i;(e=e[t])&&9!==e.nodeType;)if(1===e.nodeType){if(s&&fe(e).is(i))break;n.push(e)}return n},xe=function(e,t){for(var i=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&i.push(e);return i},Te=fe.expr.match.needsContext,Ce=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i,Se=/^.[^:#\[\.,]*$/;fe.filter=function(e,t,i){var n=t[0];return i&&(e=":not("+e+")"),1===t.length&&1===n.nodeType?fe.find.matchesSelector(n,e)?[n]:[]:fe.find.matches(e,fe.grep(t,function(e){return 1===e.nodeType}))},fe.fn.extend({find:function(e){var t,i,n=this.length,s=this;if("string"!=typeof e)return this.pushStack(fe(e).filter(function(){for(t=0;t<n;t++)if(fe.contains(s[t],this))return!0}));for(i=this.pushStack([]),t=0;t<n;t++)fe.find(e,s[t],i);return n>1?fe.uniqueSort(i):i},filter:function(e){return this.pushStack(s(this,e||[],!1))},not:function(e){return this.pushStack(s(this,e||[],!0))},is:function(e){return!!s(this,"string"==typeof e&&Te.test(e)?fe(e):e||[],!1).length}});var Ee,_e=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,ke=fe.fn.init=function(e,t,i){var n,s;if(!e)return this;if(i=i||Ee,"string"==typeof e){if(n="<"===e[0]&&">"===e[e.length-1]&&e.length>=3?[null,e,null]:_e.exec(e),!n||!n[1]&&t)return!t||t.jquery?(t||i).find(e):this.constructor(t).find(e);if(n[1]){if(t=t instanceof fe?t[0]:t,fe.merge(this,fe.parseHTML(n[1],t&&t.nodeType?t.ownerDocument||t:te,!0)),Ce.test(n[1])&&fe.isPlainObject(t))for(n in t)fe.isFunction(this[n])?this[n](t[n]):this.attr(n,t[n]);return this}return s=te.getElementById(n[2]),s&&(this[0]=s,this.length=1),this}return e.nodeType?(this[0]=e,this.length=1,this):fe.isFunction(e)?void 0!==i.ready?i.ready(e):e(fe):fe.makeArray(e,this)};ke.prototype=fe.fn,Ee=fe(te);var Me=/^(?:parents|prev(?:Until|All))/,ze={children:!0,contents:!0,next:!0,prev:!0};fe.fn.extend({has:function(e){var t=fe(e,this),i=t.length;return this.filter(function(){for(var e=0;e<i;e++)if(fe.contains(this,t[e]))return!0})},closest:function(e,t){var i,n=0,s=this.length,r=[],a="string"!=typeof e&&fe(e);if(!Te.test(e))for(;n<s;n++)for(i=this[n];i&&i!==t;i=i.parentNode)if(i.nodeType<11&&(a?a.index(i)>-1:1===i.nodeType&&fe.find.matchesSelector(i,e))){r.push(i);break}return this.pushStack(r.length>1?fe.uniqueSort(r):r)},index:function(e){return e?"string"==typeof e?ae.call(fe(e),this[0]):ae.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(fe.uniqueSort(fe.merge(this.get(),fe(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),fe.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return be(e,"parentNode")},parentsUntil:function(e,t,i){return be(e,"parentNode",i)},next:function(e){return r(e,"nextSibling")},prev:function(e){return r(e,"previousSibling")},nextAll:function(e){return be(e,"nextSibling")},prevAll:function(e){return be(e,"previousSibling")},nextUntil:function(e,t,i){return be(e,"nextSibling",i)},prevUntil:function(e,t,i){return be(e,"previousSibling",i)},siblings:function(e){return xe((e.parentNode||{}).firstChild,e)},children:function(e){return xe(e.firstChild)},contents:function(e){return e.contentDocument||fe.merge([],e.childNodes)}},function(e,t){fe.fn[e]=function(i,n){var s=fe.map(this,t,i);return"Until"!==e.slice(-5)&&(n=i),n&&"string"==typeof n&&(s=fe.filter(n,s)),this.length>1&&(ze[e]||fe.uniqueSort(s),Me.test(e)&&s.reverse()),this.pushStack(s)}});var Ie=/[^\x20\t\r\n\f]+/g;fe.Callbacks=function(e){e="string"==typeof e?a(e):fe.extend({},e);var t,i,n,s,r=[],o=[],l=-1,p=function(){for(s=e.once,n=t=!0;o.length;l=-1)for(i=o.shift();++l<r.length;)r[l].apply(i[0],i[1])===!1&&e.stopOnFalse&&(l=r.length,i=!1);e.memory||(i=!1),t=!1,s&&(r=i?[]:"")},c={add:function(){return r&&(i&&!t&&(l=r.length-1,o.push(i)),function t(i){fe.each(i,function(i,n){fe.isFunction(n)?e.unique&&c.has(n)||r.push(n):n&&n.length&&"string"!==fe.type(n)&&t(n)})}(arguments),i&&!t&&p()),this},remove:function(){return fe.each(arguments,function(e,t){for(var i;(i=fe.inArray(t,r,i))>-1;)r.splice(i,1),i<=l&&l--}),this},has:function(e){return e?fe.inArray(e,r)>-1:r.length>0},empty:function(){return r&&(r=[]),this},disable:function(){return s=o=[],r=i="",this},disabled:function(){return!r},lock:function(){return s=o=[],i||t||(r=i=""),this},locked:function(){return!!s},fireWith:function(e,i){return s||(i=i||[],i=[e,i.slice?i.slice():i],o.push(i),t||p()),this},fire:function(){return c.fireWith(this,arguments),this},fired:function(){return!!n}};return c},fe.extend({Deferred:function(t){var i=[["notify","progress",fe.Callbacks("memory"),fe.Callbacks("memory"),2],["resolve","done",fe.Callbacks("once memory"),fe.Callbacks("once memory"),0,"resolved"],["reject","fail",fe.Callbacks("once memory"),fe.Callbacks("once memory"),1,"rejected"]],n="pending",s={state:function(){return n},always:function(){return r.done(arguments).fail(arguments),this},catch:function(e){return s.then(null,e)},pipe:function(){var e=arguments;return fe.Deferred(function(t){fe.each(i,function(i,n){var s=fe.isFunction(e[n[4]])&&e[n[4]];r[n[1]](function(){var e=s&&s.apply(this,arguments);e&&fe.isFunction(e.promise)?e.promise().progress(t.notify).done(t.resolve).fail(t.reject):t[n[0]+"With"](this,s?[e]:arguments)})}),e=null}).promise()},then:function(t,n,s){function r(t,i,n,s){return function(){var p=this,c=arguments,u=function(){var e,u;if(!(t<a)){if(e=n.apply(p,c),e===i.promise())throw new TypeError("Thenable self-resolution");u=e&&("object"==typeof e||"function"==typeof e)&&e.then,fe.isFunction(u)?s?u.call(e,r(a,i,o,s),r(a,i,l,s)):(a++,u.call(e,r(a,i,o,s),r(a,i,l,s),r(a,i,o,i.notifyWith))):(n!==o&&(p=void 0,c=[e]),(s||i.resolveWith)(p,c))}},d=s?u:function(){try{u()}catch(e){fe.Deferred.exceptionHook&&fe.Deferred.exceptionHook(e,d.stackTrace),t+1>=a&&(n!==l&&(p=void 0,c=[e]),i.rejectWith(p,c))}};t?d():(fe.Deferred.getStackHook&&(d.stackTrace=fe.Deferred.getStackHook()),e.setTimeout(d))}}var a=0;return fe.Deferred(function(e){i[0][3].add(r(0,e,fe.isFunction(s)?s:o,e.notifyWith)),i[1][3].add(r(0,e,fe.isFunction(t)?t:o)),i[2][3].add(r(0,e,fe.isFunction(n)?n:l))}).promise()},promise:function(e){return null!=e?fe.extend(e,s):s}},r={};return fe.each(i,function(e,t){var a=t[2],o=t[5];s[t[1]]=a.add,o&&a.add(function(){n=o},i[3-e][2].disable,i[0][2].lock),a.add(t[3].fire),r[t[0]]=function(){return r[t[0]+"With"](this===r?void 0:this,arguments),this},r[t[0]+"With"]=a.fireWith}),s.promise(r),t&&t.call(r,r),r},when:function(e){var t=arguments.length,i=t,n=Array(i),s=ne.call(arguments),r=fe.Deferred(),a=function(e){return function(i){n[e]=this,s[e]=arguments.length>1?ne.call(arguments):i,--t||r.resolveWith(n,s)}};if(t<=1&&(p(e,r.done(a(i)).resolve,r.reject),"pending"===r.state()||fe.isFunction(s[i]&&s[i].then)))return r.then();for(;i--;)p(s[i],a(i),r.reject);return r.promise()}});var De=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;fe.Deferred.exceptionHook=function(t,i){e.console&&e.console.warn&&t&&De.test(t.name)&&e.console.warn("jQuery.Deferred exception: "+t.message,t.stack,i)},fe.readyException=function(t){e.setTimeout(function(){throw t})};var Pe=fe.Deferred();fe.fn.ready=function(e){return Pe.then(e).catch(function(e){fe.readyException(e)}),this},fe.extend({isReady:!1,readyWait:1,holdReady:function(e){e?fe.readyWait++:fe.ready(!0)},ready:function(e){(e===!0?--fe.readyWait:fe.isReady)||(fe.isReady=!0,e!==!0&&--fe.readyWait>0||Pe.resolveWith(te,[fe]))}}),fe.ready.then=Pe.then,"complete"===te.readyState||"loading"!==te.readyState&&!te.documentElement.doScroll?e.setTimeout(fe.ready):(te.addEventListener("DOMContentLoaded",c),e.addEventListener("load",c));var $e=function(e,t,i,n,s,r,a){var o=0,l=e.length,p=null==i;if("object"===fe.type(i)){s=!0;for(o in i)$e(e,t,o,i[o],!0,r,a)}else if(void 0!==n&&(s=!0,fe.isFunction(n)||(a=!0),p&&(a?(t.call(e,n),t=null):(p=t,t=function(e,t,i){return p.call(fe(e),i)})),t))for(;o<l;o++)t(e[o],i,a?n:n.call(e[o],o,t(e[o],i)));return s?e:p?t.call(e):l?t(e[0],i):r},Ae=function(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType};u.uid=1,u.prototype={cache:function(e){var t=e[this.expando];return t||(t={},Ae(e)&&(e.nodeType?e[this.expando]=t:Object.defineProperty(e,this.expando,{value:t,configurable:!0}))),t},set:function(e,t,i){var n,s=this.cache(e);if("string"==typeof t)s[fe.camelCase(t)]=i;else for(n in t)s[fe.camelCase(n)]=t[n];return s},get:function(e,t){return void 0===t?this.cache(e):e[this.expando]&&e[this.expando][fe.camelCase(t)]},access:function(e,t,i){return void 0===t||t&&"string"==typeof t&&void 0===i?this.get(e,t):(this.set(e,t,i),void 0!==i?i:t)},remove:function(e,t){var i,n=e[this.expando];if(void 0!==n){if(void 0!==t){fe.isArray(t)?t=t.map(fe.camelCase):(t=fe.camelCase(t),t=t in n?[t]:t.match(Ie)||[]),i=t.length;for(;i--;)delete n[t[i]]}(void 0===t||fe.isEmptyObject(n))&&(e.nodeType?e[this.expando]=void 0:delete e[this.expando])}},hasData:function(e){var t=e[this.expando];return void 0!==t&&!fe.isEmptyObject(t)}};var Le=new u,Ne=new u,Oe=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,He=/[A-Z]/g;fe.extend({hasData:function(e){return Ne.hasData(e)||Le.hasData(e)},data:function(e,t,i){return Ne.access(e,t,i)},removeData:function(e,t){Ne.remove(e,t)},_data:function(e,t,i){return Le.access(e,t,i)},_removeData:function(e,t){Le.remove(e,t)}}),fe.fn.extend({data:function(e,t){var i,n,s,r=this[0],a=r&&r.attributes;if(void 0===e){if(this.length&&(s=Ne.get(r),1===r.nodeType&&!Le.get(r,"hasDataAttrs"))){for(i=a.length;i--;)a[i]&&(n=a[i].name,0===n.indexOf("data-")&&(n=fe.camelCase(n.slice(5)),h(r,n,s[n])));Le.set(r,"hasDataAttrs",!0)}return s}return"object"==typeof e?this.each(function(){Ne.set(this,e)}):$e(this,function(t){var i;if(r&&void 0===t){if(i=Ne.get(r,e),void 0!==i)return i;if(i=h(r,e),void 0!==i)return i}else this.each(function(){Ne.set(this,e,t)})},null,t,arguments.length>1,null,!0)},removeData:function(e){return this.each(function(){Ne.remove(this,e)})}}),fe.extend({queue:function(e,t,i){var n;if(e)return t=(t||"fx")+"queue",n=Le.get(e,t),i&&(!n||fe.isArray(i)?n=Le.access(e,t,fe.makeArray(i)):n.push(i)),n||[]},dequeue:function(e,t){t=t||"fx";var i=fe.queue(e,t),n=i.length,s=i.shift(),r=fe._queueHooks(e,t),a=function(){fe.dequeue(e,t)};"inprogress"===s&&(s=i.shift(),n--),s&&("fx"===t&&i.unshift("inprogress"),delete r.stop,s.call(e,a,r)),!n&&r&&r.empty.fire()},_queueHooks:function(e,t){var i=t+"queueHooks";return Le.get(e,i)||Le.access(e,i,{empty:fe.Callbacks("once memory").add(function(){Le.remove(e,[t+"queue",i])})})}}),fe.fn.extend({queue:function(e,t){var i=2;return"string"!=typeof e&&(t=e,e="fx",i--),arguments.length<i?fe.queue(this[0],e):void 0===t?this:this.each(function(){var i=fe.queue(this,e,t);fe._queueHooks(this,e),"fx"===e&&"inprogress"!==i[0]&&fe.dequeue(this,e)})},dequeue:function(e){return this.each(function(){fe.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,t){var i,n=1,s=fe.Deferred(),r=this,a=this.length,o=function(){--n||s.resolveWith(r,[r])};for("string"!=typeof e&&(t=e,e=void 0),e=e||"fx";a--;)i=Le.get(r[a],e+"queueHooks"),i&&i.empty&&(n++,i.empty.add(o));return o(),s.promise(t)}});var Be=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,je=new RegExp("^(?:([+-])=|)("+Be+")([a-z%]*)$","i"),Re=["Top","Right","Bottom","Left"],Fe=function(e,t){return e=t||e,"none"===e.style.display||""===e.style.display&&fe.contains(e.ownerDocument,e)&&"none"===fe.css(e,"display")},We=function(e,t,i,n){var s,r,a={};for(r in t)a[r]=e.style[r],e.style[r]=t[r];s=i.apply(e,n||[]);for(r in t)e.style[r]=a[r];return s},qe={};fe.fn.extend({show:function(){return g(this,!0)},hide:function(){return g(this)},toggle:function(e){return"boolean"==typeof e?e?this.show():this.hide():this.each(function(){Fe(this)?fe(this).show():fe(this).hide()})}});var Xe=/^(?:checkbox|radio)$/i,Ge=/<([a-z][^\/\0>\x20\t\r\n\f]+)/i,Ye=/^$|\/(?:java|ecma)script/i,Ve={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};Ve.optgroup=Ve.option,Ve.tbody=Ve.tfoot=Ve.colgroup=Ve.caption=Ve.thead,Ve.th=Ve.td;var Ue=/<|&#?\w+;/;!function(){var e=te.createDocumentFragment(),t=e.appendChild(te.createElement("div")),i=te.createElement("input");i.setAttribute("type","radio"),i.setAttribute("checked","checked"),i.setAttribute("name","t"),t.appendChild(i),de.checkClone=t.cloneNode(!0).cloneNode(!0).lastChild.checked,t.innerHTML="<textarea>x</textarea>",de.noCloneChecked=!!t.cloneNode(!0).lastChild.defaultValue}();var Qe=te.documentElement,Ke=/^key/,Ze=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,Je=/^([^.]*)(?:\.(.+)|)/;fe.event={global:{},add:function(e,t,i,n,s){var r,a,o,l,p,c,u,d,h,f,m,g=Le.get(e);if(g)for(i.handler&&(r=i,i=r.handler,s=r.selector),s&&fe.find.matchesSelector(Qe,s),i.guid||(i.guid=fe.guid++),(l=g.events)||(l=g.events={}),(a=g.handle)||(a=g.handle=function(t){return"undefined"!=typeof fe&&fe.event.triggered!==t.type?fe.event.dispatch.apply(e,arguments):void 0}),t=(t||"").match(Ie)||[""],p=t.length;p--;)o=Je.exec(t[p])||[],h=m=o[1],f=(o[2]||"").split(".").sort(),h&&(u=fe.event.special[h]||{},h=(s?u.delegateType:u.bindType)||h,u=fe.event.special[h]||{},c=fe.extend({type:h,origType:m,data:n,handler:i,guid:i.guid,selector:s,needsContext:s&&fe.expr.match.needsContext.test(s),namespace:f.join(".")},r),(d=l[h])||(d=l[h]=[],d.delegateCount=0,u.setup&&u.setup.call(e,n,f,a)!==!1||e.addEventListener&&e.addEventListener(h,a)),u.add&&(u.add.call(e,c),c.handler.guid||(c.handler.guid=i.guid)),s?d.splice(d.delegateCount++,0,c):d.push(c),fe.event.global[h]=!0)},remove:function(e,t,i,n,s){var r,a,o,l,p,c,u,d,h,f,m,g=Le.hasData(e)&&Le.get(e);if(g&&(l=g.events)){for(t=(t||"").match(Ie)||[""],p=t.length;p--;)if(o=Je.exec(t[p])||[],h=m=o[1],f=(o[2]||"").split(".").sort(),h){for(u=fe.event.special[h]||{},h=(n?u.delegateType:u.bindType)||h,d=l[h]||[],o=o[2]&&new RegExp("(^|\\.)"+f.join("\\.(?:.*\\.|)")+"(\\.|$)"),a=r=d.length;r--;)c=d[r],!s&&m!==c.origType||i&&i.guid!==c.guid||o&&!o.test(c.namespace)||n&&n!==c.selector&&("**"!==n||!c.selector)||(d.splice(r,1),c.selector&&d.delegateCount--,u.remove&&u.remove.call(e,c));a&&!d.length&&(u.teardown&&u.teardown.call(e,f,g.handle)!==!1||fe.removeEvent(e,h,g.handle),delete l[h])}else for(h in l)fe.event.remove(e,h+t[p],i,n,!0);fe.isEmptyObject(l)&&Le.remove(e,"handle events")}},dispatch:function(e){var t,i,n,s,r,a,o=fe.event.fix(e),l=new Array(arguments.length),p=(Le.get(this,"events")||{})[o.type]||[],c=fe.event.special[o.type]||{};for(l[0]=o,t=1;t<arguments.length;t++)l[t]=arguments[t];if(o.delegateTarget=this,!c.preDispatch||c.preDispatch.call(this,o)!==!1){for(a=fe.event.handlers.call(this,o,p),t=0;(s=a[t++])&&!o.isPropagationStopped();)for(o.currentTarget=s.elem,i=0;(r=s.handlers[i++])&&!o.isImmediatePropagationStopped();)o.rnamespace&&!o.rnamespace.test(r.namespace)||(o.handleObj=r,o.data=r.data,n=((fe.event.special[r.origType]||{}).handle||r.handler).apply(s.elem,l),void 0!==n&&(o.result=n)===!1&&(o.preventDefault(),o.stopPropagation()));return c.postDispatch&&c.postDispatch.call(this,o),o.result}},handlers:function(e,t){var i,n,s,r,a,o=[],l=t.delegateCount,p=e.target;if(l&&p.nodeType&&!("click"===e.type&&e.button>=1))for(;p!==this;p=p.parentNode||this)if(1===p.nodeType&&("click"!==e.type||p.disabled!==!0)){for(r=[],a={},i=0;i<l;i++)n=t[i],s=n.selector+" ",void 0===a[s]&&(a[s]=n.needsContext?fe(s,this).index(p)>-1:fe.find(s,this,null,[p]).length),a[s]&&r.push(n);r.length&&o.push({elem:p,handlers:r})}return p=this,l<t.length&&o.push({elem:p,handlers:t.slice(l)}),o},addProp:function(e,t){Object.defineProperty(fe.Event.prototype,e,{enumerable:!0,configurable:!0,get:fe.isFunction(t)?function(){if(this.originalEvent)return t(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[e]},set:function(t){Object.defineProperty(this,e,{enumerable:!0,configurable:!0,writable:!0,value:t})}})},fix:function(e){return e[fe.expando]?e:new fe.Event(e)},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==T()&&this.focus)return this.focus(),!1},delegateType:"focusin"},blur:{trigger:function(){if(this===T()&&this.blur)return this.blur(),!1},delegateType:"focusout"},click:{trigger:function(){if("checkbox"===this.type&&this.click&&fe.nodeName(this,"input"))return this.click(),!1},_default:function(e){return fe.nodeName(e.target,"a")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}}},fe.removeEvent=function(e,t,i){e.removeEventListener&&e.removeEventListener(t,i)},fe.Event=function(e,t){return this instanceof fe.Event?(e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&e.returnValue===!1?b:x,this.target=e.target&&3===e.target.nodeType?e.target.parentNode:e.target,this.currentTarget=e.currentTarget,this.relatedTarget=e.relatedTarget):this.type=e,t&&fe.extend(this,t),this.timeStamp=e&&e.timeStamp||fe.now(),void(this[fe.expando]=!0)):new fe.Event(e,t)},fe.Event.prototype={constructor:fe.Event,isDefaultPrevented:x,isPropagationStopped:x,isImmediatePropagationStopped:x,isSimulated:!1,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=b,e&&!this.isSimulated&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=b,e&&!this.isSimulated&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=b,e&&!this.isSimulated&&e.stopImmediatePropagation(),this.stopPropagation()}},fe.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,char:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(e){var t=e.button;return null==e.which&&Ke.test(e.type)?null!=e.charCode?e.charCode:e.keyCode:!e.which&&void 0!==t&&Ze.test(e.type)?1&t?1:2&t?3:4&t?2:0:e.which}},fe.event.addProp),fe.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(e,t){fe.event.special[e]={delegateType:t,bindType:t,handle:function(e){var i,n=this,s=e.relatedTarget,r=e.handleObj;return s&&(s===n||fe.contains(n,s))||(e.type=r.origType,i=r.handler.apply(this,arguments),e.type=t),i}}}),fe.fn.extend({on:function(e,t,i,n){return C(this,e,t,i,n)},one:function(e,t,i,n){return C(this,e,t,i,n,1)},off:function(e,t,i){var n,s;if(e&&e.preventDefault&&e.handleObj)return n=e.handleObj,fe(e.delegateTarget).off(n.namespace?n.origType+"."+n.namespace:n.origType,n.selector,n.handler),this;if("object"==typeof e){for(s in e)this.off(s,t,e[s]);return this}return t!==!1&&"function"!=typeof t||(i=t,t=void 0),i===!1&&(i=x),this.each(function(){fe.event.remove(this,e,i,t)})}});var et=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,tt=/<script|<style|<link/i,it=/checked\s*(?:[^=]|=\s*.checked.)/i,nt=/^true\/(.*)/,st=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;fe.extend({htmlPrefilter:function(e){return e.replace(et,"<$1></$2>")},clone:function(e,t,i){var n,s,r,a,o=e.cloneNode(!0),l=fe.contains(e.ownerDocument,e);if(!(de.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||fe.isXMLDoc(e)))for(a=v(o),r=v(e),n=0,s=r.length;n<s;n++)M(r[n],a[n]);if(t)if(i)for(r=r||v(e),a=a||v(o),n=0,s=r.length;n<s;n++)k(r[n],a[n]);else k(e,o);return a=v(o,"script"),a.length>0&&y(a,!l&&v(e,"script")),o},cleanData:function(e){for(var t,i,n,s=fe.event.special,r=0;void 0!==(i=e[r]);r++)if(Ae(i)){if(t=i[Le.expando]){if(t.events)for(n in t.events)s[n]?fe.event.remove(i,n):fe.removeEvent(i,n,t.handle);i[Le.expando]=void 0}i[Ne.expando]&&(i[Ne.expando]=void 0)}}}),fe.fn.extend({detach:function(e){return I(this,e,!0)},remove:function(e){return I(this,e)},text:function(e){return $e(this,function(e){return void 0===e?fe.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=e)})},null,e,arguments.length)},append:function(){return z(this,arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=S(this,e);t.appendChild(e)}})},prepend:function(){return z(this,arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=S(this,e);t.insertBefore(e,t.firstChild)}})},before:function(){return z(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return z(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&(fe.cleanData(v(e,!1)),e.textContent="");return this},clone:function(e,t){return e=null!=e&&e,t=null==t?e:t,this.map(function(){return fe.clone(this,e,t)})},html:function(e){return $e(this,function(e){var t=this[0]||{},i=0,n=this.length;if(void 0===e&&1===t.nodeType)return t.innerHTML;if("string"==typeof e&&!tt.test(e)&&!Ve[(Ge.exec(e)||["",""])[1].toLowerCase()]){e=fe.htmlPrefilter(e);try{for(;i<n;i++)t=this[i]||{},1===t.nodeType&&(fe.cleanData(v(t,!1)),t.innerHTML=e);t=0}catch(e){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var e=[];return z(this,arguments,function(t){var i=this.parentNode;fe.inArray(this,e)<0&&(fe.cleanData(v(this)),i&&i.replaceChild(t,this))},e)}}),fe.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,t){fe.fn[e]=function(e){for(var i,n=[],s=fe(e),r=s.length-1,a=0;a<=r;a++)i=a===r?this:this.clone(!0),fe(s[a])[t](i),re.apply(n,i.get());return this.pushStack(n)}});var rt=/^margin/,at=new RegExp("^("+Be+")(?!px)[a-z%]+$","i"),ot=function(t){var i=t.ownerDocument.defaultView;return i&&i.opener||(i=e),i.getComputedStyle(t)};!function(){function t(){if(o){o.style.cssText="box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%",o.innerHTML="",Qe.appendChild(a);var t=e.getComputedStyle(o);i="1%"!==t.top,r="2px"===t.marginLeft,n="4px"===t.width,o.style.marginRight="50%",s="4px"===t.marginRight,Qe.removeChild(a),o=null}}var i,n,s,r,a=te.createElement("div"),o=te.createElement("div");o.style&&(o.style.backgroundClip="content-box",o.cloneNode(!0).style.backgroundClip="",de.clearCloneStyle="content-box"===o.style.backgroundClip,a.style.cssText="border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute",a.appendChild(o),fe.extend(de,{pixelPosition:function(){return t(),i},boxSizingReliable:function(){return t(),n},pixelMarginRight:function(){return t(),s},reliableMarginLeft:function(){return t(),r}}))}();var lt=/^(none|table(?!-c[ea]).+)/,pt={position:"absolute",visibility:"hidden",display:"block"},ct={letterSpacing:"0",fontWeight:"400"},ut=["Webkit","Moz","ms"],dt=te.createElement("div").style;fe.extend({cssHooks:{opacity:{get:function(e,t){if(t){var i=D(e,"opacity");return""===i?"1":i}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{float:"cssFloat"},style:function(e,t,i,n){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var s,r,a,o=fe.camelCase(t),l=e.style;return t=fe.cssProps[o]||(fe.cssProps[o]=$(o)||o),a=fe.cssHooks[t]||fe.cssHooks[o],void 0===i?a&&"get"in a&&void 0!==(s=a.get(e,!1,n))?s:l[t]:(r=typeof i,"string"===r&&(s=je.exec(i))&&s[1]&&(i=f(e,t,s),r="number"),void(null!=i&&i===i&&("number"===r&&(i+=s&&s[3]||(fe.cssNumber[o]?"":"px")),de.clearCloneStyle||""!==i||0!==t.indexOf("background")||(l[t]="inherit"),a&&"set"in a&&void 0===(i=a.set(e,i,n))||(l[t]=i))))}},css:function(e,t,i,n){var s,r,a,o=fe.camelCase(t);return t=fe.cssProps[o]||(fe.cssProps[o]=$(o)||o),a=fe.cssHooks[t]||fe.cssHooks[o],a&&"get"in a&&(s=a.get(e,!0,i)),void 0===s&&(s=D(e,t,n)),"normal"===s&&t in ct&&(s=ct[t]),""===i||i?(r=parseFloat(s),i===!0||isFinite(r)?r||0:s):s}}),fe.each(["height","width"],function(e,t){fe.cssHooks[t]={get:function(e,i,n){if(i)return!lt.test(fe.css(e,"display"))||e.getClientRects().length&&e.getBoundingClientRect().width?N(e,t,n):We(e,pt,function(){return N(e,t,n)})},set:function(e,i,n){var s,r=n&&ot(e),a=n&&L(e,t,n,"border-box"===fe.css(e,"boxSizing",!1,r),r);return a&&(s=je.exec(i))&&"px"!==(s[3]||"px")&&(e.style[t]=i,i=fe.css(e,t)),A(e,i,a)}}}),fe.cssHooks.marginLeft=P(de.reliableMarginLeft,function(e,t){if(t)return(parseFloat(D(e,"marginLeft"))||e.getBoundingClientRect().left-We(e,{marginLeft:0},function(){return e.getBoundingClientRect().left}))+"px"}),fe.each({margin:"",padding:"",border:"Width"},function(e,t){fe.cssHooks[e+t]={expand:function(i){for(var n=0,s={},r="string"==typeof i?i.split(" "):[i];n<4;n++)s[e+Re[n]+t]=r[n]||r[n-2]||r[0];return s}},rt.test(e)||(fe.cssHooks[e+t].set=A)}),fe.fn.extend({css:function(e,t){return $e(this,function(e,t,i){var n,s,r={},a=0;if(fe.isArray(t)){for(n=ot(e),s=t.length;a<s;a++)r[t[a]]=fe.css(e,t[a],!1,n);return r}return void 0!==i?fe.style(e,t,i):fe.css(e,t)},e,t,arguments.length>1)}}),fe.Tween=O,O.prototype={constructor:O,init:function(e,t,i,n,s,r){this.elem=e,this.prop=i,this.easing=s||fe.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=n,this.unit=r||(fe.cssNumber[i]?"":"px")},cur:function(){var e=O.propHooks[this.prop];return e&&e.get?e.get(this):O.propHooks._default.get(this)},run:function(e){var t,i=O.propHooks[this.prop];return this.options.duration?this.pos=t=fe.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),i&&i.set?i.set(this):O.propHooks._default.set(this),this}},O.prototype.init.prototype=O.prototype,O.propHooks={_default:{get:function(e){var t;return 1!==e.elem.nodeType||null!=e.elem[e.prop]&&null==e.elem.style[e.prop]?e.elem[e.prop]:(t=fe.css(e.elem,e.prop,""),t&&"auto"!==t?t:0)},set:function(e){fe.fx.step[e.prop]?fe.fx.step[e.prop](e):1!==e.elem.nodeType||null==e.elem.style[fe.cssProps[e.prop]]&&!fe.cssHooks[e.prop]?e.elem[e.prop]=e.now:fe.style(e.elem,e.prop,e.now+e.unit)}}},O.propHooks.scrollTop=O.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},fe.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},_default:"swing"},fe.fx=O.prototype.init,fe.fx.step={};var ht,ft,mt=/^(?:toggle|show|hide)$/,gt=/queueHooks$/;fe.Animation=fe.extend(q,{tweeners:{"*":[function(e,t){var i=this.createTween(e,t);return f(i.elem,e,je.exec(t),i),i}]},tweener:function(e,t){fe.isFunction(e)?(t=e,e=["*"]):e=e.match(Ie);for(var i,n=0,s=e.length;n<s;n++)i=e[n],q.tweeners[i]=q.tweeners[i]||[],q.tweeners[i].unshift(t)},prefilters:[F],prefilter:function(e,t){t?q.prefilters.unshift(e):q.prefilters.push(e)}}),fe.speed=function(e,t,i){var n=e&&"object"==typeof e?fe.extend({},e):{complete:i||!i&&t||fe.isFunction(e)&&e,duration:e,easing:i&&t||t&&!fe.isFunction(t)&&t};return fe.fx.off||te.hidden?n.duration=0:"number"!=typeof n.duration&&(n.duration in fe.fx.speeds?n.duration=fe.fx.speeds[n.duration]:n.duration=fe.fx.speeds._default),null!=n.queue&&n.queue!==!0||(n.queue="fx"),n.old=n.complete,n.complete=function(){fe.isFunction(n.old)&&n.old.call(this),n.queue&&fe.dequeue(this,n.queue)},n},fe.fn.extend({fadeTo:function(e,t,i,n){
return this.filter(Fe).css("opacity",0).show().end().animate({opacity:t},e,i,n)},animate:function(e,t,i,n){var s=fe.isEmptyObject(e),r=fe.speed(t,i,n),a=function(){var t=q(this,fe.extend({},e),r);(s||Le.get(this,"finish"))&&t.stop(!0)};return a.finish=a,s||r.queue===!1?this.each(a):this.queue(r.queue,a)},stop:function(e,t,i){var n=function(e){var t=e.stop;delete e.stop,t(i)};return"string"!=typeof e&&(i=t,t=e,e=void 0),t&&e!==!1&&this.queue(e||"fx",[]),this.each(function(){var t=!0,s=null!=e&&e+"queueHooks",r=fe.timers,a=Le.get(this);if(s)a[s]&&a[s].stop&&n(a[s]);else for(s in a)a[s]&&a[s].stop&&gt.test(s)&&n(a[s]);for(s=r.length;s--;)r[s].elem!==this||null!=e&&r[s].queue!==e||(r[s].anim.stop(i),t=!1,r.splice(s,1));!t&&i||fe.dequeue(this,e)})},finish:function(e){return e!==!1&&(e=e||"fx"),this.each(function(){var t,i=Le.get(this),n=i[e+"queue"],s=i[e+"queueHooks"],r=fe.timers,a=n?n.length:0;for(i.finish=!0,fe.queue(this,e,[]),s&&s.stop&&s.stop.call(this,!0),t=r.length;t--;)r[t].elem===this&&r[t].queue===e&&(r[t].anim.stop(!0),r.splice(t,1));for(t=0;t<a;t++)n[t]&&n[t].finish&&n[t].finish.call(this);delete i.finish})}}),fe.each(["toggle","show","hide"],function(e,t){var i=fe.fn[t];fe.fn[t]=function(e,n,s){return null==e||"boolean"==typeof e?i.apply(this,arguments):this.animate(j(t,!0),e,n,s)}}),fe.each({slideDown:j("show"),slideUp:j("hide"),slideToggle:j("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,t){fe.fn[e]=function(e,i,n){return this.animate(t,e,i,n)}}),fe.timers=[],fe.fx.tick=function(){var e,t=0,i=fe.timers;for(ht=fe.now();t<i.length;t++)e=i[t],e()||i[t]!==e||i.splice(t--,1);i.length||fe.fx.stop(),ht=void 0},fe.fx.timer=function(e){fe.timers.push(e),e()?fe.fx.start():fe.timers.pop()},fe.fx.interval=13,fe.fx.start=function(){ft||(ft=e.requestAnimationFrame?e.requestAnimationFrame(H):e.setInterval(fe.fx.tick,fe.fx.interval))},fe.fx.stop=function(){e.cancelAnimationFrame?e.cancelAnimationFrame(ft):e.clearInterval(ft),ft=null},fe.fx.speeds={slow:600,fast:200,_default:400},fe.fn.delay=function(t,i){return t=fe.fx?fe.fx.speeds[t]||t:t,i=i||"fx",this.queue(i,function(i,n){var s=e.setTimeout(i,t);n.stop=function(){e.clearTimeout(s)}})},function(){var e=te.createElement("input"),t=te.createElement("select"),i=t.appendChild(te.createElement("option"));e.type="checkbox",de.checkOn=""!==e.value,de.optSelected=i.selected,e=te.createElement("input"),e.value="t",e.type="radio",de.radioValue="t"===e.value}();var vt,yt=fe.expr.attrHandle;fe.fn.extend({attr:function(e,t){return $e(this,fe.attr,e,t,arguments.length>1)},removeAttr:function(e){return this.each(function(){fe.removeAttr(this,e)})}}),fe.extend({attr:function(e,t,i){var n,s,r=e.nodeType;if(3!==r&&8!==r&&2!==r)return"undefined"==typeof e.getAttribute?fe.prop(e,t,i):(1===r&&fe.isXMLDoc(e)||(s=fe.attrHooks[t.toLowerCase()]||(fe.expr.match.bool.test(t)?vt:void 0)),void 0!==i?null===i?void fe.removeAttr(e,t):s&&"set"in s&&void 0!==(n=s.set(e,i,t))?n:(e.setAttribute(t,i+""),i):s&&"get"in s&&null!==(n=s.get(e,t))?n:(n=fe.find.attr(e,t),null==n?void 0:n))},attrHooks:{type:{set:function(e,t){if(!de.radioValue&&"radio"===t&&fe.nodeName(e,"input")){var i=e.value;return e.setAttribute("type",t),i&&(e.value=i),t}}}},removeAttr:function(e,t){var i,n=0,s=t&&t.match(Ie);if(s&&1===e.nodeType)for(;i=s[n++];)e.removeAttribute(i)}}),vt={set:function(e,t,i){return t===!1?fe.removeAttr(e,i):e.setAttribute(i,i),i}},fe.each(fe.expr.match.bool.source.match(/\w+/g),function(e,t){var i=yt[t]||fe.find.attr;yt[t]=function(e,t,n){var s,r,a=t.toLowerCase();return n||(r=yt[a],yt[a]=s,s=null!=i(e,t,n)?a:null,yt[a]=r),s}});var wt=/^(?:input|select|textarea|button)$/i,bt=/^(?:a|area)$/i;fe.fn.extend({prop:function(e,t){return $e(this,fe.prop,e,t,arguments.length>1)},removeProp:function(e){return this.each(function(){delete this[fe.propFix[e]||e]})}}),fe.extend({prop:function(e,t,i){var n,s,r=e.nodeType;if(3!==r&&8!==r&&2!==r)return 1===r&&fe.isXMLDoc(e)||(t=fe.propFix[t]||t,s=fe.propHooks[t]),void 0!==i?s&&"set"in s&&void 0!==(n=s.set(e,i,t))?n:e[t]=i:s&&"get"in s&&null!==(n=s.get(e,t))?n:e[t]},propHooks:{tabIndex:{get:function(e){var t=fe.find.attr(e,"tabindex");return t?parseInt(t,10):wt.test(e.nodeName)||bt.test(e.nodeName)&&e.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),de.optSelected||(fe.propHooks.selected={get:function(e){var t=e.parentNode;return t&&t.parentNode&&t.parentNode.selectedIndex,null},set:function(e){var t=e.parentNode;t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex)}}),fe.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){fe.propFix[this.toLowerCase()]=this}),fe.fn.extend({addClass:function(e){var t,i,n,s,r,a,o,l=0;if(fe.isFunction(e))return this.each(function(t){fe(this).addClass(e.call(this,t,G(this)))});if("string"==typeof e&&e)for(t=e.match(Ie)||[];i=this[l++];)if(s=G(i),n=1===i.nodeType&&" "+X(s)+" "){for(a=0;r=t[a++];)n.indexOf(" "+r+" ")<0&&(n+=r+" ");o=X(n),s!==o&&i.setAttribute("class",o)}return this},removeClass:function(e){var t,i,n,s,r,a,o,l=0;if(fe.isFunction(e))return this.each(function(t){fe(this).removeClass(e.call(this,t,G(this)))});if(!arguments.length)return this.attr("class","");if("string"==typeof e&&e)for(t=e.match(Ie)||[];i=this[l++];)if(s=G(i),n=1===i.nodeType&&" "+X(s)+" "){for(a=0;r=t[a++];)for(;n.indexOf(" "+r+" ")>-1;)n=n.replace(" "+r+" "," ");o=X(n),s!==o&&i.setAttribute("class",o)}return this},toggleClass:function(e,t){var i=typeof e;return"boolean"==typeof t&&"string"===i?t?this.addClass(e):this.removeClass(e):fe.isFunction(e)?this.each(function(i){fe(this).toggleClass(e.call(this,i,G(this),t),t)}):this.each(function(){var t,n,s,r;if("string"===i)for(n=0,s=fe(this),r=e.match(Ie)||[];t=r[n++];)s.hasClass(t)?s.removeClass(t):s.addClass(t);else void 0!==e&&"boolean"!==i||(t=G(this),t&&Le.set(this,"__className__",t),this.setAttribute&&this.setAttribute("class",t||e===!1?"":Le.get(this,"__className__")||""))})},hasClass:function(e){var t,i,n=0;for(t=" "+e+" ";i=this[n++];)if(1===i.nodeType&&(" "+X(G(i))+" ").indexOf(t)>-1)return!0;return!1}});var xt=/\r/g;fe.fn.extend({val:function(e){var t,i,n,s=this[0];return arguments.length?(n=fe.isFunction(e),this.each(function(i){var s;1===this.nodeType&&(s=n?e.call(this,i,fe(this).val()):e,null==s?s="":"number"==typeof s?s+="":fe.isArray(s)&&(s=fe.map(s,function(e){return null==e?"":e+""})),t=fe.valHooks[this.type]||fe.valHooks[this.nodeName.toLowerCase()],t&&"set"in t&&void 0!==t.set(this,s,"value")||(this.value=s))})):s?(t=fe.valHooks[s.type]||fe.valHooks[s.nodeName.toLowerCase()],t&&"get"in t&&void 0!==(i=t.get(s,"value"))?i:(i=s.value,"string"==typeof i?i.replace(xt,""):null==i?"":i)):void 0}}),fe.extend({valHooks:{option:{get:function(e){var t=fe.find.attr(e,"value");return null!=t?t:X(fe.text(e))}},select:{get:function(e){var t,i,n,s=e.options,r=e.selectedIndex,a="select-one"===e.type,o=a?null:[],l=a?r+1:s.length;for(n=r<0?l:a?r:0;n<l;n++)if(i=s[n],(i.selected||n===r)&&!i.disabled&&(!i.parentNode.disabled||!fe.nodeName(i.parentNode,"optgroup"))){if(t=fe(i).val(),a)return t;o.push(t)}return o},set:function(e,t){for(var i,n,s=e.options,r=fe.makeArray(t),a=s.length;a--;)n=s[a],(n.selected=fe.inArray(fe.valHooks.option.get(n),r)>-1)&&(i=!0);return i||(e.selectedIndex=-1),r}}}}),fe.each(["radio","checkbox"],function(){fe.valHooks[this]={set:function(e,t){if(fe.isArray(t))return e.checked=fe.inArray(fe(e).val(),t)>-1}},de.checkOn||(fe.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})});var Tt=/^(?:focusinfocus|focusoutblur)$/;fe.extend(fe.event,{trigger:function(t,i,n,s){var r,a,o,l,p,c,u,d=[n||te],h=pe.call(t,"type")?t.type:t,f=pe.call(t,"namespace")?t.namespace.split("."):[];if(a=o=n=n||te,3!==n.nodeType&&8!==n.nodeType&&!Tt.test(h+fe.event.triggered)&&(h.indexOf(".")>-1&&(f=h.split("."),h=f.shift(),f.sort()),p=h.indexOf(":")<0&&"on"+h,t=t[fe.expando]?t:new fe.Event(h,"object"==typeof t&&t),t.isTrigger=s?2:3,t.namespace=f.join("."),t.rnamespace=t.namespace?new RegExp("(^|\\.)"+f.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,t.result=void 0,t.target||(t.target=n),i=null==i?[t]:fe.makeArray(i,[t]),u=fe.event.special[h]||{},s||!u.trigger||u.trigger.apply(n,i)!==!1)){if(!s&&!u.noBubble&&!fe.isWindow(n)){for(l=u.delegateType||h,Tt.test(l+h)||(a=a.parentNode);a;a=a.parentNode)d.push(a),o=a;o===(n.ownerDocument||te)&&d.push(o.defaultView||o.parentWindow||e)}for(r=0;(a=d[r++])&&!t.isPropagationStopped();)t.type=r>1?l:u.bindType||h,c=(Le.get(a,"events")||{})[t.type]&&Le.get(a,"handle"),c&&c.apply(a,i),c=p&&a[p],c&&c.apply&&Ae(a)&&(t.result=c.apply(a,i),t.result===!1&&t.preventDefault());return t.type=h,s||t.isDefaultPrevented()||u._default&&u._default.apply(d.pop(),i)!==!1||!Ae(n)||p&&fe.isFunction(n[h])&&!fe.isWindow(n)&&(o=n[p],o&&(n[p]=null),fe.event.triggered=h,n[h](),fe.event.triggered=void 0,o&&(n[p]=o)),t.result}},simulate:function(e,t,i){var n=fe.extend(new fe.Event,i,{type:e,isSimulated:!0});fe.event.trigger(n,null,t)}}),fe.fn.extend({trigger:function(e,t){return this.each(function(){fe.event.trigger(e,t,this)})},triggerHandler:function(e,t){var i=this[0];if(i)return fe.event.trigger(e,t,i,!0)}}),fe.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(e,t){fe.fn[t]=function(e,i){return arguments.length>0?this.on(t,null,e,i):this.trigger(t)}}),fe.fn.extend({hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)}}),de.focusin="onfocusin"in e,de.focusin||fe.each({focus:"focusin",blur:"focusout"},function(e,t){var i=function(e){fe.event.simulate(t,e.target,fe.event.fix(e))};fe.event.special[t]={setup:function(){var n=this.ownerDocument||this,s=Le.access(n,t);s||n.addEventListener(e,i,!0),Le.access(n,t,(s||0)+1)},teardown:function(){var n=this.ownerDocument||this,s=Le.access(n,t)-1;s?Le.access(n,t,s):(n.removeEventListener(e,i,!0),Le.remove(n,t))}}});var Ct=e.location,St=fe.now(),Et=/\?/;fe.parseXML=function(t){var i;if(!t||"string"!=typeof t)return null;try{i=(new e.DOMParser).parseFromString(t,"text/xml")}catch(e){i=void 0}return i&&!i.getElementsByTagName("parsererror").length||fe.error("Invalid XML: "+t),i};var _t=/\[\]$/,kt=/\r?\n/g,Mt=/^(?:submit|button|image|reset|file)$/i,zt=/^(?:input|select|textarea|keygen)/i;fe.param=function(e,t){var i,n=[],s=function(e,t){var i=fe.isFunction(t)?t():t;n[n.length]=encodeURIComponent(e)+"="+encodeURIComponent(null==i?"":i)};if(fe.isArray(e)||e.jquery&&!fe.isPlainObject(e))fe.each(e,function(){s(this.name,this.value)});else for(i in e)Y(i,e[i],t,s);return n.join("&")},fe.fn.extend({serialize:function(){return fe.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=fe.prop(this,"elements");return e?fe.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!fe(this).is(":disabled")&&zt.test(this.nodeName)&&!Mt.test(e)&&(this.checked||!Xe.test(e))}).map(function(e,t){var i=fe(this).val();return null==i?null:fe.isArray(i)?fe.map(i,function(e){return{name:t.name,value:e.replace(kt,"\r\n")}}):{name:t.name,value:i.replace(kt,"\r\n")}}).get()}});var It=/%20/g,Dt=/#.*$/,Pt=/([?&])_=[^&]*/,$t=/^(.*?):[ \t]*([^\r\n]*)$/gm,At=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,Lt=/^(?:GET|HEAD)$/,Nt=/^\/\//,Ot={},Ht={},Bt="*/".concat("*"),jt=te.createElement("a");jt.href=Ct.href,fe.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:Ct.href,type:"GET",isLocal:At.test(Ct.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Bt,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":fe.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?Q(Q(e,fe.ajaxSettings),t):Q(fe.ajaxSettings,e)},ajaxPrefilter:V(Ot),ajaxTransport:V(Ht),ajax:function(t,i){function n(t,i,n,o){var p,d,h,b,x,T=i;c||(c=!0,l&&e.clearTimeout(l),s=void 0,a=o||"",C.readyState=t>0?4:0,p=t>=200&&t<300||304===t,n&&(b=K(f,C,n)),b=Z(f,b,C,p),p?(f.ifModified&&(x=C.getResponseHeader("Last-Modified"),x&&(fe.lastModified[r]=x),x=C.getResponseHeader("etag"),x&&(fe.etag[r]=x)),204===t||"HEAD"===f.type?T="nocontent":304===t?T="notmodified":(T=b.state,d=b.data,h=b.error,p=!h)):(h=T,!t&&T||(T="error",t<0&&(t=0))),C.status=t,C.statusText=(i||T)+"",p?v.resolveWith(m,[d,T,C]):v.rejectWith(m,[C,T,h]),C.statusCode(w),w=void 0,u&&g.trigger(p?"ajaxSuccess":"ajaxError",[C,f,p?d:h]),y.fireWith(m,[C,T]),u&&(g.trigger("ajaxComplete",[C,f]),--fe.active||fe.event.trigger("ajaxStop")))}"object"==typeof t&&(i=t,t=void 0),i=i||{};var s,r,a,o,l,p,c,u,d,h,f=fe.ajaxSetup({},i),m=f.context||f,g=f.context&&(m.nodeType||m.jquery)?fe(m):fe.event,v=fe.Deferred(),y=fe.Callbacks("once memory"),w=f.statusCode||{},b={},x={},T="canceled",C={readyState:0,getResponseHeader:function(e){var t;if(c){if(!o)for(o={};t=$t.exec(a);)o[t[1].toLowerCase()]=t[2];t=o[e.toLowerCase()]}return null==t?null:t},getAllResponseHeaders:function(){return c?a:null},setRequestHeader:function(e,t){return null==c&&(e=x[e.toLowerCase()]=x[e.toLowerCase()]||e,b[e]=t),this},overrideMimeType:function(e){return null==c&&(f.mimeType=e),this},statusCode:function(e){var t;if(e)if(c)C.always(e[C.status]);else for(t in e)w[t]=[w[t],e[t]];return this},abort:function(e){var t=e||T;return s&&s.abort(t),n(0,t),this}};if(v.promise(C),f.url=((t||f.url||Ct.href)+"").replace(Nt,Ct.protocol+"//"),f.type=i.method||i.type||f.method||f.type,f.dataTypes=(f.dataType||"*").toLowerCase().match(Ie)||[""],null==f.crossDomain){p=te.createElement("a");try{p.href=f.url,p.href=p.href,f.crossDomain=jt.protocol+"//"+jt.host!=p.protocol+"//"+p.host}catch(e){f.crossDomain=!0}}if(f.data&&f.processData&&"string"!=typeof f.data&&(f.data=fe.param(f.data,f.traditional)),U(Ot,f,i,C),c)return C;u=fe.event&&f.global,u&&0===fe.active++&&fe.event.trigger("ajaxStart"),f.type=f.type.toUpperCase(),f.hasContent=!Lt.test(f.type),r=f.url.replace(Dt,""),f.hasContent?f.data&&f.processData&&0===(f.contentType||"").indexOf("application/x-www-form-urlencoded")&&(f.data=f.data.replace(It,"+")):(h=f.url.slice(r.length),f.data&&(r+=(Et.test(r)?"&":"?")+f.data,delete f.data),f.cache===!1&&(r=r.replace(Pt,"$1"),h=(Et.test(r)?"&":"?")+"_="+St++ +h),f.url=r+h),f.ifModified&&(fe.lastModified[r]&&C.setRequestHeader("If-Modified-Since",fe.lastModified[r]),fe.etag[r]&&C.setRequestHeader("If-None-Match",fe.etag[r])),(f.data&&f.hasContent&&f.contentType!==!1||i.contentType)&&C.setRequestHeader("Content-Type",f.contentType),C.setRequestHeader("Accept",f.dataTypes[0]&&f.accepts[f.dataTypes[0]]?f.accepts[f.dataTypes[0]]+("*"!==f.dataTypes[0]?", "+Bt+"; q=0.01":""):f.accepts["*"]);for(d in f.headers)C.setRequestHeader(d,f.headers[d]);if(f.beforeSend&&(f.beforeSend.call(m,C,f)===!1||c))return C.abort();if(T="abort",y.add(f.complete),C.done(f.success),C.fail(f.error),s=U(Ht,f,i,C)){if(C.readyState=1,u&&g.trigger("ajaxSend",[C,f]),c)return C;f.async&&f.timeout>0&&(l=e.setTimeout(function(){C.abort("timeout")},f.timeout));try{c=!1,s.send(b,n)}catch(e){if(c)throw e;n(-1,e)}}else n(-1,"No Transport");return C},getJSON:function(e,t,i){return fe.get(e,t,i,"json")},getScript:function(e,t){return fe.get(e,void 0,t,"script")}}),fe.each(["get","post"],function(e,t){fe[t]=function(e,i,n,s){return fe.isFunction(i)&&(s=s||n,n=i,i=void 0),fe.ajax(fe.extend({url:e,type:t,dataType:s,data:i,success:n},fe.isPlainObject(e)&&e))}}),fe._evalUrl=function(e){return fe.ajax({url:e,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,throws:!0})},fe.fn.extend({wrapAll:function(e){var t;return this[0]&&(fe.isFunction(e)&&(e=e.call(this[0])),t=fe(e,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){for(var e=this;e.firstElementChild;)e=e.firstElementChild;return e}).append(this)),this},wrapInner:function(e){return fe.isFunction(e)?this.each(function(t){fe(this).wrapInner(e.call(this,t))}):this.each(function(){var t=fe(this),i=t.contents();i.length?i.wrapAll(e):t.append(e)})},wrap:function(e){var t=fe.isFunction(e);return this.each(function(i){fe(this).wrapAll(t?e.call(this,i):e)})},unwrap:function(e){return this.parent(e).not("body").each(function(){fe(this).replaceWith(this.childNodes)}),this}}),fe.expr.pseudos.hidden=function(e){return!fe.expr.pseudos.visible(e)},fe.expr.pseudos.visible=function(e){return!!(e.offsetWidth||e.offsetHeight||e.getClientRects().length)},fe.ajaxSettings.xhr=function(){try{return new e.XMLHttpRequest}catch(e){}};var Rt={0:200,1223:204},Ft=fe.ajaxSettings.xhr();de.cors=!!Ft&&"withCredentials"in Ft,de.ajax=Ft=!!Ft,fe.ajaxTransport(function(t){var i,n;if(de.cors||Ft&&!t.crossDomain)return{send:function(s,r){var a,o=t.xhr();if(o.open(t.type,t.url,t.async,t.username,t.password),t.xhrFields)for(a in t.xhrFields)o[a]=t.xhrFields[a];t.mimeType&&o.overrideMimeType&&o.overrideMimeType(t.mimeType),t.crossDomain||s["X-Requested-With"]||(s["X-Requested-With"]="XMLHttpRequest");for(a in s)o.setRequestHeader(a,s[a]);i=function(e){return function(){i&&(i=n=o.onload=o.onerror=o.onabort=o.onreadystatechange=null,"abort"===e?o.abort():"error"===e?"number"!=typeof o.status?r(0,"error"):r(o.status,o.statusText):r(Rt[o.status]||o.status,o.statusText,"text"!==(o.responseType||"text")||"string"!=typeof o.responseText?{binary:o.response}:{text:o.responseText},o.getAllResponseHeaders()))}},o.onload=i(),n=o.onerror=i("error"),void 0!==o.onabort?o.onabort=n:o.onreadystatechange=function(){4===o.readyState&&e.setTimeout(function(){i&&n()})},i=i("abort");try{o.send(t.hasContent&&t.data||null)}catch(e){if(i)throw e}},abort:function(){i&&i()}}}),fe.ajaxPrefilter(function(e){e.crossDomain&&(e.contents.script=!1)}),fe.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(e){return fe.globalEval(e),e}}}),fe.ajaxPrefilter("script",function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type="GET")}),fe.ajaxTransport("script",function(e){if(e.crossDomain){var t,i;return{send:function(n,s){t=fe("<script>").prop({charset:e.scriptCharset,src:e.url}).on("load error",i=function(e){t.remove(),i=null,e&&s("error"===e.type?404:200,e.type)}),te.head.appendChild(t[0])},abort:function(){i&&i()}}}});var Wt=[],qt=/(=)\?(?=&|$)|\?\?/;fe.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=Wt.pop()||fe.expando+"_"+St++;return this[e]=!0,e}}),fe.ajaxPrefilter("json jsonp",function(t,i,n){var s,r,a,o=t.jsonp!==!1&&(qt.test(t.url)?"url":"string"==typeof t.data&&0===(t.contentType||"").indexOf("application/x-www-form-urlencoded")&&qt.test(t.data)&&"data");if(o||"jsonp"===t.dataTypes[0])return s=t.jsonpCallback=fe.isFunction(t.jsonpCallback)?t.jsonpCallback():t.jsonpCallback,o?t[o]=t[o].replace(qt,"$1"+s):t.jsonp!==!1&&(t.url+=(Et.test(t.url)?"&":"?")+t.jsonp+"="+s),t.converters["script json"]=function(){return a||fe.error(s+" was not called"),a[0]},t.dataTypes[0]="json",r=e[s],e[s]=function(){a=arguments},n.always(function(){void 0===r?fe(e).removeProp(s):e[s]=r,t[s]&&(t.jsonpCallback=i.jsonpCallback,Wt.push(s)),a&&fe.isFunction(r)&&r(a[0]),a=r=void 0}),"script"}),de.createHTMLDocument=function(){var e=te.implementation.createHTMLDocument("").body;return e.innerHTML="<form></form><form></form>",2===e.childNodes.length}(),fe.parseHTML=function(e,t,i){if("string"!=typeof e)return[];"boolean"==typeof t&&(i=t,t=!1);var n,s,r;return t||(de.createHTMLDocument?(t=te.implementation.createHTMLDocument(""),n=t.createElement("base"),n.href=te.location.href,t.head.appendChild(n)):t=te),s=Ce.exec(e),r=!i&&[],s?[t.createElement(s[1])]:(s=w([e],t,r),r&&r.length&&fe(r).remove(),fe.merge([],s.childNodes))},fe.fn.load=function(e,t,i){var n,s,r,a=this,o=e.indexOf(" ");return o>-1&&(n=X(e.slice(o)),e=e.slice(0,o)),fe.isFunction(t)?(i=t,t=void 0):t&&"object"==typeof t&&(s="POST"),a.length>0&&fe.ajax({url:e,type:s||"GET",dataType:"html",data:t}).done(function(e){r=arguments,a.html(n?fe("<div>").append(fe.parseHTML(e)).find(n):e)}).always(i&&function(e,t){a.each(function(){i.apply(this,r||[e.responseText,t,e])})}),this},fe.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(e,t){fe.fn[t]=function(e){return this.on(t,e)}}),fe.expr.pseudos.animated=function(e){return fe.grep(fe.timers,function(t){return e===t.elem}).length},fe.offset={setOffset:function(e,t,i){var n,s,r,a,o,l,p,c=fe.css(e,"position"),u=fe(e),d={};"static"===c&&(e.style.position="relative"),o=u.offset(),r=fe.css(e,"top"),l=fe.css(e,"left"),p=("absolute"===c||"fixed"===c)&&(r+l).indexOf("auto")>-1,p?(n=u.position(),a=n.top,s=n.left):(a=parseFloat(r)||0,s=parseFloat(l)||0),fe.isFunction(t)&&(t=t.call(e,i,fe.extend({},o))),null!=t.top&&(d.top=t.top-o.top+a),null!=t.left&&(d.left=t.left-o.left+s),"using"in t?t.using.call(e,d):u.css(d)}},fe.fn.extend({offset:function(e){if(arguments.length)return void 0===e?this:this.each(function(t){fe.offset.setOffset(this,e,t)});var t,i,n,s,r=this[0];return r?r.getClientRects().length?(n=r.getBoundingClientRect(),n.width||n.height?(s=r.ownerDocument,i=J(s),t=s.documentElement,{top:n.top+i.pageYOffset-t.clientTop,left:n.left+i.pageXOffset-t.clientLeft}):n):{top:0,left:0}:void 0},position:function(){if(this[0]){var e,t,i=this[0],n={top:0,left:0};return"fixed"===fe.css(i,"position")?t=i.getBoundingClientRect():(e=this.offsetParent(),t=this.offset(),fe.nodeName(e[0],"html")||(n=e.offset()),n={top:n.top+fe.css(e[0],"borderTopWidth",!0),left:n.left+fe.css(e[0],"borderLeftWidth",!0)}),{top:t.top-n.top-fe.css(i,"marginTop",!0),left:t.left-n.left-fe.css(i,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var e=this.offsetParent;e&&"static"===fe.css(e,"position");)e=e.offsetParent;return e||Qe})}}),fe.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(e,t){var i="pageYOffset"===t;fe.fn[e]=function(n){return $e(this,function(e,n,s){var r=J(e);return void 0===s?r?r[t]:e[n]:void(r?r.scrollTo(i?r.pageXOffset:s,i?s:r.pageYOffset):e[n]=s)},e,n,arguments.length)}}),fe.each(["top","left"],function(e,t){fe.cssHooks[t]=P(de.pixelPosition,function(e,i){if(i)return i=D(e,t),at.test(i)?fe(e).position()[t]+"px":i})}),fe.each({Height:"height",Width:"width"},function(e,t){fe.each({padding:"inner"+e,content:t,"":"outer"+e},function(i,n){fe.fn[n]=function(s,r){var a=arguments.length&&(i||"boolean"!=typeof s),o=i||(s===!0||r===!0?"margin":"border");return $e(this,function(t,i,s){var r;return fe.isWindow(t)?0===n.indexOf("outer")?t["inner"+e]:t.document.documentElement["client"+e]:9===t.nodeType?(r=t.documentElement,Math.max(t.body["scroll"+e],r["scroll"+e],t.body["offset"+e],r["offset"+e],r["client"+e])):void 0===s?fe.css(t,i,o):fe.style(t,i,s,o)},t,a?s:void 0,a)}})}),fe.fn.extend({bind:function(e,t,i){return this.on(e,null,t,i)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,i,n){return this.on(t,e,i,n)},undelegate:function(e,t,i){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",i)}}),fe.parseJSON=JSON.parse,"function"==typeof define&&define.amd&&define("jquery",[],function(){return fe});var Xt=e.jQuery,Gt=e.$;return fe.noConflict=function(t){return e.$===fe&&(e.$=Gt),t&&e.jQuery===fe&&(e.jQuery=Xt),fe},t||(e.jQuery=e.$=fe),fe}),"undefined"==typeof jQuery)throw new Error("Bootstrap's JavaScript requires jQuery");+function(e){"use strict";var t=e.fn.jquery.split(" ")[0].split(".");if(t[0]<2&&t[1]<9||1==t[0]&&9==t[1]&&t[2]<1||t[0]>3)throw new Error("Bootstrap's JavaScript requires jQuery version 1.9.1 or higher, but lower than version 4")}(jQuery),+function(e){"use strict";function t(){var e=document.createElement("bootstrap"),t={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd otransitionend",transition:"transitionend"};for(var i in t)if(void 0!==e.style[i])return{end:t[i]};return!1}e.fn.emulateTransitionEnd=function(t){var i=!1,n=this;e(this).one("bsTransitionEnd",function(){i=!0});var s=function(){i||e(n).trigger(e.support.transition.end)};return setTimeout(s,t),this},e(function(){e.support.transition=t(),e.support.transition&&(e.event.special.bsTransitionEnd={bindType:e.support.transition.end,delegateType:e.support.transition.end,handle:function(t){if(e(t.target).is(this))return t.handleObj.handler.apply(this,arguments)}})})}(jQuery),+function(e){"use strict";function t(t){return this.each(function(){var i=e(this),s=i.data("bs.alert");s||i.data("bs.alert",s=new n(this)),"string"==typeof t&&s[t].call(i)})}var i='[data-dismiss="alert"]',n=function(t){e(t).on("click",i,this.close)};n.VERSION="3.3.7",n.TRANSITION_DURATION=150,n.prototype.close=function(t){function i(){a.detach().trigger("closed.bs.alert").remove()}var s=e(this),r=s.attr("data-target");r||(r=s.attr("href"),r=r&&r.replace(/.*(?=#[^\s]*$)/,""));var a=e("#"===r?[]:r);t&&t.preventDefault(),a.length||(a=s.closest(".alert")),a.trigger(t=e.Event("close.bs.alert")),t.isDefaultPrevented()||(a.removeClass("in"),e.support.transition&&a.hasClass("fade")?a.one("bsTransitionEnd",i).emulateTransitionEnd(n.TRANSITION_DURATION):i())};var s=e.fn.alert;e.fn.alert=t,e.fn.alert.Constructor=n,e.fn.alert.noConflict=function(){return e.fn.alert=s,this},e(document).on("click.bs.alert.data-api",i,n.prototype.close)}(jQuery),+function(e){"use strict";function t(t){return this.each(function(){var n=e(this),s=n.data("bs.button"),r="object"==typeof t&&t;s||n.data("bs.button",s=new i(this,r)),"toggle"==t?s.toggle():t&&s.setState(t)})}var i=function(t,n){this.$element=e(t),this.options=e.extend({},i.DEFAULTS,n),this.isLoading=!1};i.VERSION="3.3.7",i.DEFAULTS={loadingText:"loading..."},i.prototype.setState=function(t){var i="disabled",n=this.$element,s=n.is("input")?"val":"html",r=n.data();t+="Text",null==r.resetText&&n.data("resetText",n[s]()),setTimeout(e.proxy(function(){n[s](null==r[t]?this.options[t]:r[t]),"loadingText"==t?(this.isLoading=!0,n.addClass(i).attr(i,i).prop(i,!0)):this.isLoading&&(this.isLoading=!1,n.removeClass(i).removeAttr(i).prop(i,!1))},this),0)},i.prototype.toggle=function(){var e=!0,t=this.$element.closest('[data-toggle="buttons"]');if(t.length){var i=this.$element.find("input");"radio"==i.prop("type")?(i.prop("checked")&&(e=!1),t.find(".active").removeClass("active"),this.$element.addClass("active")):"checkbox"==i.prop("type")&&(i.prop("checked")!==this.$element.hasClass("active")&&(e=!1),this.$element.toggleClass("active")),i.prop("checked",this.$element.hasClass("active")),e&&i.trigger("change")}else this.$element.attr("aria-pressed",!this.$element.hasClass("active")),this.$element.toggleClass("active")};var n=e.fn.button;e.fn.button=t,e.fn.button.Constructor=i,e.fn.button.noConflict=function(){return e.fn.button=n,this},e(document).on("click.bs.button.data-api",'[data-toggle^="button"]',function(i){var n=e(i.target).closest(".btn");t.call(n,"toggle"),e(i.target).is('input[type="radio"], input[type="checkbox"]')||(i.preventDefault(),n.is("input,button")?n.trigger("focus"):n.find("input:visible,button:visible").first().trigger("focus"))}).on("focus.bs.button.data-api blur.bs.button.data-api",'[data-toggle^="button"]',function(t){e(t.target).closest(".btn").toggleClass("focus",/^focus(in)?$/.test(t.type))})}(jQuery),+function(e){"use strict";function t(t){return this.each(function(){var n=e(this),s=n.data("bs.carousel"),r=e.extend({},i.DEFAULTS,n.data(),"object"==typeof t&&t),a="string"==typeof t?t:r.slide;s||n.data("bs.carousel",s=new i(this,r)),"number"==typeof t?s.to(t):a?s[a]():r.interval&&s.pause().cycle()})}var i=function(t,i){this.$element=e(t),this.$indicators=this.$element.find(".carousel-indicators"),this.options=i,this.paused=null,this.sliding=null,this.interval=null,this.$active=null,this.$items=null,this.options.keyboard&&this.$element.on("keydown.bs.carousel",e.proxy(this.keydown,this)),"hover"==this.options.pause&&!("ontouchstart"in document.documentElement)&&this.$element.on("mouseenter.bs.carousel",e.proxy(this.pause,this)).on("mouseleave.bs.carousel",e.proxy(this.cycle,this))};i.VERSION="3.3.7",i.TRANSITION_DURATION=600,i.DEFAULTS={interval:5e3,pause:"hover",wrap:!0,keyboard:!0},i.prototype.keydown=function(e){if(!/input|textarea/i.test(e.target.tagName)){switch(e.which){case 37:this.prev();break;case 39:this.next();break;default:return}e.preventDefault()}},i.prototype.cycle=function(t){return t||(this.paused=!1),this.interval&&clearInterval(this.interval),this.options.interval&&!this.paused&&(this.interval=setInterval(e.proxy(this.next,this),this.options.interval)),this},i.prototype.getItemIndex=function(e){return this.$items=e.parent().children(".item"),this.$items.index(e||this.$active)},i.prototype.getItemForDirection=function(e,t){var i=this.getItemIndex(t),n="prev"==e&&0===i||"next"==e&&i==this.$items.length-1;if(n&&!this.options.wrap)return t;var s="prev"==e?-1:1,r=(i+s)%this.$items.length;return this.$items.eq(r)},i.prototype.to=function(e){var t=this,i=this.getItemIndex(this.$active=this.$element.find(".item.active"));if(!(e>this.$items.length-1||e<0))return this.sliding?this.$element.one("slid.bs.carousel",function(){t.to(e)}):i==e?this.pause().cycle():this.slide(e>i?"next":"prev",this.$items.eq(e))},i.prototype.pause=function(t){return t||(this.paused=!0),this.$element.find(".next, .prev").length&&e.support.transition&&(this.$element.trigger(e.support.transition.end),this.cycle(!0)),this.interval=clearInterval(this.interval),this},i.prototype.next=function(){if(!this.sliding)return this.slide("next")},i.prototype.prev=function(){if(!this.sliding)return this.slide("prev")},i.prototype.slide=function(t,n){var s=this.$element.find(".item.active"),r=n||this.getItemForDirection(t,s),a=this.interval,o="next"==t?"left":"right",l=this;if(r.hasClass("active"))return this.sliding=!1;var p=r[0],c=e.Event("slide.bs.carousel",{relatedTarget:p,direction:o});if(this.$element.trigger(c),!c.isDefaultPrevented()){if(this.sliding=!0,a&&this.pause(),this.$indicators.length){this.$indicators.find(".active").removeClass("active");var u=e(this.$indicators.children()[this.getItemIndex(r)]);u&&u.addClass("active")}var d=e.Event("slid.bs.carousel",{relatedTarget:p,direction:o});return e.support.transition&&this.$element.hasClass("slide")?(r.addClass(t),r[0].offsetWidth,s.addClass(o),r.addClass(o),s.one("bsTransitionEnd",function(){r.removeClass([t,o].join(" ")).addClass("active"),s.removeClass(["active",o].join(" ")),l.sliding=!1,setTimeout(function(){l.$element.trigger(d)},0)}).emulateTransitionEnd(i.TRANSITION_DURATION)):(s.removeClass("active"),r.addClass("active"),this.sliding=!1,this.$element.trigger(d)),a&&this.cycle(),this}};var n=e.fn.carousel;e.fn.carousel=t,e.fn.carousel.Constructor=i,e.fn.carousel.noConflict=function(){return e.fn.carousel=n,this};var s=function(i){var n,s=e(this),r=e(s.attr("data-target")||(n=s.attr("href"))&&n.replace(/.*(?=#[^\s]+$)/,""));if(r.hasClass("carousel")){var a=e.extend({},r.data(),s.data()),o=s.attr("data-slide-to");o&&(a.interval=!1),t.call(r,a),o&&r.data("bs.carousel").to(o),i.preventDefault()}};e(document).on("click.bs.carousel.data-api","[data-slide]",s).on("click.bs.carousel.data-api","[data-slide-to]",s),e(window).on("load",function(){e('[data-ride="carousel"]').each(function(){var i=e(this);t.call(i,i.data())})})}(jQuery),+function(e){"use strict";function t(t){var i,n=t.attr("data-target")||(i=t.attr("href"))&&i.replace(/.*(?=#[^\s]+$)/,"");return e(n)}function i(t){return this.each(function(){var i=e(this),s=i.data("bs.collapse"),r=e.extend({},n.DEFAULTS,i.data(),"object"==typeof t&&t);!s&&r.toggle&&/show|hide/.test(t)&&(r.toggle=!1),
s||i.data("bs.collapse",s=new n(this,r)),"string"==typeof t&&s[t]()})}var n=function(t,i){this.$element=e(t),this.options=e.extend({},n.DEFAULTS,i),this.$trigger=e('[data-toggle="collapse"][href="#'+t.id+'"],[data-toggle="collapse"][data-target="#'+t.id+'"]'),this.transitioning=null,this.options.parent?this.$parent=this.getParent():this.addAriaAndCollapsedClass(this.$element,this.$trigger),this.options.toggle&&this.toggle()};n.VERSION="3.3.7",n.TRANSITION_DURATION=350,n.DEFAULTS={toggle:!0},n.prototype.dimension=function(){var e=this.$element.hasClass("width");return e?"width":"height"},n.prototype.show=function(){if(!this.transitioning&&!this.$element.hasClass("in")){var t,s=this.$parent&&this.$parent.children(".panel").children(".in, .collapsing");if(!(s&&s.length&&(t=s.data("bs.collapse"),t&&t.transitioning))){var r=e.Event("show.bs.collapse");if(this.$element.trigger(r),!r.isDefaultPrevented()){s&&s.length&&(i.call(s,"hide"),t||s.data("bs.collapse",null));var a=this.dimension();this.$element.removeClass("collapse").addClass("collapsing")[a](0).attr("aria-expanded",!0),this.$trigger.removeClass("collapsed").attr("aria-expanded",!0),this.transitioning=1;var o=function(){this.$element.removeClass("collapsing").addClass("collapse in")[a](""),this.transitioning=0,this.$element.trigger("shown.bs.collapse")};if(!e.support.transition)return o.call(this);var l=e.camelCase(["scroll",a].join("-"));this.$element.one("bsTransitionEnd",e.proxy(o,this)).emulateTransitionEnd(n.TRANSITION_DURATION)[a](this.$element[0][l])}}}},n.prototype.hide=function(){if(!this.transitioning&&this.$element.hasClass("in")){var t=e.Event("hide.bs.collapse");if(this.$element.trigger(t),!t.isDefaultPrevented()){var i=this.dimension();this.$element[i](this.$element[i]())[0].offsetHeight,this.$element.addClass("collapsing").removeClass("collapse in").attr("aria-expanded",!1),this.$trigger.addClass("collapsed").attr("aria-expanded",!1),this.transitioning=1;var s=function(){this.transitioning=0,this.$element.removeClass("collapsing").addClass("collapse").trigger("hidden.bs.collapse")};return e.support.transition?void this.$element[i](0).one("bsTransitionEnd",e.proxy(s,this)).emulateTransitionEnd(n.TRANSITION_DURATION):s.call(this)}}},n.prototype.toggle=function(){this[this.$element.hasClass("in")?"hide":"show"]()},n.prototype.getParent=function(){return e(this.options.parent).find('[data-toggle="collapse"][data-parent="'+this.options.parent+'"]').each(e.proxy(function(i,n){var s=e(n);this.addAriaAndCollapsedClass(t(s),s)},this)).end()},n.prototype.addAriaAndCollapsedClass=function(e,t){var i=e.hasClass("in");e.attr("aria-expanded",i),t.toggleClass("collapsed",!i).attr("aria-expanded",i)};var s=e.fn.collapse;e.fn.collapse=i,e.fn.collapse.Constructor=n,e.fn.collapse.noConflict=function(){return e.fn.collapse=s,this},e(document).on("click.bs.collapse.data-api",'[data-toggle="collapse"]',function(n){var s=e(this);s.attr("data-target")||n.preventDefault();var r=t(s),a=r.data("bs.collapse"),o=a?"toggle":s.data();i.call(r,o)})}(jQuery),+function(e){"use strict";function t(t){var i=t.attr("data-target");i||(i=t.attr("href"),i=i&&/#[A-Za-z]/.test(i)&&i.replace(/.*(?=#[^\s]*$)/,""));var n=i&&e(i);return n&&n.length?n:t.parent()}function i(i){i&&3===i.which||(e(s).remove(),e(r).each(function(){var n=e(this),s=t(n),r={relatedTarget:this};s.hasClass("open")&&(i&&"click"==i.type&&/input|textarea/i.test(i.target.tagName)&&e.contains(s[0],i.target)||(s.trigger(i=e.Event("hide.bs.dropdown",r)),i.isDefaultPrevented()||(n.attr("aria-expanded","false"),s.removeClass("open").trigger(e.Event("hidden.bs.dropdown",r)))))}))}function n(t){return this.each(function(){var i=e(this),n=i.data("bs.dropdown");n||i.data("bs.dropdown",n=new a(this)),"string"==typeof t&&n[t].call(i)})}var s=".dropdown-backdrop",r='[data-toggle="dropdown"]',a=function(t){e(t).on("click.bs.dropdown",this.toggle)};a.VERSION="3.3.7",a.prototype.toggle=function(n){var s=e(this);if(!s.is(".disabled, :disabled")){var r=t(s),a=r.hasClass("open");if(i(),!a){"ontouchstart"in document.documentElement&&!r.closest(".navbar-nav").length&&e(document.createElement("div")).addClass("dropdown-backdrop").insertAfter(e(this)).on("click",i);var o={relatedTarget:this};if(r.trigger(n=e.Event("show.bs.dropdown",o)),n.isDefaultPrevented())return;s.trigger("focus").attr("aria-expanded","true"),r.toggleClass("open").trigger(e.Event("shown.bs.dropdown",o))}return!1}},a.prototype.keydown=function(i){if(/(38|40|27|32)/.test(i.which)&&!/input|textarea/i.test(i.target.tagName)){var n=e(this);if(i.preventDefault(),i.stopPropagation(),!n.is(".disabled, :disabled")){var s=t(n),a=s.hasClass("open");if(!a&&27!=i.which||a&&27==i.which)return 27==i.which&&s.find(r).trigger("focus"),n.trigger("click");var o=" li:not(.disabled):visible a",l=s.find(".dropdown-menu"+o);if(l.length){var p=l.index(i.target);38==i.which&&p>0&&p--,40==i.which&&p<l.length-1&&p++,~p||(p=0),l.eq(p).trigger("focus")}}}};var o=e.fn.dropdown;e.fn.dropdown=n,e.fn.dropdown.Constructor=a,e.fn.dropdown.noConflict=function(){return e.fn.dropdown=o,this},e(document).on("click.bs.dropdown.data-api",i).on("click.bs.dropdown.data-api",".dropdown form",function(e){e.stopPropagation()}).on("click.bs.dropdown.data-api",r,a.prototype.toggle).on("keydown.bs.dropdown.data-api",r,a.prototype.keydown).on("keydown.bs.dropdown.data-api",".dropdown-menu",a.prototype.keydown)}(jQuery),+function(e){"use strict";function t(t,n){return this.each(function(){var s=e(this),r=s.data("bs.modal"),a=e.extend({},i.DEFAULTS,s.data(),"object"==typeof t&&t);r||s.data("bs.modal",r=new i(this,a)),"string"==typeof t?r[t](n):a.show&&r.show(n)})}var i=function(t,i){this.options=i,this.$body=e(document.body),this.$element=e(t),this.$dialog=this.$element.find(".modal-dialog"),this.$backdrop=null,this.isShown=null,this.originalBodyPad=null,this.scrollbarWidth=0,this.ignoreBackdropClick=!1,this.options.remote&&this.$element.find(".modal-content").load(this.options.remote,e.proxy(function(){this.$element.trigger("loaded.bs.modal")},this))};i.VERSION="3.3.7",i.TRANSITION_DURATION=300,i.BACKDROP_TRANSITION_DURATION=150,i.DEFAULTS={backdrop:!0,keyboard:!0,show:!0},i.prototype.toggle=function(e){return this.isShown?this.hide():this.show(e)},i.prototype.show=function(t){var n=this,s=e.Event("show.bs.modal",{relatedTarget:t});this.$element.trigger(s),this.isShown||s.isDefaultPrevented()||(this.isShown=!0,this.checkScrollbar(),this.setScrollbar(),this.$body.addClass("modal-open"),this.escape(),this.resize(),this.$element.on("click.dismiss.bs.modal",'[data-dismiss="modal"]',e.proxy(this.hide,this)),this.$dialog.on("mousedown.dismiss.bs.modal",function(){n.$element.one("mouseup.dismiss.bs.modal",function(t){e(t.target).is(n.$element)&&(n.ignoreBackdropClick=!0)})}),this.backdrop(function(){var s=e.support.transition&&n.$element.hasClass("fade");n.$element.parent().length||n.$element.appendTo(n.$body),n.$element.show().scrollTop(0),n.adjustDialog(),s&&n.$element[0].offsetWidth,n.$element.addClass("in"),n.enforceFocus();var r=e.Event("shown.bs.modal",{relatedTarget:t});s?n.$dialog.one("bsTransitionEnd",function(){n.$element.trigger("focus").trigger(r)}).emulateTransitionEnd(i.TRANSITION_DURATION):n.$element.trigger("focus").trigger(r)}))},i.prototype.hide=function(t){t&&t.preventDefault(),t=e.Event("hide.bs.modal"),this.$element.trigger(t),this.isShown&&!t.isDefaultPrevented()&&(this.isShown=!1,this.escape(),this.resize(),e(document).off("focusin.bs.modal"),this.$element.removeClass("in").off("click.dismiss.bs.modal").off("mouseup.dismiss.bs.modal"),this.$dialog.off("mousedown.dismiss.bs.modal"),e.support.transition&&this.$element.hasClass("fade")?this.$element.one("bsTransitionEnd",e.proxy(this.hideModal,this)).emulateTransitionEnd(i.TRANSITION_DURATION):this.hideModal())},i.prototype.enforceFocus=function(){e(document).off("focusin.bs.modal").on("focusin.bs.modal",e.proxy(function(e){document===e.target||this.$element[0]===e.target||this.$element.has(e.target).length||this.$element.trigger("focus")},this))},i.prototype.escape=function(){this.isShown&&this.options.keyboard?this.$element.on("keydown.dismiss.bs.modal",e.proxy(function(e){27==e.which&&this.hide()},this)):this.isShown||this.$element.off("keydown.dismiss.bs.modal")},i.prototype.resize=function(){this.isShown?e(window).on("resize.bs.modal",e.proxy(this.handleUpdate,this)):e(window).off("resize.bs.modal")},i.prototype.hideModal=function(){var e=this;this.$element.hide(),this.backdrop(function(){e.$body.removeClass("modal-open"),e.resetAdjustments(),e.resetScrollbar(),e.$element.trigger("hidden.bs.modal")})},i.prototype.removeBackdrop=function(){this.$backdrop&&this.$backdrop.remove(),this.$backdrop=null},i.prototype.backdrop=function(t){var n=this,s=this.$element.hasClass("fade")?"fade":"";if(this.isShown&&this.options.backdrop){var r=e.support.transition&&s;if(this.$backdrop=e(document.createElement("div")).addClass("modal-backdrop "+s).appendTo(this.$body),this.$element.on("click.dismiss.bs.modal",e.proxy(function(e){return this.ignoreBackdropClick?void(this.ignoreBackdropClick=!1):void(e.target===e.currentTarget&&("static"==this.options.backdrop?this.$element[0].focus():this.hide()))},this)),r&&this.$backdrop[0].offsetWidth,this.$backdrop.addClass("in"),!t)return;r?this.$backdrop.one("bsTransitionEnd",t).emulateTransitionEnd(i.BACKDROP_TRANSITION_DURATION):t()}else if(!this.isShown&&this.$backdrop){this.$backdrop.removeClass("in");var a=function(){n.removeBackdrop(),t&&t()};e.support.transition&&this.$element.hasClass("fade")?this.$backdrop.one("bsTransitionEnd",a).emulateTransitionEnd(i.BACKDROP_TRANSITION_DURATION):a()}else t&&t()},i.prototype.handleUpdate=function(){this.adjustDialog()},i.prototype.adjustDialog=function(){var e=this.$element[0].scrollHeight>document.documentElement.clientHeight;this.$element.css({paddingLeft:!this.bodyIsOverflowing&&e?this.scrollbarWidth:"",paddingRight:this.bodyIsOverflowing&&!e?this.scrollbarWidth:""})},i.prototype.resetAdjustments=function(){this.$element.css({paddingLeft:"",paddingRight:""})},i.prototype.checkScrollbar=function(){var e=window.innerWidth;if(!e){var t=document.documentElement.getBoundingClientRect();e=t.right-Math.abs(t.left)}this.bodyIsOverflowing=document.body.clientWidth<e,this.scrollbarWidth=this.measureScrollbar()},i.prototype.setScrollbar=function(){var e=parseInt(this.$body.css("padding-right")||0,10);this.originalBodyPad=document.body.style.paddingRight||"",this.bodyIsOverflowing&&this.$body.css("padding-right",e+this.scrollbarWidth)},i.prototype.resetScrollbar=function(){this.$body.css("padding-right",this.originalBodyPad)},i.prototype.measureScrollbar=function(){var e=document.createElement("div");e.className="modal-scrollbar-measure",this.$body.append(e);var t=e.offsetWidth-e.clientWidth;return this.$body[0].removeChild(e),t};var n=e.fn.modal;e.fn.modal=t,e.fn.modal.Constructor=i,e.fn.modal.noConflict=function(){return e.fn.modal=n,this},e(document).on("click.bs.modal.data-api",'[data-toggle="modal"]',function(i){var n=e(this),s=n.attr("href"),r=e(n.attr("data-target")||s&&s.replace(/.*(?=#[^\s]+$)/,"")),a=r.data("bs.modal")?"toggle":e.extend({remote:!/#/.test(s)&&s},r.data(),n.data());n.is("a")&&i.preventDefault(),r.one("show.bs.modal",function(e){e.isDefaultPrevented()||r.one("hidden.bs.modal",function(){n.is(":visible")&&n.trigger("focus")})}),t.call(r,a,this)})}(jQuery),+function(e){"use strict";function t(t){return this.each(function(){var n=e(this),s=n.data("bs.tooltip"),r="object"==typeof t&&t;!s&&/destroy|hide/.test(t)||(s||n.data("bs.tooltip",s=new i(this,r)),"string"==typeof t&&s[t]())})}var i=function(e,t){this.type=null,this.options=null,this.enabled=null,this.timeout=null,this.hoverState=null,this.$element=null,this.inState=null,this.init("tooltip",e,t)};i.VERSION="3.3.7",i.TRANSITION_DURATION=150,i.DEFAULTS={animation:!0,placement:"top",selector:!1,template:'<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover focus",title:"",delay:0,html:!1,container:!1,viewport:{selector:"body",padding:0}},i.prototype.init=function(t,i,n){if(this.enabled=!0,this.type=t,this.$element=e(i),this.options=this.getOptions(n),this.$viewport=this.options.viewport&&e(e.isFunction(this.options.viewport)?this.options.viewport.call(this,this.$element):this.options.viewport.selector||this.options.viewport),this.inState={click:!1,hover:!1,focus:!1},this.$element[0]instanceof document.constructor&&!this.options.selector)throw new Error("`selector` option must be specified when initializing "+this.type+" on the window.document object!");for(var s=this.options.trigger.split(" "),r=s.length;r--;){var a=s[r];if("click"==a)this.$element.on("click."+this.type,this.options.selector,e.proxy(this.toggle,this));else if("manual"!=a){var o="hover"==a?"mouseenter":"focusin",l="hover"==a?"mouseleave":"focusout";this.$element.on(o+"."+this.type,this.options.selector,e.proxy(this.enter,this)),this.$element.on(l+"."+this.type,this.options.selector,e.proxy(this.leave,this))}}this.options.selector?this._options=e.extend({},this.options,{trigger:"manual",selector:""}):this.fixTitle()},i.prototype.getDefaults=function(){return i.DEFAULTS},i.prototype.getOptions=function(t){return t=e.extend({},this.getDefaults(),this.$element.data(),t),t.delay&&"number"==typeof t.delay&&(t.delay={show:t.delay,hide:t.delay}),t},i.prototype.getDelegateOptions=function(){var t={},i=this.getDefaults();return this._options&&e.each(this._options,function(e,n){i[e]!=n&&(t[e]=n)}),t},i.prototype.enter=function(t){var i=t instanceof this.constructor?t:e(t.currentTarget).data("bs."+this.type);return i||(i=new this.constructor(t.currentTarget,this.getDelegateOptions()),e(t.currentTarget).data("bs."+this.type,i)),t instanceof e.Event&&(i.inState["focusin"==t.type?"focus":"hover"]=!0),i.tip().hasClass("in")||"in"==i.hoverState?void(i.hoverState="in"):(clearTimeout(i.timeout),i.hoverState="in",i.options.delay&&i.options.delay.show?void(i.timeout=setTimeout(function(){"in"==i.hoverState&&i.show()},i.options.delay.show)):i.show())},i.prototype.isInStateTrue=function(){for(var e in this.inState)if(this.inState[e])return!0;return!1},i.prototype.leave=function(t){var i=t instanceof this.constructor?t:e(t.currentTarget).data("bs."+this.type);if(i||(i=new this.constructor(t.currentTarget,this.getDelegateOptions()),e(t.currentTarget).data("bs."+this.type,i)),t instanceof e.Event&&(i.inState["focusout"==t.type?"focus":"hover"]=!1),!i.isInStateTrue())return clearTimeout(i.timeout),i.hoverState="out",i.options.delay&&i.options.delay.hide?void(i.timeout=setTimeout(function(){"out"==i.hoverState&&i.hide()},i.options.delay.hide)):i.hide()},i.prototype.show=function(){var t=e.Event("show.bs."+this.type);if(this.hasContent()&&this.enabled){this.$element.trigger(t);var n=e.contains(this.$element[0].ownerDocument.documentElement,this.$element[0]);if(t.isDefaultPrevented()||!n)return;var s=this,r=this.tip(),a=this.getUID(this.type);this.setContent(),r.attr("id",a),this.$element.attr("aria-describedby",a),this.options.animation&&r.addClass("fade");var o="function"==typeof this.options.placement?this.options.placement.call(this,r[0],this.$element[0]):this.options.placement,l=/\s?auto?\s?/i,p=l.test(o);p&&(o=o.replace(l,"")||"top"),r.detach().css({top:0,left:0,display:"block"}).addClass(o).data("bs."+this.type,this),this.options.container?r.appendTo(this.options.container):r.insertAfter(this.$element),this.$element.trigger("inserted.bs."+this.type);var c=this.getPosition(),u=r[0].offsetWidth,d=r[0].offsetHeight;if(p){var h=o,f=this.getPosition(this.$viewport);o="bottom"==o&&c.bottom+d>f.bottom?"top":"top"==o&&c.top-d<f.top?"bottom":"right"==o&&c.right+u>f.width?"left":"left"==o&&c.left-u<f.left?"right":o,r.removeClass(h).addClass(o)}var m=this.getCalculatedOffset(o,c,u,d);this.applyPlacement(m,o);var g=function(){var e=s.hoverState;s.$element.trigger("shown.bs."+s.type),s.hoverState=null,"out"==e&&s.leave(s)};e.support.transition&&this.$tip.hasClass("fade")?r.one("bsTransitionEnd",g).emulateTransitionEnd(i.TRANSITION_DURATION):g()}},i.prototype.applyPlacement=function(t,i){var n=this.tip(),s=n[0].offsetWidth,r=n[0].offsetHeight,a=parseInt(n.css("margin-top"),10),o=parseInt(n.css("margin-left"),10);isNaN(a)&&(a=0),isNaN(o)&&(o=0),t.top+=a,t.left+=o,e.offset.setOffset(n[0],e.extend({using:function(e){n.css({top:Math.round(e.top),left:Math.round(e.left)})}},t),0),n.addClass("in");var l=n[0].offsetWidth,p=n[0].offsetHeight;"top"==i&&p!=r&&(t.top=t.top+r-p);var c=this.getViewportAdjustedDelta(i,t,l,p);c.left?t.left+=c.left:t.top+=c.top;var u=/top|bottom/.test(i),d=u?2*c.left-s+l:2*c.top-r+p,h=u?"offsetWidth":"offsetHeight";n.offset(t),this.replaceArrow(d,n[0][h],u)},i.prototype.replaceArrow=function(e,t,i){this.arrow().css(i?"left":"top",50*(1-e/t)+"%").css(i?"top":"left","")},i.prototype.setContent=function(){var e=this.tip(),t=this.getTitle();e.find(".tooltip-inner")[this.options.html?"html":"text"](t),e.removeClass("fade in top bottom left right")},i.prototype.hide=function(t){function n(){"in"!=s.hoverState&&r.detach(),s.$element&&s.$element.removeAttr("aria-describedby").trigger("hidden.bs."+s.type),t&&t()}var s=this,r=e(this.$tip),a=e.Event("hide.bs."+this.type);if(this.$element.trigger(a),!a.isDefaultPrevented())return r.removeClass("in"),e.support.transition&&r.hasClass("fade")?r.one("bsTransitionEnd",n).emulateTransitionEnd(i.TRANSITION_DURATION):n(),this.hoverState=null,this},i.prototype.fixTitle=function(){var e=this.$element;(e.attr("title")||"string"!=typeof e.attr("data-original-title"))&&e.attr("data-original-title",e.attr("title")||"").attr("title","")},i.prototype.hasContent=function(){return this.getTitle()},i.prototype.getPosition=function(t){t=t||this.$element;var i=t[0],n="BODY"==i.tagName,s=i.getBoundingClientRect();null==s.width&&(s=e.extend({},s,{width:s.right-s.left,height:s.bottom-s.top}));var r=window.SVGElement&&i instanceof window.SVGElement,a=n?{top:0,left:0}:r?null:t.offset(),o={scroll:n?document.documentElement.scrollTop||document.body.scrollTop:t.scrollTop()},l=n?{width:e(window).width(),height:e(window).height()}:null;return e.extend({},s,o,l,a)},i.prototype.getCalculatedOffset=function(e,t,i,n){return"bottom"==e?{top:t.top+t.height,left:t.left+t.width/2-i/2}:"top"==e?{top:t.top-n,left:t.left+t.width/2-i/2}:"left"==e?{top:t.top+t.height/2-n/2,left:t.left-i}:{top:t.top+t.height/2-n/2,left:t.left+t.width}},i.prototype.getViewportAdjustedDelta=function(e,t,i,n){var s={top:0,left:0};if(!this.$viewport)return s;var r=this.options.viewport&&this.options.viewport.padding||0,a=this.getPosition(this.$viewport);if(/right|left/.test(e)){var o=t.top-r-a.scroll,l=t.top+r-a.scroll+n;o<a.top?s.top=a.top-o:l>a.top+a.height&&(s.top=a.top+a.height-l)}else{var p=t.left-r,c=t.left+r+i;p<a.left?s.left=a.left-p:c>a.right&&(s.left=a.left+a.width-c)}return s},i.prototype.getTitle=function(){var e,t=this.$element,i=this.options;return e=t.attr("data-original-title")||("function"==typeof i.title?i.title.call(t[0]):i.title)},i.prototype.getUID=function(e){do e+=~~(1e6*Math.random());while(document.getElementById(e));return e},i.prototype.tip=function(){if(!this.$tip&&(this.$tip=e(this.options.template),1!=this.$tip.length))throw new Error(this.type+" `template` option must consist of exactly 1 top-level element!");return this.$tip},i.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".tooltip-arrow")},i.prototype.enable=function(){this.enabled=!0},i.prototype.disable=function(){this.enabled=!1},i.prototype.toggleEnabled=function(){this.enabled=!this.enabled},i.prototype.toggle=function(t){var i=this;t&&(i=e(t.currentTarget).data("bs."+this.type),i||(i=new this.constructor(t.currentTarget,this.getDelegateOptions()),e(t.currentTarget).data("bs."+this.type,i))),t?(i.inState.click=!i.inState.click,i.isInStateTrue()?i.enter(i):i.leave(i)):i.tip().hasClass("in")?i.leave(i):i.enter(i)},i.prototype.destroy=function(){var e=this;clearTimeout(this.timeout),this.hide(function(){e.$element.off("."+e.type).removeData("bs."+e.type),e.$tip&&e.$tip.detach(),e.$tip=null,e.$arrow=null,e.$viewport=null,e.$element=null})};var n=e.fn.tooltip;e.fn.tooltip=t,e.fn.tooltip.Constructor=i,e.fn.tooltip.noConflict=function(){return e.fn.tooltip=n,this}}(jQuery),+function(e){"use strict";function t(t){return this.each(function(){var n=e(this),s=n.data("bs.popover"),r="object"==typeof t&&t;!s&&/destroy|hide/.test(t)||(s||n.data("bs.popover",s=new i(this,r)),"string"==typeof t&&s[t]())})}var i=function(e,t){this.init("popover",e,t)};if(!e.fn.tooltip)throw new Error("Popover requires tooltip.js");i.VERSION="3.3.7",i.DEFAULTS=e.extend({},e.fn.tooltip.Constructor.DEFAULTS,{placement:"right",trigger:"click",content:"",template:'<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'}),i.prototype=e.extend({},e.fn.tooltip.Constructor.prototype),i.prototype.constructor=i,i.prototype.getDefaults=function(){return i.DEFAULTS},i.prototype.setContent=function(){var e=this.tip(),t=this.getTitle(),i=this.getContent();e.find(".popover-title")[this.options.html?"html":"text"](t),e.find(".popover-content").children().detach().end()[this.options.html?"string"==typeof i?"html":"append":"text"](i),e.removeClass("fade top bottom left right in"),e.find(".popover-title").html()||e.find(".popover-title").hide()},i.prototype.hasContent=function(){return this.getTitle()||this.getContent()},i.prototype.getContent=function(){var e=this.$element,t=this.options;return e.attr("data-content")||("function"==typeof t.content?t.content.call(e[0]):t.content)},i.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".arrow")};var n=e.fn.popover;e.fn.popover=t,e.fn.popover.Constructor=i,e.fn.popover.noConflict=function(){return e.fn.popover=n,this}}(jQuery),+function(e){"use strict";function t(i,n){this.$body=e(document.body),this.$scrollElement=e(e(i).is(document.body)?window:i),this.options=e.extend({},t.DEFAULTS,n),this.selector=(this.options.target||"")+" .nav li > a",this.offsets=[],this.targets=[],this.activeTarget=null,this.scrollHeight=0,this.$scrollElement.on("scroll.bs.scrollspy",e.proxy(this.process,this)),this.refresh(),this.process()}function i(i){return this.each(function(){var n=e(this),s=n.data("bs.scrollspy"),r="object"==typeof i&&i;s||n.data("bs.scrollspy",s=new t(this,r)),"string"==typeof i&&s[i]()})}t.VERSION="3.3.7",t.DEFAULTS={offset:10},t.prototype.getScrollHeight=function(){return this.$scrollElement[0].scrollHeight||Math.max(this.$body[0].scrollHeight,document.documentElement.scrollHeight)},t.prototype.refresh=function(){var t=this,i="offset",n=0;this.offsets=[],this.targets=[],this.scrollHeight=this.getScrollHeight(),e.isWindow(this.$scrollElement[0])||(i="position",n=this.$scrollElement.scrollTop()),this.$body.find(this.selector).map(function(){var t=e(this),s=t.data("target")||t.attr("href"),r=/^#./.test(s)&&e(s);return r&&r.length&&r.is(":visible")&&[[r[i]().top+n,s]]||null}).sort(function(e,t){return e[0]-t[0]}).each(function(){t.offsets.push(this[0]),t.targets.push(this[1])})},t.prototype.process=function(){var e,t=this.$scrollElement.scrollTop()+this.options.offset,i=this.getScrollHeight(),n=this.options.offset+i-this.$scrollElement.height(),s=this.offsets,r=this.targets,a=this.activeTarget;if(this.scrollHeight!=i&&this.refresh(),t>=n)return a!=(e=r[r.length-1])&&this.activate(e);if(a&&t<s[0])return this.activeTarget=null,this.clear();for(e=s.length;e--;)a!=r[e]&&t>=s[e]&&(void 0===s[e+1]||t<s[e+1])&&this.activate(r[e])},t.prototype.activate=function(t){this.activeTarget=t,this.clear();var i=this.selector+'[data-target="'+t+'"],'+this.selector+'[href="'+t+'"]',n=e(i).parents("li").addClass("active");n.parent(".dropdown-menu").length&&(n=n.closest("li.dropdown").addClass("active")),n.trigger("activate.bs.scrollspy")},t.prototype.clear=function(){e(this.selector).parentsUntil(this.options.target,".active").removeClass("active")};var n=e.fn.scrollspy;e.fn.scrollspy=i,e.fn.scrollspy.Constructor=t,e.fn.scrollspy.noConflict=function(){return e.fn.scrollspy=n,this},e(window).on("load.bs.scrollspy.data-api",function(){e('[data-spy="scroll"]').each(function(){var t=e(this);i.call(t,t.data())})})}(jQuery),+function(e){"use strict";function t(t){return this.each(function(){var n=e(this),s=n.data("bs.tab");s||n.data("bs.tab",s=new i(this)),"string"==typeof t&&s[t]()})}var i=function(t){this.element=e(t)};i.VERSION="3.3.7",i.TRANSITION_DURATION=150,i.prototype.show=function(){var t=this.element,i=t.closest("ul:not(.dropdown-menu)"),n=t.data("target");if(n||(n=t.attr("href"),n=n&&n.replace(/.*(?=#[^\s]*$)/,"")),!t.parent("li").hasClass("active")){var s=i.find(".active:last a"),r=e.Event("hide.bs.tab",{relatedTarget:t[0]}),a=e.Event("show.bs.tab",{relatedTarget:s[0]});if(s.trigger(r),t.trigger(a),!a.isDefaultPrevented()&&!r.isDefaultPrevented()){var o=e(n);this.activate(t.closest("li"),i),this.activate(o,o.parent(),function(){s.trigger({type:"hidden.bs.tab",relatedTarget:t[0]}),t.trigger({type:"shown.bs.tab",relatedTarget:s[0]})})}}},i.prototype.activate=function(t,n,s){function r(){a.removeClass("active").find("> .dropdown-menu > .active").removeClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded",!1),t.addClass("active").find('[data-toggle="tab"]').attr("aria-expanded",!0),o?(t[0].offsetWidth,t.addClass("in")):t.removeClass("fade"),t.parent(".dropdown-menu").length&&t.closest("li.dropdown").addClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded",!0),s&&s()}var a=n.find("> .active"),o=s&&e.support.transition&&(a.length&&a.hasClass("fade")||!!n.find("> .fade").length);a.length&&o?a.one("bsTransitionEnd",r).emulateTransitionEnd(i.TRANSITION_DURATION):r(),a.removeClass("in")};var n=e.fn.tab;e.fn.tab=t,e.fn.tab.Constructor=i,e.fn.tab.noConflict=function(){return e.fn.tab=n,this};var s=function(i){i.preventDefault(),t.call(e(this),"show")};e(document).on("click.bs.tab.data-api",'[data-toggle="tab"]',s).on("click.bs.tab.data-api",'[data-toggle="pill"]',s)}(jQuery),+function(e){"use strict";function t(t){return this.each(function(){var n=e(this),s=n.data("bs.affix"),r="object"==typeof t&&t;s||n.data("bs.affix",s=new i(this,r)),"string"==typeof t&&s[t]()})}var i=function(t,n){this.options=e.extend({},i.DEFAULTS,n),this.$target=e(this.options.target).on("scroll.bs.affix.data-api",e.proxy(this.checkPosition,this)).on("click.bs.affix.data-api",e.proxy(this.checkPositionWithEventLoop,this)),this.$element=e(t),this.affixed=null,this.unpin=null,this.pinnedOffset=null,this.checkPosition()};i.VERSION="3.3.7",i.RESET="affix affix-top affix-bottom",i.DEFAULTS={offset:0,target:window},i.prototype.getState=function(e,t,i,n){var s=this.$target.scrollTop(),r=this.$element.offset(),a=this.$target.height();if(null!=i&&"top"==this.affixed)return s<i&&"top";if("bottom"==this.affixed)return null!=i?!(s+this.unpin<=r.top)&&"bottom":!(s+a<=e-n)&&"bottom";var o=null==this.affixed,l=o?s:r.top,p=o?a:t;return null!=i&&s<=i?"top":null!=n&&l+p>=e-n&&"bottom"},i.prototype.getPinnedOffset=function(){if(this.pinnedOffset)return this.pinnedOffset;this.$element.removeClass(i.RESET).addClass("affix");var e=this.$target.scrollTop(),t=this.$element.offset();return this.pinnedOffset=t.top-e},i.prototype.checkPositionWithEventLoop=function(){setTimeout(e.proxy(this.checkPosition,this),1)},i.prototype.checkPosition=function(){if(this.$element.is(":visible")){var t=this.$element.height(),n=this.options.offset,s=n.top,r=n.bottom,a=Math.max(e(document).height(),e(document.body).height());"object"!=typeof n&&(r=s=n),"function"==typeof s&&(s=n.top(this.$element)),"function"==typeof r&&(r=n.bottom(this.$element));var o=this.getState(a,t,s,r);if(this.affixed!=o){null!=this.unpin&&this.$element.css("top","");var l="affix"+(o?"-"+o:""),p=e.Event(l+".bs.affix");if(this.$element.trigger(p),p.isDefaultPrevented())return;this.affixed=o,this.unpin="bottom"==o?this.getPinnedOffset():null,this.$element.removeClass(i.RESET).addClass(l).trigger(l.replace("affix","affixed")+".bs.affix")}"bottom"==o&&this.$element.offset({top:a-t-r})}};var n=e.fn.affix;e.fn.affix=t,e.fn.affix.Constructor=i,e.fn.affix.noConflict=function(){return e.fn.affix=n,this},e(window).on("load",function(){e('[data-spy="affix"]').each(function(){var i=e(this),n=i.data();n.offset=n.offset||{},null!=n.offsetBottom&&(n.offset.bottom=n.offsetBottom),null!=n.offsetTop&&(n.offset.top=n.offsetTop),t.call(i,n)})})}(jQuery),$(document).ready(function(){$(".popup").magnificPopup(),$(".date").mask("00/00/0000"),$(".phone_us").mask("+38 (000) 000-00-00"),$("#header").removeClass("default"),$(window).scroll(function(){$(this).scrollTop()>0?$("#header").addClass("default").fadeIn("fast"):$("#header").removeClass("default").fadeIn("fast")});var e=800,t=$("#list-images li"),i=t.length;t.wrapAll('<div id="slide-wrap"></div>').css({float:"left",width:e}),$("#slide-wrap").css({width:e*i}),$("#list-links li").hover(function(){$("#list-links li").removeClass("hover");var t=$(this).index("#list-links li");$(this).parent().addClass("hover"),$("#slide-wrap").stop().animate({marginLeft:e*-t})}),$('a[href^="#"]').click(function(){var e=$(this).attr("href");return $("body").animate({scrollTop:$(e).offset().top-87},1e3),!1}),function(){"use strict";function e(e){e.fn.swiper=function(t){var n;return e(this).each(function(){var e=new i(this,t);n||(n=e)}),n}}var t,i=function(e,s){function a(e){return Math.floor(e)}function o(){var e=C.params.autoplay,t=C.slides.eq(C.activeIndex);t.attr("data-swiper-autoplay")&&(e=t.attr("data-swiper-autoplay")||C.params.autoplay),C.autoplayTimeoutId=setTimeout(function(){C.params.loop?(C.fixLoop(),C._slideNext(),C.emit("onAutoplay",C)):C.isEnd?s.autoplayStopOnLast?C.stopAutoplay():(C._slideTo(0),C.emit("onAutoplay",C)):(C._slideNext(),C.emit("onAutoplay",C))},e)}function l(e,i){var n=t(e.target);if(!n.is(i))if("string"==typeof i)n=n.parents(i);else if(i.nodeType){var s;return n.parents().each(function(e,t){t===i&&(s=i)}),s?i:void 0}if(0!==n.length)return n[0]}function p(e,t){t=t||{};var i=window.MutationObserver||window.WebkitMutationObserver,n=new i(function(e){e.forEach(function(e){C.onResize(!0),C.emit("onObserverUpdate",C,e)})});n.observe(e,{attributes:"undefined"==typeof t.attributes||t.attributes,childList:"undefined"==typeof t.childList||t.childList,characterData:"undefined"==typeof t.characterData||t.characterData}),C.observers.push(n)}function c(e){e.originalEvent&&(e=e.originalEvent);var t=e.keyCode||e.charCode;if(!C.params.allowSwipeToNext&&(C.isHorizontal()&&39===t||!C.isHorizontal()&&40===t))return!1;if(!C.params.allowSwipeToPrev&&(C.isHorizontal()&&37===t||!C.isHorizontal()&&38===t))return!1;if(!(e.shiftKey||e.altKey||e.ctrlKey||e.metaKey||document.activeElement&&document.activeElement.nodeName&&("input"===document.activeElement.nodeName.toLowerCase()||"textarea"===document.activeElement.nodeName.toLowerCase()))){if(37===t||39===t||38===t||40===t){var i=!1;if(C.container.parents("."+C.params.slideClass).length>0&&0===C.container.parents("."+C.params.slideActiveClass).length)return;var n={left:window.pageXOffset,top:window.pageYOffset},s=window.innerWidth,r=window.innerHeight,a=C.container.offset();C.rtl&&(a.left=a.left-C.container[0].scrollLeft);for(var o=[[a.left,a.top],[a.left+C.width,a.top],[a.left,a.top+C.height],[a.left+C.width,a.top+C.height]],l=0;l<o.length;l++){var p=o[l];p[0]>=n.left&&p[0]<=n.left+s&&p[1]>=n.top&&p[1]<=n.top+r&&(i=!0)}if(!i)return}C.isHorizontal()?(37!==t&&39!==t||(e.preventDefault?e.preventDefault():e.returnValue=!1),(39===t&&!C.rtl||37===t&&C.rtl)&&C.slideNext(),(37===t&&!C.rtl||39===t&&C.rtl)&&C.slidePrev()):(38!==t&&40!==t||(e.preventDefault?e.preventDefault():e.returnValue=!1),40===t&&C.slideNext(),38===t&&C.slidePrev())}}function u(){var e="onwheel",t=e in document;if(!t){var i=document.createElement("div");i.setAttribute(e,"return;"),
t="function"==typeof i[e]}return!t&&document.implementation&&document.implementation.hasFeature&&document.implementation.hasFeature("","")!==!0&&(t=document.implementation.hasFeature("Events.wheel","3.0")),t}function d(e){e.originalEvent&&(e=e.originalEvent);var t=0,i=C.rtl?-1:1,n=h(e);if(C.params.mousewheelForceToAxis)if(C.isHorizontal()){if(!(Math.abs(n.pixelX)>Math.abs(n.pixelY)))return;t=n.pixelX*i}else{if(!(Math.abs(n.pixelY)>Math.abs(n.pixelX)))return;t=n.pixelY}else t=Math.abs(n.pixelX)>Math.abs(n.pixelY)?-n.pixelX*i:-n.pixelY;if(0!==t){if(C.params.mousewheelInvert&&(t=-t),C.params.freeMode){var s=C.getWrapperTranslate()+t*C.params.mousewheelSensitivity,r=C.isBeginning,a=C.isEnd;if(s>=C.minTranslate()&&(s=C.minTranslate()),s<=C.maxTranslate()&&(s=C.maxTranslate()),C.setWrapperTransition(0),C.setWrapperTranslate(s),C.updateProgress(),C.updateActiveIndex(),(!r&&C.isBeginning||!a&&C.isEnd)&&C.updateClasses(),C.params.freeModeSticky?(clearTimeout(C.mousewheel.timeout),C.mousewheel.timeout=setTimeout(function(){C.slideReset()},300)):C.params.lazyLoading&&C.lazy&&C.lazy.load(),C.emit("onScroll",C,e),C.params.autoplay&&C.params.autoplayDisableOnInteraction&&C.stopAutoplay(),0===s||s===C.maxTranslate())return}else{if((new window.Date).getTime()-C.mousewheel.lastScrollTime>60)if(t<0)if(C.isEnd&&!C.params.loop||C.animating){if(C.params.mousewheelReleaseOnEdges)return!0}else C.slideNext(),C.emit("onScroll",C,e);else if(C.isBeginning&&!C.params.loop||C.animating){if(C.params.mousewheelReleaseOnEdges)return!0}else C.slidePrev(),C.emit("onScroll",C,e);C.mousewheel.lastScrollTime=(new window.Date).getTime()}return e.preventDefault?e.preventDefault():e.returnValue=!1,!1}}function h(e){var t=10,i=40,n=800,s=0,r=0,a=0,o=0;return"detail"in e&&(r=e.detail),"wheelDelta"in e&&(r=-e.wheelDelta/120),"wheelDeltaY"in e&&(r=-e.wheelDeltaY/120),"wheelDeltaX"in e&&(s=-e.wheelDeltaX/120),"axis"in e&&e.axis===e.HORIZONTAL_AXIS&&(s=r,r=0),a=s*t,o=r*t,"deltaY"in e&&(o=e.deltaY),"deltaX"in e&&(a=e.deltaX),(a||o)&&e.deltaMode&&(1===e.deltaMode?(a*=i,o*=i):(a*=n,o*=n)),a&&!s&&(s=a<1?-1:1),o&&!r&&(r=o<1?-1:1),{spinX:s,spinY:r,pixelX:a,pixelY:o}}function f(e,i){e=t(e);var n,s,r,a=C.rtl?-1:1;n=e.attr("data-swiper-parallax")||"0",s=e.attr("data-swiper-parallax-x"),r=e.attr("data-swiper-parallax-y"),s||r?(s=s||"0",r=r||"0"):C.isHorizontal()?(s=n,r="0"):(r=n,s="0"),s=s.indexOf("%")>=0?parseInt(s,10)*i*a+"%":s*i*a+"px",r=r.indexOf("%")>=0?parseInt(r,10)*i+"%":r*i+"px",e.transform("translate3d("+s+", "+r+",0px)")}function m(e){return 0!==e.indexOf("on")&&(e=e[0]!==e[0].toUpperCase()?"on"+e[0].toUpperCase()+e.substring(1):"on"+e),e}if(!(this instanceof i))return new i(e,s);var g={direction:"horizontal",touchEventsTarget:"container",initialSlide:0,speed:300,autoplay:!1,autoplayDisableOnInteraction:!0,autoplayStopOnLast:!1,iOSEdgeSwipeDetection:!1,iOSEdgeSwipeThreshold:20,freeMode:!1,freeModeMomentum:!0,freeModeMomentumRatio:1,freeModeMomentumBounce:!0,freeModeMomentumBounceRatio:1,freeModeMomentumVelocityRatio:1,freeModeSticky:!1,freeModeMinimumVelocity:.02,autoHeight:!1,setWrapperSize:!1,virtualTranslate:!1,effect:"slide",coverflow:{rotate:50,stretch:0,depth:100,modifier:1,slideShadows:!0},flip:{slideShadows:!0,limitRotation:!0},cube:{slideShadows:!0,shadow:!0,shadowOffset:20,shadowScale:.94},fade:{crossFade:!1},parallax:!1,zoom:!1,zoomMax:3,zoomMin:1,zoomToggle:!0,scrollbar:null,scrollbarHide:!0,scrollbarDraggable:!1,scrollbarSnapOnRelease:!1,keyboardControl:!1,mousewheelControl:!1,mousewheelReleaseOnEdges:!1,mousewheelInvert:!1,mousewheelForceToAxis:!1,mousewheelSensitivity:1,mousewheelEventsTarged:"container",hashnav:!1,hashnavWatchState:!1,history:!1,replaceState:!1,breakpoints:void 0,spaceBetween:0,slidesPerView:1,slidesPerColumn:1,slidesPerColumnFill:"column",slidesPerGroup:1,centeredSlides:!1,slidesOffsetBefore:0,slidesOffsetAfter:0,roundLengths:!1,touchRatio:1,touchAngle:45,simulateTouch:!0,shortSwipes:!0,longSwipes:!0,longSwipesRatio:.5,longSwipesMs:300,followFinger:!0,onlyExternal:!1,threshold:0,touchMoveStopPropagation:!0,touchReleaseOnEdges:!1,uniqueNavElements:!0,pagination:null,paginationElement:"span",paginationClickable:!1,paginationHide:!1,paginationBulletRender:null,paginationProgressRender:null,paginationFractionRender:null,paginationCustomRender:null,paginationType:"bullets",resistance:!0,resistanceRatio:.85,nextButton:null,prevButton:null,watchSlidesProgress:!1,watchSlidesVisibility:!1,grabCursor:!1,preventClicks:!0,preventClicksPropagation:!0,slideToClickedSlide:!1,lazyLoading:!1,lazyLoadingInPrevNext:!1,lazyLoadingInPrevNextAmount:1,lazyLoadingOnTransitionStart:!1,preloadImages:!0,updateOnImagesReady:!0,loop:!1,loopAdditionalSlides:0,loopedSlides:null,control:void 0,controlInverse:!1,controlBy:"slide",normalizeSlideIndex:!0,allowSwipeToPrev:!0,allowSwipeToNext:!0,swipeHandler:null,noSwiping:!0,noSwipingClass:"swiper-no-swiping",passiveListeners:!0,containerModifierClass:"swiper-container-",slideClass:"swiper-slide",slideActiveClass:"swiper-slide-active",slideDuplicateActiveClass:"swiper-slide-duplicate-active",slideVisibleClass:"swiper-slide-visible",slideDuplicateClass:"swiper-slide-duplicate",slideNextClass:"swiper-slide-next",slideDuplicateNextClass:"swiper-slide-duplicate-next",slidePrevClass:"swiper-slide-prev",slideDuplicatePrevClass:"swiper-slide-duplicate-prev",wrapperClass:"swiper-wrapper",bulletClass:"swiper-pagination-bullet",bulletActiveClass:"swiper-pagination-bullet-active",buttonDisabledClass:"swiper-button-disabled",paginationCurrentClass:"swiper-pagination-current",paginationTotalClass:"swiper-pagination-total",paginationHiddenClass:"swiper-pagination-hidden",paginationProgressbarClass:"swiper-pagination-progressbar",paginationClickableClass:"swiper-pagination-clickable",paginationModifierClass:"swiper-pagination-",lazyLoadingClass:"swiper-lazy",lazyStatusLoadingClass:"swiper-lazy-loading",lazyStatusLoadedClass:"swiper-lazy-loaded",lazyPreloaderClass:"swiper-lazy-preloader",notificationClass:"swiper-notification",preloaderClass:"preloader",zoomContainerClass:"swiper-zoom-container",observer:!1,observeParents:!1,a11y:!1,prevSlideMessage:"Previous slide",nextSlideMessage:"Next slide",firstSlideMessage:"This is the first slide",lastSlideMessage:"This is the last slide",paginationBulletMessage:"Go to slide {{index}}",runCallbacksOnInit:!0},v=s&&s.virtualTranslate;s=s||{};var y={};for(var w in s)if("object"!=typeof s[w]||null===s[w]||(s[w].nodeType||s[w]===window||s[w]===document||"undefined"!=typeof n&&s[w]instanceof n||"undefined"!=typeof jQuery&&s[w]instanceof jQuery))y[w]=s[w];else{y[w]={};for(var b in s[w])y[w][b]=s[w][b]}for(var x in g)if("undefined"==typeof s[x])s[x]=g[x];else if("object"==typeof s[x])for(var T in g[x])"undefined"==typeof s[x][T]&&(s[x][T]=g[x][T]);var C=this;if(C.params=s,C.originalParams=y,C.classNames=[],"undefined"!=typeof t&&"undefined"!=typeof n&&(t=n),("undefined"!=typeof t||(t="undefined"==typeof n?window.Dom7||window.Zepto||window.jQuery:n))&&(C.$=t,C.currentBreakpoint=void 0,C.getActiveBreakpoint=function(){if(!C.params.breakpoints)return!1;var e,t=!1,i=[];for(e in C.params.breakpoints)C.params.breakpoints.hasOwnProperty(e)&&i.push(e);i.sort(function(e,t){return parseInt(e,10)>parseInt(t,10)});for(var n=0;n<i.length;n++)e=i[n],e>=window.innerWidth&&!t&&(t=e);return t||"max"},C.setBreakpoint=function(){var e=C.getActiveBreakpoint();if(e&&C.currentBreakpoint!==e){var t=e in C.params.breakpoints?C.params.breakpoints[e]:C.originalParams,i=C.params.loop&&t.slidesPerView!==C.params.slidesPerView;for(var n in t)C.params[n]=t[n];C.currentBreakpoint=e,i&&C.destroyLoop&&C.reLoop(!0)}},C.params.breakpoints&&C.setBreakpoint(),C.container=t(e),0!==C.container.length)){if(C.container.length>1){var S=[];return C.container.each(function(){S.push(new i(this,s))}),S}C.container[0].swiper=C,C.container.data("swiper",C),C.classNames.push(C.params.containerModifierClass+C.params.direction),C.params.freeMode&&C.classNames.push(C.params.containerModifierClass+"free-mode"),C.support.flexbox||(C.classNames.push(C.params.containerModifierClass+"no-flexbox"),C.params.slidesPerColumn=1),C.params.autoHeight&&C.classNames.push(C.params.containerModifierClass+"autoheight"),(C.params.parallax||C.params.watchSlidesVisibility)&&(C.params.watchSlidesProgress=!0),C.params.touchReleaseOnEdges&&(C.params.resistanceRatio=0),["cube","coverflow","flip"].indexOf(C.params.effect)>=0&&(C.support.transforms3d?(C.params.watchSlidesProgress=!0,C.classNames.push(C.params.containerModifierClass+"3d")):C.params.effect="slide"),"slide"!==C.params.effect&&C.classNames.push(C.params.containerModifierClass+C.params.effect),"cube"===C.params.effect&&(C.params.resistanceRatio=0,C.params.slidesPerView=1,C.params.slidesPerColumn=1,C.params.slidesPerGroup=1,C.params.centeredSlides=!1,C.params.spaceBetween=0,C.params.virtualTranslate=!0,C.params.setWrapperSize=!1),"fade"!==C.params.effect&&"flip"!==C.params.effect||(C.params.slidesPerView=1,C.params.slidesPerColumn=1,C.params.slidesPerGroup=1,C.params.watchSlidesProgress=!0,C.params.spaceBetween=0,C.params.setWrapperSize=!1,"undefined"==typeof v&&(C.params.virtualTranslate=!0)),C.params.grabCursor&&C.support.touch&&(C.params.grabCursor=!1),C.wrapper=C.container.children("."+C.params.wrapperClass),C.params.pagination&&(C.paginationContainer=t(C.params.pagination),C.params.uniqueNavElements&&"string"==typeof C.params.pagination&&C.paginationContainer.length>1&&1===C.container.find(C.params.pagination).length&&(C.paginationContainer=C.container.find(C.params.pagination)),"bullets"===C.params.paginationType&&C.params.paginationClickable?C.paginationContainer.addClass(C.params.paginationModifierClass+"clickable"):C.params.paginationClickable=!1,C.paginationContainer.addClass(C.params.paginationModifierClass+C.params.paginationType)),(C.params.nextButton||C.params.prevButton)&&(C.params.nextButton&&(C.nextButton=t(C.params.nextButton),C.params.uniqueNavElements&&"string"==typeof C.params.nextButton&&C.nextButton.length>1&&1===C.container.find(C.params.nextButton).length&&(C.nextButton=C.container.find(C.params.nextButton))),C.params.prevButton&&(C.prevButton=t(C.params.prevButton),C.params.uniqueNavElements&&"string"==typeof C.params.prevButton&&C.prevButton.length>1&&1===C.container.find(C.params.prevButton).length&&(C.prevButton=C.container.find(C.params.prevButton)))),C.isHorizontal=function(){return"horizontal"===C.params.direction},C.rtl=C.isHorizontal()&&("rtl"===C.container[0].dir.toLowerCase()||"rtl"===C.container.css("direction")),C.rtl&&C.classNames.push(C.params.containerModifierClass+"rtl"),C.rtl&&(C.wrongRTL="-webkit-box"===C.wrapper.css("display")),C.params.slidesPerColumn>1&&C.classNames.push(C.params.containerModifierClass+"multirow"),C.device.android&&C.classNames.push(C.params.containerModifierClass+"android"),C.container.addClass(C.classNames.join(" ")),C.translate=0,C.progress=0,C.velocity=0,C.lockSwipeToNext=function(){C.params.allowSwipeToNext=!1,C.params.allowSwipeToPrev===!1&&C.params.grabCursor&&C.unsetGrabCursor()},C.lockSwipeToPrev=function(){C.params.allowSwipeToPrev=!1,C.params.allowSwipeToNext===!1&&C.params.grabCursor&&C.unsetGrabCursor()},C.lockSwipes=function(){C.params.allowSwipeToNext=C.params.allowSwipeToPrev=!1,C.params.grabCursor&&C.unsetGrabCursor()},C.unlockSwipeToNext=function(){C.params.allowSwipeToNext=!0,C.params.allowSwipeToPrev===!0&&C.params.grabCursor&&C.setGrabCursor()},C.unlockSwipeToPrev=function(){C.params.allowSwipeToPrev=!0,C.params.allowSwipeToNext===!0&&C.params.grabCursor&&C.setGrabCursor()},C.unlockSwipes=function(){C.params.allowSwipeToNext=C.params.allowSwipeToPrev=!0,C.params.grabCursor&&C.setGrabCursor()},C.setGrabCursor=function(e){C.container[0].style.cursor="move",C.container[0].style.cursor=e?"-webkit-grabbing":"-webkit-grab",C.container[0].style.cursor=e?"-moz-grabbin":"-moz-grab",C.container[0].style.cursor=e?"grabbing":"grab"},C.unsetGrabCursor=function(){C.container[0].style.cursor=""},C.params.grabCursor&&C.setGrabCursor(),C.imagesToLoad=[],C.imagesLoaded=0,C.loadImage=function(e,t,i,n,s,r){function a(){r&&r()}var o;e.complete&&s?a():t?(o=new window.Image,o.onload=a,o.onerror=a,n&&(o.sizes=n),i&&(o.srcset=i),t&&(o.src=t)):a()},C.preloadImages=function(){function e(){"undefined"!=typeof C&&null!==C&&(void 0!==C.imagesLoaded&&C.imagesLoaded++,C.imagesLoaded===C.imagesToLoad.length&&(C.params.updateOnImagesReady&&C.update(),C.emit("onImagesReady",C)))}C.imagesToLoad=C.container.find("img");for(var t=0;t<C.imagesToLoad.length;t++)C.loadImage(C.imagesToLoad[t],C.imagesToLoad[t].currentSrc||C.imagesToLoad[t].getAttribute("src"),C.imagesToLoad[t].srcset||C.imagesToLoad[t].getAttribute("srcset"),C.imagesToLoad[t].sizes||C.imagesToLoad[t].getAttribute("sizes"),!0,e)},C.autoplayTimeoutId=void 0,C.autoplaying=!1,C.autoplayPaused=!1,C.startAutoplay=function(){return"undefined"==typeof C.autoplayTimeoutId&&(!!C.params.autoplay&&(!C.autoplaying&&(C.autoplaying=!0,C.emit("onAutoplayStart",C),void o())))},C.stopAutoplay=function(e){C.autoplayTimeoutId&&(C.autoplayTimeoutId&&clearTimeout(C.autoplayTimeoutId),C.autoplaying=!1,C.autoplayTimeoutId=void 0,C.emit("onAutoplayStop",C))},C.pauseAutoplay=function(e){C.autoplayPaused||(C.autoplayTimeoutId&&clearTimeout(C.autoplayTimeoutId),C.autoplayPaused=!0,0===e?(C.autoplayPaused=!1,o()):C.wrapper.transitionEnd(function(){C&&(C.autoplayPaused=!1,C.autoplaying?o():C.stopAutoplay())}))},C.minTranslate=function(){return-C.snapGrid[0]},C.maxTranslate=function(){return-C.snapGrid[C.snapGrid.length-1]},C.updateAutoHeight=function(){var e=[],t=0;if("auto"!==C.params.slidesPerView&&C.params.slidesPerView>1)for(r=0;r<Math.ceil(C.params.slidesPerView);r++){var i=C.activeIndex+r;if(i>C.slides.length)break;e.push(C.slides.eq(i)[0])}else e.push(C.slides.eq(C.activeIndex)[0]);for(r=0;r<e.length;r++)if("undefined"!=typeof e[r]){var n=e[r].offsetHeight;t=n>t?n:t}t&&C.wrapper.css("height",t+"px")},C.updateContainerSize=function(){var e,t;e="undefined"!=typeof C.params.width?C.params.width:C.container[0].clientWidth,t="undefined"!=typeof C.params.height?C.params.height:C.container[0].clientHeight,0===e&&C.isHorizontal()||0===t&&!C.isHorizontal()||(e=e-parseInt(C.container.css("padding-left"),10)-parseInt(C.container.css("padding-right"),10),t=t-parseInt(C.container.css("padding-top"),10)-parseInt(C.container.css("padding-bottom"),10),C.width=e,C.height=t,C.size=C.isHorizontal()?C.width:C.height)},C.updateSlidesSize=function(){C.slides=C.wrapper.children("."+C.params.slideClass),C.snapGrid=[],C.slidesGrid=[],C.slidesSizesGrid=[];var e,t=C.params.spaceBetween,i=-C.params.slidesOffsetBefore,n=0,s=0;if("undefined"!=typeof C.size){"string"==typeof t&&t.indexOf("%")>=0&&(t=parseFloat(t.replace("%",""))/100*C.size),C.virtualSize=-t,C.rtl?C.slides.css({marginLeft:"",marginTop:""}):C.slides.css({marginRight:"",marginBottom:""});var r;C.params.slidesPerColumn>1&&(r=Math.floor(C.slides.length/C.params.slidesPerColumn)===C.slides.length/C.params.slidesPerColumn?C.slides.length:Math.ceil(C.slides.length/C.params.slidesPerColumn)*C.params.slidesPerColumn,"auto"!==C.params.slidesPerView&&"row"===C.params.slidesPerColumnFill&&(r=Math.max(r,C.params.slidesPerView*C.params.slidesPerColumn)));var o,l=C.params.slidesPerColumn,p=r/l,c=p-(C.params.slidesPerColumn*p-C.slides.length);for(e=0;e<C.slides.length;e++){o=0;var u=C.slides.eq(e);if(C.params.slidesPerColumn>1){var d,h,f;"column"===C.params.slidesPerColumnFill?(h=Math.floor(e/l),f=e-h*l,(h>c||h===c&&f===l-1)&&++f>=l&&(f=0,h++),d=h+f*r/l,u.css({"-webkit-box-ordinal-group":d,"-moz-box-ordinal-group":d,"-ms-flex-order":d,"-webkit-order":d,order:d})):(f=Math.floor(e/p),h=e-f*p),u.css("margin-"+(C.isHorizontal()?"top":"left"),0!==f&&C.params.spaceBetween&&C.params.spaceBetween+"px").attr("data-swiper-column",h).attr("data-swiper-row",f)}"none"!==u.css("display")&&("auto"===C.params.slidesPerView?(o=C.isHorizontal()?u.outerWidth(!0):u.outerHeight(!0),C.params.roundLengths&&(o=a(o))):(o=(C.size-(C.params.slidesPerView-1)*t)/C.params.slidesPerView,C.params.roundLengths&&(o=a(o)),C.isHorizontal()?C.slides[e].style.width=o+"px":C.slides[e].style.height=o+"px"),C.slides[e].swiperSlideSize=o,C.slidesSizesGrid.push(o),C.params.centeredSlides?(i=i+o/2+n/2+t,0===e&&(i=i-C.size/2-t),Math.abs(i)<.001&&(i=0),s%C.params.slidesPerGroup===0&&C.snapGrid.push(i),C.slidesGrid.push(i)):(s%C.params.slidesPerGroup===0&&C.snapGrid.push(i),C.slidesGrid.push(i),i=i+o+t),C.virtualSize+=o+t,n=o,s++)}C.virtualSize=Math.max(C.virtualSize,C.size)+C.params.slidesOffsetAfter;var m;if(C.rtl&&C.wrongRTL&&("slide"===C.params.effect||"coverflow"===C.params.effect)&&C.wrapper.css({width:C.virtualSize+C.params.spaceBetween+"px"}),C.support.flexbox&&!C.params.setWrapperSize||(C.isHorizontal()?C.wrapper.css({width:C.virtualSize+C.params.spaceBetween+"px"}):C.wrapper.css({height:C.virtualSize+C.params.spaceBetween+"px"})),C.params.slidesPerColumn>1&&(C.virtualSize=(o+C.params.spaceBetween)*r,C.virtualSize=Math.ceil(C.virtualSize/C.params.slidesPerColumn)-C.params.spaceBetween,C.isHorizontal()?C.wrapper.css({width:C.virtualSize+C.params.spaceBetween+"px"}):C.wrapper.css({height:C.virtualSize+C.params.spaceBetween+"px"}),C.params.centeredSlides)){for(m=[],e=0;e<C.snapGrid.length;e++)C.snapGrid[e]<C.virtualSize+C.snapGrid[0]&&m.push(C.snapGrid[e]);C.snapGrid=m}if(!C.params.centeredSlides){for(m=[],e=0;e<C.snapGrid.length;e++)C.snapGrid[e]<=C.virtualSize-C.size&&m.push(C.snapGrid[e]);C.snapGrid=m,Math.floor(C.virtualSize-C.size)-Math.floor(C.snapGrid[C.snapGrid.length-1])>1&&C.snapGrid.push(C.virtualSize-C.size)}0===C.snapGrid.length&&(C.snapGrid=[0]),0!==C.params.spaceBetween&&(C.isHorizontal()?C.rtl?C.slides.css({marginLeft:t+"px"}):C.slides.css({marginRight:t+"px"}):C.slides.css({marginBottom:t+"px"})),C.params.watchSlidesProgress&&C.updateSlidesOffset()}},C.updateSlidesOffset=function(){for(var e=0;e<C.slides.length;e++)C.slides[e].swiperSlideOffset=C.isHorizontal()?C.slides[e].offsetLeft:C.slides[e].offsetTop},C.updateSlidesProgress=function(e){if("undefined"==typeof e&&(e=C.translate||0),0!==C.slides.length){"undefined"==typeof C.slides[0].swiperSlideOffset&&C.updateSlidesOffset();var t=-e;C.rtl&&(t=e),C.slides.removeClass(C.params.slideVisibleClass);for(var i=0;i<C.slides.length;i++){var n=C.slides[i],s=(t+(C.params.centeredSlides?C.minTranslate():0)-n.swiperSlideOffset)/(n.swiperSlideSize+C.params.spaceBetween);if(C.params.watchSlidesVisibility){var r=-(t-n.swiperSlideOffset),a=r+C.slidesSizesGrid[i],o=r>=0&&r<C.size||a>0&&a<=C.size||r<=0&&a>=C.size;o&&C.slides.eq(i).addClass(C.params.slideVisibleClass)}n.progress=C.rtl?-s:s}}},C.updateProgress=function(e){"undefined"==typeof e&&(e=C.translate||0);var t=C.maxTranslate()-C.minTranslate(),i=C.isBeginning,n=C.isEnd;0===t?(C.progress=0,C.isBeginning=C.isEnd=!0):(C.progress=(e-C.minTranslate())/t,C.isBeginning=C.progress<=0,C.isEnd=C.progress>=1),C.isBeginning&&!i&&C.emit("onReachBeginning",C),C.isEnd&&!n&&C.emit("onReachEnd",C),C.params.watchSlidesProgress&&C.updateSlidesProgress(e),C.emit("onProgress",C,C.progress)},C.updateActiveIndex=function(){var e,t,i,n=C.rtl?C.translate:-C.translate;for(t=0;t<C.slidesGrid.length;t++)"undefined"!=typeof C.slidesGrid[t+1]?n>=C.slidesGrid[t]&&n<C.slidesGrid[t+1]-(C.slidesGrid[t+1]-C.slidesGrid[t])/2?e=t:n>=C.slidesGrid[t]&&n<C.slidesGrid[t+1]&&(e=t+1):n>=C.slidesGrid[t]&&(e=t);C.params.normalizeSlideIndex&&(e<0||"undefined"==typeof e)&&(e=0),i=Math.floor(e/C.params.slidesPerGroup),i>=C.snapGrid.length&&(i=C.snapGrid.length-1),e!==C.activeIndex&&(C.snapIndex=i,C.previousIndex=C.activeIndex,C.activeIndex=e,C.updateClasses(),C.updateRealIndex())},C.updateRealIndex=function(){C.realIndex=C.slides.eq(C.activeIndex).attr("data-swiper-slide-index")||C.activeIndex},C.updateClasses=function(){C.slides.removeClass(C.params.slideActiveClass+" "+C.params.slideNextClass+" "+C.params.slidePrevClass+" "+C.params.slideDuplicateActiveClass+" "+C.params.slideDuplicateNextClass+" "+C.params.slideDuplicatePrevClass);var e=C.slides.eq(C.activeIndex);e.addClass(C.params.slideActiveClass),s.loop&&(e.hasClass(C.params.slideDuplicateClass)?C.wrapper.children("."+C.params.slideClass+":not(."+C.params.slideDuplicateClass+')[data-swiper-slide-index="'+C.realIndex+'"]').addClass(C.params.slideDuplicateActiveClass):C.wrapper.children("."+C.params.slideClass+"."+C.params.slideDuplicateClass+'[data-swiper-slide-index="'+C.realIndex+'"]').addClass(C.params.slideDuplicateActiveClass));var i=e.next("."+C.params.slideClass).addClass(C.params.slideNextClass);C.params.loop&&0===i.length&&(i=C.slides.eq(0),i.addClass(C.params.slideNextClass));var n=e.prev("."+C.params.slideClass).addClass(C.params.slidePrevClass);if(C.params.loop&&0===n.length&&(n=C.slides.eq(-1),n.addClass(C.params.slidePrevClass)),s.loop&&(i.hasClass(C.params.slideDuplicateClass)?C.wrapper.children("."+C.params.slideClass+":not(."+C.params.slideDuplicateClass+')[data-swiper-slide-index="'+i.attr("data-swiper-slide-index")+'"]').addClass(C.params.slideDuplicateNextClass):C.wrapper.children("."+C.params.slideClass+"."+C.params.slideDuplicateClass+'[data-swiper-slide-index="'+i.attr("data-swiper-slide-index")+'"]').addClass(C.params.slideDuplicateNextClass),n.hasClass(C.params.slideDuplicateClass)?C.wrapper.children("."+C.params.slideClass+":not(."+C.params.slideDuplicateClass+')[data-swiper-slide-index="'+n.attr("data-swiper-slide-index")+'"]').addClass(C.params.slideDuplicatePrevClass):C.wrapper.children("."+C.params.slideClass+"."+C.params.slideDuplicateClass+'[data-swiper-slide-index="'+n.attr("data-swiper-slide-index")+'"]').addClass(C.params.slideDuplicatePrevClass)),C.paginationContainer&&C.paginationContainer.length>0){var r,a=C.params.loop?Math.ceil((C.slides.length-2*C.loopedSlides)/C.params.slidesPerGroup):C.snapGrid.length;if(C.params.loop?(r=Math.ceil((C.activeIndex-C.loopedSlides)/C.params.slidesPerGroup),r>C.slides.length-1-2*C.loopedSlides&&(r-=C.slides.length-2*C.loopedSlides),r>a-1&&(r-=a),r<0&&"bullets"!==C.params.paginationType&&(r=a+r)):r="undefined"!=typeof C.snapIndex?C.snapIndex:C.activeIndex||0,"bullets"===C.params.paginationType&&C.bullets&&C.bullets.length>0&&(C.bullets.removeClass(C.params.bulletActiveClass),C.paginationContainer.length>1?C.bullets.each(function(){t(this).index()===r&&t(this).addClass(C.params.bulletActiveClass)}):C.bullets.eq(r).addClass(C.params.bulletActiveClass)),"fraction"===C.params.paginationType&&(C.paginationContainer.find("."+C.params.paginationCurrentClass).text(r+1),C.paginationContainer.find("."+C.params.paginationTotalClass).text(a)),"progress"===C.params.paginationType){var o=(r+1)/a,l=o,p=1;C.isHorizontal()||(p=o,l=1),C.paginationContainer.find("."+C.params.paginationProgressbarClass).transform("translate3d(0,0,0) scaleX("+l+") scaleY("+p+")").transition(C.params.speed)}"custom"===C.params.paginationType&&C.params.paginationCustomRender&&(C.paginationContainer.html(C.params.paginationCustomRender(C,r+1,a)),C.emit("onPaginationRendered",C,C.paginationContainer[0]))}C.params.loop||(C.params.prevButton&&C.prevButton&&C.prevButton.length>0&&(C.isBeginning?(C.prevButton.addClass(C.params.buttonDisabledClass),C.params.a11y&&C.a11y&&C.a11y.disable(C.prevButton)):(C.prevButton.removeClass(C.params.buttonDisabledClass),C.params.a11y&&C.a11y&&C.a11y.enable(C.prevButton))),C.params.nextButton&&C.nextButton&&C.nextButton.length>0&&(C.isEnd?(C.nextButton.addClass(C.params.buttonDisabledClass),C.params.a11y&&C.a11y&&C.a11y.disable(C.nextButton)):(C.nextButton.removeClass(C.params.buttonDisabledClass),C.params.a11y&&C.a11y&&C.a11y.enable(C.nextButton))))},C.updatePagination=function(){if(C.params.pagination&&C.paginationContainer&&C.paginationContainer.length>0){var e="";if("bullets"===C.params.paginationType){for(var t=C.params.loop?Math.ceil((C.slides.length-2*C.loopedSlides)/C.params.slidesPerGroup):C.snapGrid.length,i=0;i<t;i++)e+=C.params.paginationBulletRender?C.params.paginationBulletRender(C,i,C.params.bulletClass):"<"+C.params.paginationElement+' class="'+C.params.bulletClass+'"></'+C.params.paginationElement+">";C.paginationContainer.html(e),C.bullets=C.paginationContainer.find("."+C.params.bulletClass),C.params.paginationClickable&&C.params.a11y&&C.a11y&&C.a11y.initPagination()}"fraction"===C.params.paginationType&&(e=C.params.paginationFractionRender?C.params.paginationFractionRender(C,C.params.paginationCurrentClass,C.params.paginationTotalClass):'<span class="'+C.params.paginationCurrentClass+'"></span> / <span class="'+C.params.paginationTotalClass+'"></span>',C.paginationContainer.html(e)),"progress"===C.params.paginationType&&(e=C.params.paginationProgressRender?C.params.paginationProgressRender(C,C.params.paginationProgressbarClass):'<span class="'+C.params.paginationProgressbarClass+'"></span>',C.paginationContainer.html(e)),"custom"!==C.params.paginationType&&C.emit("onPaginationRendered",C,C.paginationContainer[0])}},C.update=function(e){function t(){C.rtl?-C.translate:C.translate;n=Math.min(Math.max(C.translate,C.maxTranslate()),C.minTranslate()),C.setWrapperTranslate(n),C.updateActiveIndex(),C.updateClasses()}if(C.updateContainerSize(),C.updateSlidesSize(),C.updateProgress(),C.updatePagination(),C.updateClasses(),C.params.scrollbar&&C.scrollbar&&C.scrollbar.set(),e){var i,n;C.controller&&C.controller.spline&&(C.controller.spline=void 0),C.params.freeMode?(t(),C.params.autoHeight&&C.updateAutoHeight()):(i=("auto"===C.params.slidesPerView||C.params.slidesPerView>1)&&C.isEnd&&!C.params.centeredSlides?C.slideTo(C.slides.length-1,0,!1,!0):C.slideTo(C.activeIndex,0,!1,!0),i||t())}else C.params.autoHeight&&C.updateAutoHeight()},C.onResize=function(e){C.params.breakpoints&&C.setBreakpoint();var t=C.params.allowSwipeToPrev,i=C.params.allowSwipeToNext;C.params.allowSwipeToPrev=C.params.allowSwipeToNext=!0,C.updateContainerSize(),C.updateSlidesSize(),("auto"===C.params.slidesPerView||C.params.freeMode||e)&&C.updatePagination(),C.params.scrollbar&&C.scrollbar&&C.scrollbar.set(),C.controller&&C.controller.spline&&(C.controller.spline=void 0);var n=!1;if(C.params.freeMode){var s=Math.min(Math.max(C.translate,C.maxTranslate()),C.minTranslate());C.setWrapperTranslate(s),C.updateActiveIndex(),C.updateClasses(),C.params.autoHeight&&C.updateAutoHeight()}else C.updateClasses(),n=("auto"===C.params.slidesPerView||C.params.slidesPerView>1)&&C.isEnd&&!C.params.centeredSlides?C.slideTo(C.slides.length-1,0,!1,!0):C.slideTo(C.activeIndex,0,!1,!0);C.params.lazyLoading&&!n&&C.lazy&&C.lazy.load(),C.params.allowSwipeToPrev=t,C.params.allowSwipeToNext=i},C.touchEventsDesktop={start:"mousedown",move:"mousemove",end:"mouseup"},window.navigator.pointerEnabled?C.touchEventsDesktop={start:"pointerdown",move:"pointermove",end:"pointerup"}:window.navigator.msPointerEnabled&&(C.touchEventsDesktop={start:"MSPointerDown",move:"MSPointerMove",end:"MSPointerUp"}),C.touchEvents={start:C.support.touch||!C.params.simulateTouch?"touchstart":C.touchEventsDesktop.start,move:C.support.touch||!C.params.simulateTouch?"touchmove":C.touchEventsDesktop.move,end:C.support.touch||!C.params.simulateTouch?"touchend":C.touchEventsDesktop.end},(window.navigator.pointerEnabled||window.navigator.msPointerEnabled)&&("container"===C.params.touchEventsTarget?C.container:C.wrapper).addClass("swiper-wp8-"+C.params.direction),C.initEvents=function(e){var t=e?"off":"on",i=e?"removeEventListener":"addEventListener",n="container"===C.params.touchEventsTarget?C.container[0]:C.wrapper[0],r=C.support.touch?n:document,a=!!C.params.nested;if(C.browser.ie)n[i](C.touchEvents.start,C.onTouchStart,!1),r[i](C.touchEvents.move,C.onTouchMove,a),r[i](C.touchEvents.end,C.onTouchEnd,!1);else{if(C.support.touch){var o=!("touchstart"!==C.touchEvents.start||!C.support.passiveListener||!C.params.passiveListeners)&&{passive:!0,capture:!1};n[i](C.touchEvents.start,C.onTouchStart,o),n[i](C.touchEvents.move,C.onTouchMove,a),n[i](C.touchEvents.end,C.onTouchEnd,o)}(s.simulateTouch&&!C.device.ios&&!C.device.android||s.simulateTouch&&!C.support.touch&&C.device.ios)&&(n[i]("mousedown",C.onTouchStart,!1),document[i]("mousemove",C.onTouchMove,a),document[i]("mouseup",C.onTouchEnd,!1))}window[i]("resize",C.onResize),C.params.nextButton&&C.nextButton&&C.nextButton.length>0&&(C.nextButton[t]("click",C.onClickNext),C.params.a11y&&C.a11y&&C.nextButton[t]("keydown",C.a11y.onEnterKey)),C.params.prevButton&&C.prevButton&&C.prevButton.length>0&&(C.prevButton[t]("click",C.onClickPrev),C.params.a11y&&C.a11y&&C.prevButton[t]("keydown",C.a11y.onEnterKey)),C.params.pagination&&C.params.paginationClickable&&(C.paginationContainer[t]("click","."+C.params.bulletClass,C.onClickIndex),C.params.a11y&&C.a11y&&C.paginationContainer[t]("keydown","."+C.params.bulletClass,C.a11y.onEnterKey)),(C.params.preventClicks||C.params.preventClicksPropagation)&&n[i]("click",C.preventClicks,!0)},C.attachEvents=function(){C.initEvents()},C.detachEvents=function(){C.initEvents(!0)},C.allowClick=!0,C.preventClicks=function(e){C.allowClick||(C.params.preventClicks&&e.preventDefault(),C.params.preventClicksPropagation&&C.animating&&(e.stopPropagation(),e.stopImmediatePropagation()))},C.onClickNext=function(e){e.preventDefault(),C.isEnd&&!C.params.loop||C.slideNext()},C.onClickPrev=function(e){e.preventDefault(),C.isBeginning&&!C.params.loop||C.slidePrev()},C.onClickIndex=function(e){e.preventDefault();var i=t(this).index()*C.params.slidesPerGroup;C.params.loop&&(i+=C.loopedSlides),C.slideTo(i)},C.updateClickedSlide=function(e){var i=l(e,"."+C.params.slideClass),n=!1;if(i)for(var s=0;s<C.slides.length;s++)C.slides[s]===i&&(n=!0);if(!i||!n)return C.clickedSlide=void 0,void(C.clickedIndex=void 0);if(C.clickedSlide=i,C.clickedIndex=t(i).index(),C.params.slideToClickedSlide&&void 0!==C.clickedIndex&&C.clickedIndex!==C.activeIndex){var r,a=C.clickedIndex;if(C.params.loop){if(C.animating)return;r=t(C.clickedSlide).attr("data-swiper-slide-index"),C.params.centeredSlides?a<C.loopedSlides-C.params.slidesPerView/2||a>C.slides.length-C.loopedSlides+C.params.slidesPerView/2?(C.fixLoop(),a=C.wrapper.children("."+C.params.slideClass+'[data-swiper-slide-index="'+r+'"]:not(.'+C.params.slideDuplicateClass+")").eq(0).index(),setTimeout(function(){C.slideTo(a)},0)):C.slideTo(a):a>C.slides.length-C.params.slidesPerView?(C.fixLoop(),a=C.wrapper.children("."+C.params.slideClass+'[data-swiper-slide-index="'+r+'"]:not(.'+C.params.slideDuplicateClass+")").eq(0).index(),setTimeout(function(){C.slideTo(a)},0)):C.slideTo(a)}else C.slideTo(a)}};var E,_,k,M,z,I,D,P,$,A,L="input, select, textarea, button, video",N=Date.now(),O=[];C.animating=!1,C.touches={startX:0,startY:0,currentX:0,currentY:0,diff:0};var H,B;C.onTouchStart=function(e){if(e.originalEvent&&(e=e.originalEvent),H="touchstart"===e.type,H||!("which"in e)||3!==e.which){if(C.params.noSwiping&&l(e,"."+C.params.noSwipingClass))return void(C.allowClick=!0);if(!C.params.swipeHandler||l(e,C.params.swipeHandler)){var i=C.touches.currentX="touchstart"===e.type?e.targetTouches[0].pageX:e.pageX,n=C.touches.currentY="touchstart"===e.type?e.targetTouches[0].pageY:e.pageY;if(!(C.device.ios&&C.params.iOSEdgeSwipeDetection&&i<=C.params.iOSEdgeSwipeThreshold)){if(E=!0,_=!1,k=!0,z=void 0,B=void 0,C.touches.startX=i,C.touches.startY=n,M=Date.now(),C.allowClick=!0,C.updateContainerSize(),C.swipeDirection=void 0,C.params.threshold>0&&(P=!1),"touchstart"!==e.type){var s=!0;t(e.target).is(L)&&(s=!1),document.activeElement&&t(document.activeElement).is(L)&&document.activeElement.blur(),s&&e.preventDefault()}C.emit("onTouchStart",C,e)}}}},C.onTouchMove=function(e){if(e.originalEvent&&(e=e.originalEvent),!H||"mousemove"!==e.type){if(e.preventedByNestedSwiper)return C.touches.startX="touchmove"===e.type?e.targetTouches[0].pageX:e.pageX,void(C.touches.startY="touchmove"===e.type?e.targetTouches[0].pageY:e.pageY);if(C.params.onlyExternal)return C.allowClick=!1,void(E&&(C.touches.startX=C.touches.currentX="touchmove"===e.type?e.targetTouches[0].pageX:e.pageX,
C.touches.startY=C.touches.currentY="touchmove"===e.type?e.targetTouches[0].pageY:e.pageY,M=Date.now()));if(H&&C.params.touchReleaseOnEdges&&!C.params.loop)if(C.isHorizontal()){if(C.touches.currentX<C.touches.startX&&C.translate<=C.maxTranslate()||C.touches.currentX>C.touches.startX&&C.translate>=C.minTranslate())return}else if(C.touches.currentY<C.touches.startY&&C.translate<=C.maxTranslate()||C.touches.currentY>C.touches.startY&&C.translate>=C.minTranslate())return;if(H&&document.activeElement&&e.target===document.activeElement&&t(e.target).is(L))return _=!0,void(C.allowClick=!1);if(k&&C.emit("onTouchMove",C,e),!(e.targetTouches&&e.targetTouches.length>1)){if(C.touches.currentX="touchmove"===e.type?e.targetTouches[0].pageX:e.pageX,C.touches.currentY="touchmove"===e.type?e.targetTouches[0].pageY:e.pageY,"undefined"==typeof z){var i;C.isHorizontal()&&C.touches.currentY===C.touches.startY||!C.isHorizontal()&&C.touches.currentX!==C.touches.startX?z=!1:(i=180*Math.atan2(Math.abs(C.touches.currentY-C.touches.startY),Math.abs(C.touches.currentX-C.touches.startX))/Math.PI,z=C.isHorizontal()?i>C.params.touchAngle:90-i>C.params.touchAngle)}if(z&&C.emit("onTouchMoveOpposite",C,e),"undefined"==typeof B&&C.browser.ieTouch&&(C.touches.currentX===C.touches.startX&&C.touches.currentY===C.touches.startY||(B=!0)),E){if(z)return void(E=!1);if(B||!C.browser.ieTouch){C.allowClick=!1,C.emit("onSliderMove",C,e),e.preventDefault(),C.params.touchMoveStopPropagation&&!C.params.nested&&e.stopPropagation(),_||(s.loop&&C.fixLoop(),D=C.getWrapperTranslate(),C.setWrapperTransition(0),C.animating&&C.wrapper.trigger("webkitTransitionEnd transitionend oTransitionEnd MSTransitionEnd msTransitionEnd"),C.params.autoplay&&C.autoplaying&&(C.params.autoplayDisableOnInteraction?C.stopAutoplay():C.pauseAutoplay()),A=!1,!C.params.grabCursor||C.params.allowSwipeToNext!==!0&&C.params.allowSwipeToPrev!==!0||C.setGrabCursor(!0)),_=!0;var n=C.touches.diff=C.isHorizontal()?C.touches.currentX-C.touches.startX:C.touches.currentY-C.touches.startY;n*=C.params.touchRatio,C.rtl&&(n=-n),C.swipeDirection=n>0?"prev":"next",I=n+D;var r=!0;if(n>0&&I>C.minTranslate()?(r=!1,C.params.resistance&&(I=C.minTranslate()-1+Math.pow(-C.minTranslate()+D+n,C.params.resistanceRatio))):n<0&&I<C.maxTranslate()&&(r=!1,C.params.resistance&&(I=C.maxTranslate()+1-Math.pow(C.maxTranslate()-D-n,C.params.resistanceRatio))),r&&(e.preventedByNestedSwiper=!0),!C.params.allowSwipeToNext&&"next"===C.swipeDirection&&I<D&&(I=D),!C.params.allowSwipeToPrev&&"prev"===C.swipeDirection&&I>D&&(I=D),C.params.threshold>0){if(!(Math.abs(n)>C.params.threshold||P))return void(I=D);if(!P)return P=!0,C.touches.startX=C.touches.currentX,C.touches.startY=C.touches.currentY,I=D,void(C.touches.diff=C.isHorizontal()?C.touches.currentX-C.touches.startX:C.touches.currentY-C.touches.startY)}C.params.followFinger&&((C.params.freeMode||C.params.watchSlidesProgress)&&C.updateActiveIndex(),C.params.freeMode&&(0===O.length&&O.push({position:C.touches[C.isHorizontal()?"startX":"startY"],time:M}),O.push({position:C.touches[C.isHorizontal()?"currentX":"currentY"],time:(new window.Date).getTime()})),C.updateProgress(I),C.setWrapperTranslate(I))}}}}},C.onTouchEnd=function(e){if(e.originalEvent&&(e=e.originalEvent),k&&C.emit("onTouchEnd",C,e),k=!1,E){C.params.grabCursor&&_&&E&&(C.params.allowSwipeToNext===!0||C.params.allowSwipeToPrev===!0)&&C.setGrabCursor(!1);var i=Date.now(),n=i-M;if(C.allowClick&&(C.updateClickedSlide(e),C.emit("onTap",C,e),n<300&&i-N>300&&($&&clearTimeout($),$=setTimeout(function(){C&&(C.params.paginationHide&&C.paginationContainer.length>0&&!t(e.target).hasClass(C.params.bulletClass)&&C.paginationContainer.toggleClass(C.params.paginationHiddenClass),C.emit("onClick",C,e))},300)),n<300&&i-N<300&&($&&clearTimeout($),C.emit("onDoubleTap",C,e))),N=Date.now(),setTimeout(function(){C&&(C.allowClick=!0)},0),!E||!_||!C.swipeDirection||0===C.touches.diff||I===D)return void(E=_=!1);E=_=!1;var s;if(s=C.params.followFinger?C.rtl?C.translate:-C.translate:-I,C.params.freeMode){if(s<-C.minTranslate())return void C.slideTo(C.activeIndex);if(s>-C.maxTranslate())return void(C.slides.length<C.snapGrid.length?C.slideTo(C.snapGrid.length-1):C.slideTo(C.slides.length-1));if(C.params.freeModeMomentum){if(O.length>1){var r=O.pop(),a=O.pop(),o=r.position-a.position,l=r.time-a.time;C.velocity=o/l,C.velocity=C.velocity/2,Math.abs(C.velocity)<C.params.freeModeMinimumVelocity&&(C.velocity=0),(l>150||(new window.Date).getTime()-r.time>300)&&(C.velocity=0)}else C.velocity=0;C.velocity=C.velocity*C.params.freeModeMomentumVelocityRatio,O.length=0;var p=1e3*C.params.freeModeMomentumRatio,c=C.velocity*p,u=C.translate+c;C.rtl&&(u=-u);var d,h=!1,f=20*Math.abs(C.velocity)*C.params.freeModeMomentumBounceRatio;if(u<C.maxTranslate())C.params.freeModeMomentumBounce?(u+C.maxTranslate()<-f&&(u=C.maxTranslate()-f),d=C.maxTranslate(),h=!0,A=!0):u=C.maxTranslate();else if(u>C.minTranslate())C.params.freeModeMomentumBounce?(u-C.minTranslate()>f&&(u=C.minTranslate()+f),d=C.minTranslate(),h=!0,A=!0):u=C.minTranslate();else if(C.params.freeModeSticky){var m,g=0;for(g=0;g<C.snapGrid.length;g+=1)if(C.snapGrid[g]>-u){m=g;break}u=Math.abs(C.snapGrid[m]-u)<Math.abs(C.snapGrid[m-1]-u)||"next"===C.swipeDirection?C.snapGrid[m]:C.snapGrid[m-1],C.rtl||(u=-u)}if(0!==C.velocity)p=C.rtl?Math.abs((-u-C.translate)/C.velocity):Math.abs((u-C.translate)/C.velocity);else if(C.params.freeModeSticky)return void C.slideReset();C.params.freeModeMomentumBounce&&h?(C.updateProgress(d),C.setWrapperTransition(p),C.setWrapperTranslate(u),C.onTransitionStart(),C.animating=!0,C.wrapper.transitionEnd(function(){C&&A&&(C.emit("onMomentumBounce",C),C.setWrapperTransition(C.params.speed),C.setWrapperTranslate(d),C.wrapper.transitionEnd(function(){C&&C.onTransitionEnd()}))})):C.velocity?(C.updateProgress(u),C.setWrapperTransition(p),C.setWrapperTranslate(u),C.onTransitionStart(),C.animating||(C.animating=!0,C.wrapper.transitionEnd(function(){C&&C.onTransitionEnd()}))):C.updateProgress(u),C.updateActiveIndex()}return void((!C.params.freeModeMomentum||n>=C.params.longSwipesMs)&&(C.updateProgress(),C.updateActiveIndex()))}var v,y=0,w=C.slidesSizesGrid[0];for(v=0;v<C.slidesGrid.length;v+=C.params.slidesPerGroup)"undefined"!=typeof C.slidesGrid[v+C.params.slidesPerGroup]?s>=C.slidesGrid[v]&&s<C.slidesGrid[v+C.params.slidesPerGroup]&&(y=v,w=C.slidesGrid[v+C.params.slidesPerGroup]-C.slidesGrid[v]):s>=C.slidesGrid[v]&&(y=v,w=C.slidesGrid[C.slidesGrid.length-1]-C.slidesGrid[C.slidesGrid.length-2]);var b=(s-C.slidesGrid[y])/w;if(n>C.params.longSwipesMs){if(!C.params.longSwipes)return void C.slideTo(C.activeIndex);"next"===C.swipeDirection&&(b>=C.params.longSwipesRatio?C.slideTo(y+C.params.slidesPerGroup):C.slideTo(y)),"prev"===C.swipeDirection&&(b>1-C.params.longSwipesRatio?C.slideTo(y+C.params.slidesPerGroup):C.slideTo(y))}else{if(!C.params.shortSwipes)return void C.slideTo(C.activeIndex);"next"===C.swipeDirection&&C.slideTo(y+C.params.slidesPerGroup),"prev"===C.swipeDirection&&C.slideTo(y)}}},C._slideTo=function(e,t){return C.slideTo(e,t,!0,!0)},C.slideTo=function(e,t,i,n){"undefined"==typeof i&&(i=!0),"undefined"==typeof e&&(e=0),e<0&&(e=0),C.snapIndex=Math.floor(e/C.params.slidesPerGroup),C.snapIndex>=C.snapGrid.length&&(C.snapIndex=C.snapGrid.length-1);var s=-C.snapGrid[C.snapIndex];if(C.params.autoplay&&C.autoplaying&&(n||!C.params.autoplayDisableOnInteraction?C.pauseAutoplay(t):C.stopAutoplay()),C.updateProgress(s),C.params.normalizeSlideIndex)for(var r=0;r<C.slidesGrid.length;r++)-Math.floor(100*s)>=Math.floor(100*C.slidesGrid[r])&&(e=r);return!(!C.params.allowSwipeToNext&&s<C.translate&&s<C.minTranslate())&&(!(!C.params.allowSwipeToPrev&&s>C.translate&&s>C.maxTranslate()&&(C.activeIndex||0)!==e)&&("undefined"==typeof t&&(t=C.params.speed),C.previousIndex=C.activeIndex||0,C.activeIndex=e,C.updateRealIndex(),C.rtl&&-s===C.translate||!C.rtl&&s===C.translate?(C.params.autoHeight&&C.updateAutoHeight(),C.updateClasses(),"slide"!==C.params.effect&&C.setWrapperTranslate(s),!1):(C.updateClasses(),C.onTransitionStart(i),0===t||C.browser.lteIE9?(C.setWrapperTranslate(s),C.setWrapperTransition(0),C.onTransitionEnd(i)):(C.setWrapperTranslate(s),C.setWrapperTransition(t),C.animating||(C.animating=!0,C.wrapper.transitionEnd(function(){C&&C.onTransitionEnd(i)}))),!0)))},C.onTransitionStart=function(e){"undefined"==typeof e&&(e=!0),C.params.autoHeight&&C.updateAutoHeight(),C.lazy&&C.lazy.onTransitionStart(),e&&(C.emit("onTransitionStart",C),C.activeIndex!==C.previousIndex&&(C.emit("onSlideChangeStart",C),C.activeIndex>C.previousIndex?C.emit("onSlideNextStart",C):C.emit("onSlidePrevStart",C)))},C.onTransitionEnd=function(e){C.animating=!1,C.setWrapperTransition(0),"undefined"==typeof e&&(e=!0),C.lazy&&C.lazy.onTransitionEnd(),e&&(C.emit("onTransitionEnd",C),C.activeIndex!==C.previousIndex&&(C.emit("onSlideChangeEnd",C),C.activeIndex>C.previousIndex?C.emit("onSlideNextEnd",C):C.emit("onSlidePrevEnd",C))),C.params.history&&C.history&&C.history.setHistory(C.params.history,C.activeIndex),C.params.hashnav&&C.hashnav&&C.hashnav.setHash()},C.slideNext=function(e,t,i){if(C.params.loop){if(C.animating)return!1;C.fixLoop();C.container[0].clientLeft;return C.slideTo(C.activeIndex+C.params.slidesPerGroup,t,e,i)}return C.slideTo(C.activeIndex+C.params.slidesPerGroup,t,e,i)},C._slideNext=function(e){return C.slideNext(!0,e,!0)},C.slidePrev=function(e,t,i){if(C.params.loop){if(C.animating)return!1;C.fixLoop();C.container[0].clientLeft;return C.slideTo(C.activeIndex-1,t,e,i)}return C.slideTo(C.activeIndex-1,t,e,i)},C._slidePrev=function(e){return C.slidePrev(!0,e,!0)},C.slideReset=function(e,t,i){return C.slideTo(C.activeIndex,t,e)},C.disableTouchControl=function(){return C.params.onlyExternal=!0,!0},C.enableTouchControl=function(){return C.params.onlyExternal=!1,!0},C.setWrapperTransition=function(e,t){C.wrapper.transition(e),"slide"!==C.params.effect&&C.effects[C.params.effect]&&C.effects[C.params.effect].setTransition(e),C.params.parallax&&C.parallax&&C.parallax.setTransition(e),C.params.scrollbar&&C.scrollbar&&C.scrollbar.setTransition(e),C.params.control&&C.controller&&C.controller.setTransition(e,t),C.emit("onSetTransition",C,e)},C.setWrapperTranslate=function(e,t,i){var n=0,s=0,r=0;C.isHorizontal()?n=C.rtl?-e:e:s=e,C.params.roundLengths&&(n=a(n),s=a(s)),C.params.virtualTranslate||(C.support.transforms3d?C.wrapper.transform("translate3d("+n+"px, "+s+"px, "+r+"px)"):C.wrapper.transform("translate("+n+"px, "+s+"px)")),C.translate=C.isHorizontal()?n:s;var o,l=C.maxTranslate()-C.minTranslate();o=0===l?0:(e-C.minTranslate())/l,o!==C.progress&&C.updateProgress(e),t&&C.updateActiveIndex(),"slide"!==C.params.effect&&C.effects[C.params.effect]&&C.effects[C.params.effect].setTranslate(C.translate),C.params.parallax&&C.parallax&&C.parallax.setTranslate(C.translate),C.params.scrollbar&&C.scrollbar&&C.scrollbar.setTranslate(C.translate),C.params.control&&C.controller&&C.controller.setTranslate(C.translate,i),C.emit("onSetTranslate",C,C.translate)},C.getTranslate=function(e,t){var i,n,s,r;return"undefined"==typeof t&&(t="x"),C.params.virtualTranslate?C.rtl?-C.translate:C.translate:(s=window.getComputedStyle(e,null),window.WebKitCSSMatrix?(n=s.transform||s.webkitTransform,n.split(",").length>6&&(n=n.split(", ").map(function(e){return e.replace(",",".")}).join(", ")),r=new window.WebKitCSSMatrix("none"===n?"":n)):(r=s.MozTransform||s.OTransform||s.MsTransform||s.msTransform||s.transform||s.getPropertyValue("transform").replace("translate(","matrix(1, 0, 0, 1,"),i=r.toString().split(",")),"x"===t&&(n=window.WebKitCSSMatrix?r.m41:16===i.length?parseFloat(i[12]):parseFloat(i[4])),"y"===t&&(n=window.WebKitCSSMatrix?r.m42:16===i.length?parseFloat(i[13]):parseFloat(i[5])),C.rtl&&n&&(n=-n),n||0)},C.getWrapperTranslate=function(e){return"undefined"==typeof e&&(e=C.isHorizontal()?"x":"y"),C.getTranslate(C.wrapper[0],e)},C.observers=[],C.initObservers=function(){if(C.params.observeParents)for(var e=C.container.parents(),t=0;t<e.length;t++)p(e[t]);p(C.container[0],{childList:!1}),p(C.wrapper[0],{attributes:!1})},C.disconnectObservers=function(){for(var e=0;e<C.observers.length;e++)C.observers[e].disconnect();C.observers=[]},C.createLoop=function(){C.wrapper.children("."+C.params.slideClass+"."+C.params.slideDuplicateClass).remove();var e=C.wrapper.children("."+C.params.slideClass);"auto"!==C.params.slidesPerView||C.params.loopedSlides||(C.params.loopedSlides=e.length),C.loopedSlides=parseInt(C.params.loopedSlides||C.params.slidesPerView,10),C.loopedSlides=C.loopedSlides+C.params.loopAdditionalSlides,C.loopedSlides>e.length&&(C.loopedSlides=e.length);var i,n=[],s=[];for(e.each(function(i,r){var a=t(this);i<C.loopedSlides&&s.push(r),i<e.length&&i>=e.length-C.loopedSlides&&n.push(r),a.attr("data-swiper-slide-index",i)}),i=0;i<s.length;i++)C.wrapper.append(t(s[i].cloneNode(!0)).addClass(C.params.slideDuplicateClass));for(i=n.length-1;i>=0;i--)C.wrapper.prepend(t(n[i].cloneNode(!0)).addClass(C.params.slideDuplicateClass))},C.destroyLoop=function(){C.wrapper.children("."+C.params.slideClass+"."+C.params.slideDuplicateClass).remove(),C.slides.removeAttr("data-swiper-slide-index")},C.reLoop=function(e){var t=C.activeIndex-C.loopedSlides;C.destroyLoop(),C.createLoop(),C.updateSlidesSize(),e&&C.slideTo(t+C.loopedSlides,0,!1)},C.fixLoop=function(){var e;C.activeIndex<C.loopedSlides?(e=C.slides.length-3*C.loopedSlides+C.activeIndex,e+=C.loopedSlides,C.slideTo(e,0,!1,!0)):("auto"===C.params.slidesPerView&&C.activeIndex>=2*C.loopedSlides||C.activeIndex>C.slides.length-2*C.params.slidesPerView)&&(e=-C.slides.length+C.activeIndex+C.loopedSlides,e+=C.loopedSlides,C.slideTo(e,0,!1,!0))},C.appendSlide=function(e){if(C.params.loop&&C.destroyLoop(),"object"==typeof e&&e.length)for(var t=0;t<e.length;t++)e[t]&&C.wrapper.append(e[t]);else C.wrapper.append(e);C.params.loop&&C.createLoop(),C.params.observer&&C.support.observer||C.update(!0)},C.prependSlide=function(e){C.params.loop&&C.destroyLoop();var t=C.activeIndex+1;if("object"==typeof e&&e.length){for(var i=0;i<e.length;i++)e[i]&&C.wrapper.prepend(e[i]);t=C.activeIndex+e.length}else C.wrapper.prepend(e);C.params.loop&&C.createLoop(),C.params.observer&&C.support.observer||C.update(!0),C.slideTo(t,0,!1)},C.removeSlide=function(e){C.params.loop&&(C.destroyLoop(),C.slides=C.wrapper.children("."+C.params.slideClass));var t,i=C.activeIndex;if("object"==typeof e&&e.length){for(var n=0;n<e.length;n++)t=e[n],C.slides[t]&&C.slides.eq(t).remove(),t<i&&i--;i=Math.max(i,0)}else t=e,C.slides[t]&&C.slides.eq(t).remove(),t<i&&i--,i=Math.max(i,0);C.params.loop&&C.createLoop(),C.params.observer&&C.support.observer||C.update(!0),C.params.loop?C.slideTo(i+C.loopedSlides,0,!1):C.slideTo(i,0,!1)},C.removeAllSlides=function(){for(var e=[],t=0;t<C.slides.length;t++)e.push(t);C.removeSlide(e)},C.effects={fade:{setTranslate:function(){for(var e=0;e<C.slides.length;e++){var t=C.slides.eq(e),i=t[0].swiperSlideOffset,n=-i;C.params.virtualTranslate||(n-=C.translate);var s=0;C.isHorizontal()||(s=n,n=0);var r=C.params.fade.crossFade?Math.max(1-Math.abs(t[0].progress),0):1+Math.min(Math.max(t[0].progress,-1),0);t.css({opacity:r}).transform("translate3d("+n+"px, "+s+"px, 0px)")}},setTransition:function(e){if(C.slides.transition(e),C.params.virtualTranslate&&0!==e){var t=!1;C.slides.transitionEnd(function(){if(!t&&C){t=!0,C.animating=!1;for(var e=["webkitTransitionEnd","transitionend","oTransitionEnd","MSTransitionEnd","msTransitionEnd"],i=0;i<e.length;i++)C.wrapper.trigger(e[i])}})}}},flip:{setTranslate:function(){for(var e=0;e<C.slides.length;e++){var i=C.slides.eq(e),n=i[0].progress;C.params.flip.limitRotation&&(n=Math.max(Math.min(i[0].progress,1),-1));var s=i[0].swiperSlideOffset,r=-180*n,a=r,o=0,l=-s,p=0;if(C.isHorizontal()?C.rtl&&(a=-a):(p=l,l=0,o=-a,a=0),i[0].style.zIndex=-Math.abs(Math.round(n))+C.slides.length,C.params.flip.slideShadows){var c=C.isHorizontal()?i.find(".swiper-slide-shadow-left"):i.find(".swiper-slide-shadow-top"),u=C.isHorizontal()?i.find(".swiper-slide-shadow-right"):i.find(".swiper-slide-shadow-bottom");0===c.length&&(c=t('<div class="swiper-slide-shadow-'+(C.isHorizontal()?"left":"top")+'"></div>'),i.append(c)),0===u.length&&(u=t('<div class="swiper-slide-shadow-'+(C.isHorizontal()?"right":"bottom")+'"></div>'),i.append(u)),c.length&&(c[0].style.opacity=Math.max(-n,0)),u.length&&(u[0].style.opacity=Math.max(n,0))}i.transform("translate3d("+l+"px, "+p+"px, 0px) rotateX("+o+"deg) rotateY("+a+"deg)")}},setTransition:function(e){if(C.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e),C.params.virtualTranslate&&0!==e){var i=!1;C.slides.eq(C.activeIndex).transitionEnd(function(){if(!i&&C&&t(this).hasClass(C.params.slideActiveClass)){i=!0,C.animating=!1;for(var e=["webkitTransitionEnd","transitionend","oTransitionEnd","MSTransitionEnd","msTransitionEnd"],n=0;n<e.length;n++)C.wrapper.trigger(e[n])}})}}},cube:{setTranslate:function(){var e,i=0;C.params.cube.shadow&&(C.isHorizontal()?(e=C.wrapper.find(".swiper-cube-shadow"),0===e.length&&(e=t('<div class="swiper-cube-shadow"></div>'),C.wrapper.append(e)),e.css({height:C.width+"px"})):(e=C.container.find(".swiper-cube-shadow"),0===e.length&&(e=t('<div class="swiper-cube-shadow"></div>'),C.container.append(e))));for(var n=0;n<C.slides.length;n++){var s=C.slides.eq(n),r=90*n,a=Math.floor(r/360);C.rtl&&(r=-r,a=Math.floor(-r/360));var o=Math.max(Math.min(s[0].progress,1),-1),l=0,p=0,c=0;n%4===0?(l=4*-a*C.size,c=0):(n-1)%4===0?(l=0,c=4*-a*C.size):(n-2)%4===0?(l=C.size+4*a*C.size,c=C.size):(n-3)%4===0&&(l=-C.size,c=3*C.size+4*C.size*a),C.rtl&&(l=-l),C.isHorizontal()||(p=l,l=0);var u="rotateX("+(C.isHorizontal()?0:-r)+"deg) rotateY("+(C.isHorizontal()?r:0)+"deg) translate3d("+l+"px, "+p+"px, "+c+"px)";if(o<=1&&o>-1&&(i=90*n+90*o,C.rtl&&(i=90*-n-90*o)),s.transform(u),C.params.cube.slideShadows){var d=C.isHorizontal()?s.find(".swiper-slide-shadow-left"):s.find(".swiper-slide-shadow-top"),h=C.isHorizontal()?s.find(".swiper-slide-shadow-right"):s.find(".swiper-slide-shadow-bottom");0===d.length&&(d=t('<div class="swiper-slide-shadow-'+(C.isHorizontal()?"left":"top")+'"></div>'),s.append(d)),0===h.length&&(h=t('<div class="swiper-slide-shadow-'+(C.isHorizontal()?"right":"bottom")+'"></div>'),s.append(h)),d.length&&(d[0].style.opacity=Math.max(-o,0)),h.length&&(h[0].style.opacity=Math.max(o,0))}}if(C.wrapper.css({"-webkit-transform-origin":"50% 50% -"+C.size/2+"px","-moz-transform-origin":"50% 50% -"+C.size/2+"px","-ms-transform-origin":"50% 50% -"+C.size/2+"px","transform-origin":"50% 50% -"+C.size/2+"px"}),C.params.cube.shadow)if(C.isHorizontal())e.transform("translate3d(0px, "+(C.width/2+C.params.cube.shadowOffset)+"px, "+-C.width/2+"px) rotateX(90deg) rotateZ(0deg) scale("+C.params.cube.shadowScale+")");else{var f=Math.abs(i)-90*Math.floor(Math.abs(i)/90),m=1.5-(Math.sin(2*f*Math.PI/360)/2+Math.cos(2*f*Math.PI/360)/2),g=C.params.cube.shadowScale,v=C.params.cube.shadowScale/m,y=C.params.cube.shadowOffset;e.transform("scale3d("+g+", 1, "+v+") translate3d(0px, "+(C.height/2+y)+"px, "+-C.height/2/v+"px) rotateX(-90deg)")}var w=C.isSafari||C.isUiWebView?-C.size/2:0;C.wrapper.transform("translate3d(0px,0,"+w+"px) rotateX("+(C.isHorizontal()?0:i)+"deg) rotateY("+(C.isHorizontal()?-i:0)+"deg)")},setTransition:function(e){C.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e),C.params.cube.shadow&&!C.isHorizontal()&&C.container.find(".swiper-cube-shadow").transition(e)}},coverflow:{setTranslate:function(){for(var e=C.translate,i=C.isHorizontal()?-e+C.width/2:-e+C.height/2,n=C.isHorizontal()?C.params.coverflow.rotate:-C.params.coverflow.rotate,s=C.params.coverflow.depth,r=0,a=C.slides.length;r<a;r++){var o=C.slides.eq(r),l=C.slidesSizesGrid[r],p=o[0].swiperSlideOffset,c=(i-p-l/2)/l*C.params.coverflow.modifier,u=C.isHorizontal()?n*c:0,d=C.isHorizontal()?0:n*c,h=-s*Math.abs(c),f=C.isHorizontal()?0:C.params.coverflow.stretch*c,m=C.isHorizontal()?C.params.coverflow.stretch*c:0;Math.abs(m)<.001&&(m=0),Math.abs(f)<.001&&(f=0),Math.abs(h)<.001&&(h=0),Math.abs(u)<.001&&(u=0),Math.abs(d)<.001&&(d=0);var g="translate3d("+m+"px,"+f+"px,"+h+"px)  rotateX("+d+"deg) rotateY("+u+"deg)";if(o.transform(g),o[0].style.zIndex=-Math.abs(Math.round(c))+1,C.params.coverflow.slideShadows){var v=C.isHorizontal()?o.find(".swiper-slide-shadow-left"):o.find(".swiper-slide-shadow-top"),y=C.isHorizontal()?o.find(".swiper-slide-shadow-right"):o.find(".swiper-slide-shadow-bottom");0===v.length&&(v=t('<div class="swiper-slide-shadow-'+(C.isHorizontal()?"left":"top")+'"></div>'),o.append(v)),0===y.length&&(y=t('<div class="swiper-slide-shadow-'+(C.isHorizontal()?"right":"bottom")+'"></div>'),o.append(y)),v.length&&(v[0].style.opacity=c>0?c:0),y.length&&(y[0].style.opacity=-c>0?-c:0)}}if(C.browser.ie){var w=C.wrapper[0].style;w.perspectiveOrigin=i+"px 50%"}},setTransition:function(e){C.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e)}}},C.lazy={initialImageLoaded:!1,loadImageInSlide:function(e,i){if("undefined"!=typeof e&&("undefined"==typeof i&&(i=!0),0!==C.slides.length)){var n=C.slides.eq(e),s=n.find("."+C.params.lazyLoadingClass+":not(."+C.params.lazyStatusLoadedClass+"):not(."+C.params.lazyStatusLoadingClass+")");!n.hasClass(C.params.lazyLoadingClass)||n.hasClass(C.params.lazyStatusLoadedClass)||n.hasClass(C.params.lazyStatusLoadingClass)||(s=s.add(n[0])),0!==s.length&&s.each(function(){var e=t(this);e.addClass(C.params.lazyStatusLoadingClass);var s=e.attr("data-background"),r=e.attr("data-src"),a=e.attr("data-srcset"),o=e.attr("data-sizes");C.loadImage(e[0],r||s,a,o,!1,function(){if(s?(e.css("background-image",'url("'+s+'")'),e.removeAttr("data-background")):(a&&(e.attr("srcset",a),e.removeAttr("data-srcset")),o&&(e.attr("sizes",o),e.removeAttr("data-sizes")),r&&(e.attr("src",r),e.removeAttr("data-src"))),e.addClass(C.params.lazyStatusLoadedClass).removeClass(C.params.lazyStatusLoadingClass),n.find("."+C.params.lazyPreloaderClass+", ."+C.params.preloaderClass).remove(),C.params.loop&&i){var t=n.attr("data-swiper-slide-index");if(n.hasClass(C.params.slideDuplicateClass)){var l=C.wrapper.children('[data-swiper-slide-index="'+t+'"]:not(.'+C.params.slideDuplicateClass+")");C.lazy.loadImageInSlide(l.index(),!1)}else{var p=C.wrapper.children("."+C.params.slideDuplicateClass+'[data-swiper-slide-index="'+t+'"]');C.lazy.loadImageInSlide(p.index(),!1)}}C.emit("onLazyImageReady",C,n[0],e[0])}),C.emit("onLazyImageLoad",C,n[0],e[0])})}},load:function(){var e,i=C.params.slidesPerView;if("auto"===i&&(i=0),C.lazy.initialImageLoaded||(C.lazy.initialImageLoaded=!0),C.params.watchSlidesVisibility)C.wrapper.children("."+C.params.slideVisibleClass).each(function(){C.lazy.loadImageInSlide(t(this).index())});else if(i>1)for(e=C.activeIndex;e<C.activeIndex+i;e++)C.slides[e]&&C.lazy.loadImageInSlide(e);else C.lazy.loadImageInSlide(C.activeIndex);if(C.params.lazyLoadingInPrevNext)if(i>1||C.params.lazyLoadingInPrevNextAmount&&C.params.lazyLoadingInPrevNextAmount>1){var n=C.params.lazyLoadingInPrevNextAmount,s=i,r=Math.min(C.activeIndex+s+Math.max(n,s),C.slides.length),a=Math.max(C.activeIndex-Math.max(s,n),0);for(e=C.activeIndex+i;e<r;e++)C.slides[e]&&C.lazy.loadImageInSlide(e);for(e=a;e<C.activeIndex;e++)C.slides[e]&&C.lazy.loadImageInSlide(e)}else{var o=C.wrapper.children("."+C.params.slideNextClass);o.length>0&&C.lazy.loadImageInSlide(o.index());var l=C.wrapper.children("."+C.params.slidePrevClass);l.length>0&&C.lazy.loadImageInSlide(l.index())}},onTransitionStart:function(){C.params.lazyLoading&&(C.params.lazyLoadingOnTransitionStart||!C.params.lazyLoadingOnTransitionStart&&!C.lazy.initialImageLoaded)&&C.lazy.load()},onTransitionEnd:function(){C.params.lazyLoading&&!C.params.lazyLoadingOnTransitionStart&&C.lazy.load()}},C.scrollbar={isTouched:!1,setDragPosition:function(e){var t=C.scrollbar,i=C.isHorizontal()?"touchstart"===e.type||"touchmove"===e.type?e.targetTouches[0].pageX:e.pageX||e.clientX:"touchstart"===e.type||"touchmove"===e.type?e.targetTouches[0].pageY:e.pageY||e.clientY,n=i-t.track.offset()[C.isHorizontal()?"left":"top"]-t.dragSize/2,s=-C.minTranslate()*t.moveDivider,r=-C.maxTranslate()*t.moveDivider;n<s?n=s:n>r&&(n=r),n=-n/t.moveDivider,C.updateProgress(n),C.setWrapperTranslate(n,!0)},dragStart:function(e){var t=C.scrollbar;t.isTouched=!0,e.preventDefault(),e.stopPropagation(),t.setDragPosition(e),clearTimeout(t.dragTimeout),t.track.transition(0),C.params.scrollbarHide&&t.track.css("opacity",1),C.wrapper.transition(100),t.drag.transition(100),C.emit("onScrollbarDragStart",C)},dragMove:function(e){var t=C.scrollbar;t.isTouched&&(e.preventDefault?e.preventDefault():e.returnValue=!1,t.setDragPosition(e),C.wrapper.transition(0),t.track.transition(0),t.drag.transition(0),C.emit("onScrollbarDragMove",C))},dragEnd:function(e){var t=C.scrollbar;t.isTouched&&(t.isTouched=!1,C.params.scrollbarHide&&(clearTimeout(t.dragTimeout),t.dragTimeout=setTimeout(function(){t.track.css("opacity",0),t.track.transition(400)},1e3)),C.emit("onScrollbarDragEnd",C),C.params.scrollbarSnapOnRelease&&C.slideReset())},draggableEvents:function(){return C.params.simulateTouch!==!1||C.support.touch?C.touchEvents:C.touchEventsDesktop}(),enableDraggable:function(){var e=C.scrollbar,i=C.support.touch?e.track:document;t(e.track).on(e.draggableEvents.start,e.dragStart),t(i).on(e.draggableEvents.move,e.dragMove),t(i).on(e.draggableEvents.end,e.dragEnd)},disableDraggable:function(){var e=C.scrollbar,i=C.support.touch?e.track:document;t(e.track).off(C.draggableEvents.start,e.dragStart),t(i).off(C.draggableEvents.move,e.dragMove),t(i).off(C.draggableEvents.end,e.dragEnd)},set:function(){if(C.params.scrollbar){var e=C.scrollbar;e.track=t(C.params.scrollbar),C.params.uniqueNavElements&&"string"==typeof C.params.scrollbar&&e.track.length>1&&1===C.container.find(C.params.scrollbar).length&&(e.track=C.container.find(C.params.scrollbar)),e.drag=e.track.find(".swiper-scrollbar-drag"),0===e.drag.length&&(e.drag=t('<div class="swiper-scrollbar-drag"></div>'),e.track.append(e.drag)),e.drag[0].style.width="",e.drag[0].style.height="",e.trackSize=C.isHorizontal()?e.track[0].offsetWidth:e.track[0].offsetHeight,e.divider=C.size/C.virtualSize,e.moveDivider=e.divider*(e.trackSize/C.size),e.dragSize=e.trackSize*e.divider,C.isHorizontal()?e.drag[0].style.width=e.dragSize+"px":e.drag[0].style.height=e.dragSize+"px",e.divider>=1?e.track[0].style.display="none":e.track[0].style.display="",C.params.scrollbarHide&&(e.track[0].style.opacity=0)}},setTranslate:function(){if(C.params.scrollbar){var e,t=C.scrollbar,i=(C.translate||0,t.dragSize);e=(t.trackSize-t.dragSize)*C.progress,C.rtl&&C.isHorizontal()?(e=-e,e>0?(i=t.dragSize-e,e=0):-e+t.dragSize>t.trackSize&&(i=t.trackSize+e)):e<0?(i=t.dragSize+e,e=0):e+t.dragSize>t.trackSize&&(i=t.trackSize-e),C.isHorizontal()?(C.support.transforms3d?t.drag.transform("translate3d("+e+"px, 0, 0)"):t.drag.transform("translateX("+e+"px)"),t.drag[0].style.width=i+"px"):(C.support.transforms3d?t.drag.transform("translate3d(0px, "+e+"px, 0)"):t.drag.transform("translateY("+e+"px)"),t.drag[0].style.height=i+"px"),C.params.scrollbarHide&&(clearTimeout(t.timeout),t.track[0].style.opacity=1,t.timeout=setTimeout(function(){t.track[0].style.opacity=0,t.track.transition(400)},1e3))}},setTransition:function(e){C.params.scrollbar&&C.scrollbar.drag.transition(e)}},C.controller={LinearSpline:function(e,t){this.x=e,this.y=t,this.lastIndex=e.length-1;var i,n;this.x.length;this.interpolate=function(e){return e?(n=s(this.x,e),i=n-1,(e-this.x[i])*(this.y[n]-this.y[i])/(this.x[n]-this.x[i])+this.y[i]):0};var s=function(){var e,t,i;return function(n,s){for(t=-1,e=n.length;e-t>1;)n[i=e+t>>1]<=s?t=i:e=i;return e}}()},getInterpolateFunction:function(e){C.controller.spline||(C.controller.spline=C.params.loop?new C.controller.LinearSpline(C.slidesGrid,e.slidesGrid):new C.controller.LinearSpline(C.snapGrid,e.snapGrid))},setTranslate:function(e,t){function n(t){e=t.rtl&&"horizontal"===t.params.direction?-C.translate:C.translate,"slide"===C.params.controlBy&&(C.controller.getInterpolateFunction(t),r=-C.controller.spline.interpolate(-e)),r&&"container"!==C.params.controlBy||(s=(t.maxTranslate()-t.minTranslate())/(C.maxTranslate()-C.minTranslate()),r=(e-C.minTranslate())*s+t.minTranslate()),C.params.controlInverse&&(r=t.maxTranslate()-r),t.updateProgress(r),t.setWrapperTranslate(r,!1,C),t.updateActiveIndex()}var s,r,a=C.params.control;if(C.isArray(a))for(var o=0;o<a.length;o++)a[o]!==t&&a[o]instanceof i&&n(a[o]);else a instanceof i&&t!==a&&n(a)},setTransition:function(e,t){function n(t){t.setWrapperTransition(e,C),0!==e&&(t.onTransitionStart(),t.wrapper.transitionEnd(function(){r&&(t.params.loop&&"slide"===C.params.controlBy&&t.fixLoop(),t.onTransitionEnd())}))}var s,r=C.params.control;if(C.isArray(r))for(s=0;s<r.length;s++)r[s]!==t&&r[s]instanceof i&&n(r[s]);else r instanceof i&&t!==r&&n(r)}},C.hashnav={onHashCange:function(e,t){var i=document.location.hash.replace("#",""),n=C.slides.eq(C.activeIndex).attr("data-hash");i!==n&&C.slideTo(C.wrapper.children("."+C.params.slideClass+'[data-hash="'+i+'"]').index())},attachEvents:function(e){var i=e?"off":"on";t(window)[i]("hashchange",C.hashnav.onHashCange)},setHash:function(){if(C.hashnav.initialized&&C.params.hashnav)if(C.params.replaceState&&window.history&&window.history.replaceState)window.history.replaceState(null,null,"#"+C.slides.eq(C.activeIndex).attr("data-hash")||"");else{var e=C.slides.eq(C.activeIndex),t=e.attr("data-hash")||e.attr("data-history");document.location.hash=t||""}},init:function(){if(C.params.hashnav&&!C.params.history){C.hashnav.initialized=!0;var e=document.location.hash.replace("#","");if(e){for(var t=0,i=0,n=C.slides.length;i<n;i++){var s=C.slides.eq(i),r=s.attr("data-hash")||s.attr("data-history");if(r===e&&!s.hasClass(C.params.slideDuplicateClass)){var a=s.index();C.slideTo(a,t,C.params.runCallbacksOnInit,!0)}}C.params.hashnavWatchState&&C.hashnav.attachEvents()}}},destroy:function(){C.params.hashnavWatchState&&C.hashnav.attachEvents(!0)}},C.history={init:function(){if(C.params.history){if(!window.history||!window.history.pushState)return C.params.history=!1,void(C.params.hashnav=!0);C.history.initialized=!0,this.paths=this.getPathValues(),(this.paths.key||this.paths.value)&&(this.scrollToSlide(0,this.paths.value,C.params.runCallbacksOnInit),C.params.replaceState||window.addEventListener("popstate",this.setHistoryPopState))}},setHistoryPopState:function(){C.history.paths=C.history.getPathValues(),C.history.scrollToSlide(C.params.speed,C.history.paths.value,!1)},getPathValues:function(){var e=window.location.pathname.slice(1).split("/"),t=e.length,i=e[t-2],n=e[t-1];return{key:i,value:n}},setHistory:function(e,t){if(C.history.initialized&&C.params.history){var i=C.slides.eq(t),n=this.slugify(i.attr("data-history"));window.location.pathname.includes(e)||(n=e+"/"+n),C.params.replaceState?window.history.replaceState(null,null,n):window.history.pushState(null,null,n)}},slugify:function(e){return e.toString().toLowerCase().replace(/\s+/g,"-").replace(/[^\w\-]+/g,"").replace(/\-\-+/g,"-").replace(/^-+/,"").replace(/-+$/,"")},scrollToSlide:function(e,t,i){if(t)for(var n=0,s=C.slides.length;n<s;n++){var r=C.slides.eq(n),a=this.slugify(r.attr("data-history"));if(a===t&&!r.hasClass(C.params.slideDuplicateClass)){var o=r.index();C.slideTo(o,e,i)}}else C.slideTo(0,e,i)}},C.disableKeyboardControl=function(){C.params.keyboardControl=!1,t(document).off("keydown",c)},C.enableKeyboardControl=function(){C.params.keyboardControl=!0,t(document).on("keydown",c)},C.mousewheel={event:!1,lastScrollTime:(new window.Date).getTime()},C.params.mousewheelControl&&(C.mousewheel.event=navigator.userAgent.indexOf("firefox")>-1?"DOMMouseScroll":u()?"wheel":"mousewheel"),
C.disableMousewheelControl=function(){if(!C.mousewheel.event)return!1;var e=C.container;return"container"!==C.params.mousewheelEventsTarged&&(e=t(C.params.mousewheelEventsTarged)),e.off(C.mousewheel.event,d),!0},C.enableMousewheelControl=function(){if(!C.mousewheel.event)return!1;var e=C.container;return"container"!==C.params.mousewheelEventsTarged&&(e=t(C.params.mousewheelEventsTarged)),e.on(C.mousewheel.event,d),!0},C.parallax={setTranslate:function(){C.container.children("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]").each(function(){f(this,C.progress)}),C.slides.each(function(){var e=t(this);e.find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]").each(function(){var t=Math.min(Math.max(e[0].progress,-1),1);f(this,t)})})},setTransition:function(e){"undefined"==typeof e&&(e=C.params.speed),C.container.find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]").each(function(){var i=t(this),n=parseInt(i.attr("data-swiper-parallax-duration"),10)||e;0===e&&(n=0),i.transition(n)})}},C.zoom={scale:1,currentScale:1,isScaling:!1,gesture:{slide:void 0,slideWidth:void 0,slideHeight:void 0,image:void 0,imageWrap:void 0,zoomMax:C.params.zoomMax},image:{isTouched:void 0,isMoved:void 0,currentX:void 0,currentY:void 0,minX:void 0,minY:void 0,maxX:void 0,maxY:void 0,width:void 0,height:void 0,startX:void 0,startY:void 0,touchesStart:{},touchesCurrent:{}},velocity:{x:void 0,y:void 0,prevPositionX:void 0,prevPositionY:void 0,prevTime:void 0},getDistanceBetweenTouches:function(e){if(e.targetTouches.length<2)return 1;var t=e.targetTouches[0].pageX,i=e.targetTouches[0].pageY,n=e.targetTouches[1].pageX,s=e.targetTouches[1].pageY,r=Math.sqrt(Math.pow(n-t,2)+Math.pow(s-i,2));return r},onGestureStart:function(e){var i=C.zoom;if(!C.support.gestures){if("touchstart"!==e.type||"touchstart"===e.type&&e.targetTouches.length<2)return;i.gesture.scaleStart=i.getDistanceBetweenTouches(e)}return i.gesture.slide&&i.gesture.slide.length||(i.gesture.slide=t(this),0===i.gesture.slide.length&&(i.gesture.slide=C.slides.eq(C.activeIndex)),i.gesture.image=i.gesture.slide.find("img, svg, canvas"),i.gesture.imageWrap=i.gesture.image.parent("."+C.params.zoomContainerClass),i.gesture.zoomMax=i.gesture.imageWrap.attr("data-swiper-zoom")||C.params.zoomMax,0!==i.gesture.imageWrap.length)?(i.gesture.image.transition(0),void(i.isScaling=!0)):void(i.gesture.image=void 0)},onGestureChange:function(e){var t=C.zoom;if(!C.support.gestures){if("touchmove"!==e.type||"touchmove"===e.type&&e.targetTouches.length<2)return;t.gesture.scaleMove=t.getDistanceBetweenTouches(e)}t.gesture.image&&0!==t.gesture.image.length&&(C.support.gestures?t.scale=e.scale*t.currentScale:t.scale=t.gesture.scaleMove/t.gesture.scaleStart*t.currentScale,t.scale>t.gesture.zoomMax&&(t.scale=t.gesture.zoomMax-1+Math.pow(t.scale-t.gesture.zoomMax+1,.5)),t.scale<C.params.zoomMin&&(t.scale=C.params.zoomMin+1-Math.pow(C.params.zoomMin-t.scale+1,.5)),t.gesture.image.transform("translate3d(0,0,0) scale("+t.scale+")"))},onGestureEnd:function(e){var t=C.zoom;!C.support.gestures&&("touchend"!==e.type||"touchend"===e.type&&e.changedTouches.length<2)||t.gesture.image&&0!==t.gesture.image.length&&(t.scale=Math.max(Math.min(t.scale,t.gesture.zoomMax),C.params.zoomMin),t.gesture.image.transition(C.params.speed).transform("translate3d(0,0,0) scale("+t.scale+")"),t.currentScale=t.scale,t.isScaling=!1,1===t.scale&&(t.gesture.slide=void 0))},onTouchStart:function(e,t){var i=e.zoom;i.gesture.image&&0!==i.gesture.image.length&&(i.image.isTouched||("android"===e.device.os&&t.preventDefault(),i.image.isTouched=!0,i.image.touchesStart.x="touchstart"===t.type?t.targetTouches[0].pageX:t.pageX,i.image.touchesStart.y="touchstart"===t.type?t.targetTouches[0].pageY:t.pageY))},onTouchMove:function(e){var t=C.zoom;if(t.gesture.image&&0!==t.gesture.image.length&&(C.allowClick=!1,t.image.isTouched&&t.gesture.slide)){t.image.isMoved||(t.image.width=t.gesture.image[0].offsetWidth,t.image.height=t.gesture.image[0].offsetHeight,t.image.startX=C.getTranslate(t.gesture.imageWrap[0],"x")||0,t.image.startY=C.getTranslate(t.gesture.imageWrap[0],"y")||0,t.gesture.slideWidth=t.gesture.slide[0].offsetWidth,t.gesture.slideHeight=t.gesture.slide[0].offsetHeight,t.gesture.imageWrap.transition(0));var i=t.image.width*t.scale,n=t.image.height*t.scale;if(!(i<t.gesture.slideWidth&&n<t.gesture.slideHeight)){if(t.image.minX=Math.min(t.gesture.slideWidth/2-i/2,0),t.image.maxX=-t.image.minX,t.image.minY=Math.min(t.gesture.slideHeight/2-n/2,0),t.image.maxY=-t.image.minY,t.image.touchesCurrent.x="touchmove"===e.type?e.targetTouches[0].pageX:e.pageX,t.image.touchesCurrent.y="touchmove"===e.type?e.targetTouches[0].pageY:e.pageY,!t.image.isMoved&&!t.isScaling){if(C.isHorizontal()&&Math.floor(t.image.minX)===Math.floor(t.image.startX)&&t.image.touchesCurrent.x<t.image.touchesStart.x||Math.floor(t.image.maxX)===Math.floor(t.image.startX)&&t.image.touchesCurrent.x>t.image.touchesStart.x)return void(t.image.isTouched=!1);if(!C.isHorizontal()&&Math.floor(t.image.minY)===Math.floor(t.image.startY)&&t.image.touchesCurrent.y<t.image.touchesStart.y||Math.floor(t.image.maxY)===Math.floor(t.image.startY)&&t.image.touchesCurrent.y>t.image.touchesStart.y)return void(t.image.isTouched=!1)}e.preventDefault(),e.stopPropagation(),t.image.isMoved=!0,t.image.currentX=t.image.touchesCurrent.x-t.image.touchesStart.x+t.image.startX,t.image.currentY=t.image.touchesCurrent.y-t.image.touchesStart.y+t.image.startY,t.image.currentX<t.image.minX&&(t.image.currentX=t.image.minX+1-Math.pow(t.image.minX-t.image.currentX+1,.8)),t.image.currentX>t.image.maxX&&(t.image.currentX=t.image.maxX-1+Math.pow(t.image.currentX-t.image.maxX+1,.8)),t.image.currentY<t.image.minY&&(t.image.currentY=t.image.minY+1-Math.pow(t.image.minY-t.image.currentY+1,.8)),t.image.currentY>t.image.maxY&&(t.image.currentY=t.image.maxY-1+Math.pow(t.image.currentY-t.image.maxY+1,.8)),t.velocity.prevPositionX||(t.velocity.prevPositionX=t.image.touchesCurrent.x),t.velocity.prevPositionY||(t.velocity.prevPositionY=t.image.touchesCurrent.y),t.velocity.prevTime||(t.velocity.prevTime=Date.now()),t.velocity.x=(t.image.touchesCurrent.x-t.velocity.prevPositionX)/(Date.now()-t.velocity.prevTime)/2,t.velocity.y=(t.image.touchesCurrent.y-t.velocity.prevPositionY)/(Date.now()-t.velocity.prevTime)/2,Math.abs(t.image.touchesCurrent.x-t.velocity.prevPositionX)<2&&(t.velocity.x=0),Math.abs(t.image.touchesCurrent.y-t.velocity.prevPositionY)<2&&(t.velocity.y=0),t.velocity.prevPositionX=t.image.touchesCurrent.x,t.velocity.prevPositionY=t.image.touchesCurrent.y,t.velocity.prevTime=Date.now(),t.gesture.imageWrap.transform("translate3d("+t.image.currentX+"px, "+t.image.currentY+"px,0)")}}},onTouchEnd:function(e,t){var i=e.zoom;if(i.gesture.image&&0!==i.gesture.image.length){if(!i.image.isTouched||!i.image.isMoved)return i.image.isTouched=!1,void(i.image.isMoved=!1);i.image.isTouched=!1,i.image.isMoved=!1;var n=300,s=300,r=i.velocity.x*n,a=i.image.currentX+r,o=i.velocity.y*s,l=i.image.currentY+o;0!==i.velocity.x&&(n=Math.abs((a-i.image.currentX)/i.velocity.x)),0!==i.velocity.y&&(s=Math.abs((l-i.image.currentY)/i.velocity.y));var p=Math.max(n,s);i.image.currentX=a,i.image.currentY=l;var c=i.image.width*i.scale,u=i.image.height*i.scale;i.image.minX=Math.min(i.gesture.slideWidth/2-c/2,0),i.image.maxX=-i.image.minX,i.image.minY=Math.min(i.gesture.slideHeight/2-u/2,0),i.image.maxY=-i.image.minY,i.image.currentX=Math.max(Math.min(i.image.currentX,i.image.maxX),i.image.minX),i.image.currentY=Math.max(Math.min(i.image.currentY,i.image.maxY),i.image.minY),i.gesture.imageWrap.transition(p).transform("translate3d("+i.image.currentX+"px, "+i.image.currentY+"px,0)")}},onTransitionEnd:function(e){var t=e.zoom;t.gesture.slide&&e.previousIndex!==e.activeIndex&&(t.gesture.image.transform("translate3d(0,0,0) scale(1)"),t.gesture.imageWrap.transform("translate3d(0,0,0)"),t.gesture.slide=t.gesture.image=t.gesture.imageWrap=void 0,t.scale=t.currentScale=1)},toggleZoom:function(e,i){var n=e.zoom;if(n.gesture.slide||(n.gesture.slide=e.clickedSlide?t(e.clickedSlide):e.slides.eq(e.activeIndex),n.gesture.image=n.gesture.slide.find("img, svg, canvas"),n.gesture.imageWrap=n.gesture.image.parent("."+e.params.zoomContainerClass)),n.gesture.image&&0!==n.gesture.image.length){var s,r,a,o,l,p,c,u,d,h,f,m,g,v,y,w,b,x;"undefined"==typeof n.image.touchesStart.x&&i?(s="touchend"===i.type?i.changedTouches[0].pageX:i.pageX,r="touchend"===i.type?i.changedTouches[0].pageY:i.pageY):(s=n.image.touchesStart.x,r=n.image.touchesStart.y),n.scale&&1!==n.scale?(n.scale=n.currentScale=1,n.gesture.imageWrap.transition(300).transform("translate3d(0,0,0)"),n.gesture.image.transition(300).transform("translate3d(0,0,0) scale(1)"),n.gesture.slide=void 0):(n.scale=n.currentScale=n.gesture.imageWrap.attr("data-swiper-zoom")||e.params.zoomMax,i?(b=n.gesture.slide[0].offsetWidth,x=n.gesture.slide[0].offsetHeight,a=n.gesture.slide.offset().left,o=n.gesture.slide.offset().top,l=a+b/2-s,p=o+x/2-r,d=n.gesture.image[0].offsetWidth,h=n.gesture.image[0].offsetHeight,f=d*n.scale,m=h*n.scale,g=Math.min(b/2-f/2,0),v=Math.min(x/2-m/2,0),y=-g,w=-v,c=l*n.scale,u=p*n.scale,c<g&&(c=g),c>y&&(c=y),u<v&&(u=v),u>w&&(u=w)):(c=0,u=0),n.gesture.imageWrap.transition(300).transform("translate3d("+c+"px, "+u+"px,0)"),n.gesture.image.transition(300).transform("translate3d(0,0,0) scale("+n.scale+")"))}},attachEvents:function(e){var i=e?"off":"on";if(C.params.zoom){var n=(C.slides,!("touchstart"!==C.touchEvents.start||!C.support.passiveListener||!C.params.passiveListeners)&&{passive:!0,capture:!1});C.support.gestures?(C.slides[i]("gesturestart",C.zoom.onGestureStart,n),C.slides[i]("gesturechange",C.zoom.onGestureChange,n),C.slides[i]("gestureend",C.zoom.onGestureEnd,n)):"touchstart"===C.touchEvents.start&&(C.slides[i](C.touchEvents.start,C.zoom.onGestureStart,n),C.slides[i](C.touchEvents.move,C.zoom.onGestureChange,n),C.slides[i](C.touchEvents.end,C.zoom.onGestureEnd,n)),C[i]("touchStart",C.zoom.onTouchStart),C.slides.each(function(e,n){t(n).find("."+C.params.zoomContainerClass).length>0&&t(n)[i](C.touchEvents.move,C.zoom.onTouchMove)}),C[i]("touchEnd",C.zoom.onTouchEnd),C[i]("transitionEnd",C.zoom.onTransitionEnd),C.params.zoomToggle&&C.on("doubleTap",C.zoom.toggleZoom)}},init:function(){C.zoom.attachEvents()},destroy:function(){C.zoom.attachEvents(!0)}},C._plugins=[];for(var j in C.plugins){var R=C.plugins[j](C,C.params[j]);R&&C._plugins.push(R)}return C.callPlugins=function(e){for(var t=0;t<C._plugins.length;t++)e in C._plugins[t]&&C._plugins[t][e](arguments[1],arguments[2],arguments[3],arguments[4],arguments[5])},C.emitterEventListeners={},C.emit=function(e){C.params[e]&&C.params[e](arguments[1],arguments[2],arguments[3],arguments[4],arguments[5]);var t;if(C.emitterEventListeners[e])for(t=0;t<C.emitterEventListeners[e].length;t++)C.emitterEventListeners[e][t](arguments[1],arguments[2],arguments[3],arguments[4],arguments[5]);C.callPlugins&&C.callPlugins(e,arguments[1],arguments[2],arguments[3],arguments[4],arguments[5])},C.on=function(e,t){return e=m(e),C.emitterEventListeners[e]||(C.emitterEventListeners[e]=[]),C.emitterEventListeners[e].push(t),C},C.off=function(e,t){var i;if(e=m(e),"undefined"==typeof t)return C.emitterEventListeners[e]=[],C;if(C.emitterEventListeners[e]&&0!==C.emitterEventListeners[e].length){for(i=0;i<C.emitterEventListeners[e].length;i++)C.emitterEventListeners[e][i]===t&&C.emitterEventListeners[e].splice(i,1);return C}},C.once=function(e,t){e=m(e);var i=function(){t(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4]),C.off(e,i)};return C.on(e,i),C},C.a11y={makeFocusable:function(e){return e.attr("tabIndex","0"),e},addRole:function(e,t){return e.attr("role",t),e},addLabel:function(e,t){return e.attr("aria-label",t),e},disable:function(e){return e.attr("aria-disabled",!0),e},enable:function(e){return e.attr("aria-disabled",!1),e},onEnterKey:function(e){13===e.keyCode&&(t(e.target).is(C.params.nextButton)?(C.onClickNext(e),C.isEnd?C.a11y.notify(C.params.lastSlideMessage):C.a11y.notify(C.params.nextSlideMessage)):t(e.target).is(C.params.prevButton)&&(C.onClickPrev(e),C.isBeginning?C.a11y.notify(C.params.firstSlideMessage):C.a11y.notify(C.params.prevSlideMessage)),t(e.target).is("."+C.params.bulletClass)&&t(e.target)[0].click())},liveRegion:t('<span class="'+C.params.notificationClass+'" aria-live="assertive" aria-atomic="true"></span>'),notify:function(e){var t=C.a11y.liveRegion;0!==t.length&&(t.html(""),t.html(e))},init:function(){C.params.nextButton&&C.nextButton&&C.nextButton.length>0&&(C.a11y.makeFocusable(C.nextButton),C.a11y.addRole(C.nextButton,"button"),C.a11y.addLabel(C.nextButton,C.params.nextSlideMessage)),C.params.prevButton&&C.prevButton&&C.prevButton.length>0&&(C.a11y.makeFocusable(C.prevButton),C.a11y.addRole(C.prevButton,"button"),C.a11y.addLabel(C.prevButton,C.params.prevSlideMessage)),t(C.container).append(C.a11y.liveRegion)},initPagination:function(){C.params.pagination&&C.params.paginationClickable&&C.bullets&&C.bullets.length&&C.bullets.each(function(){var e=t(this);C.a11y.makeFocusable(e),C.a11y.addRole(e,"button"),C.a11y.addLabel(e,C.params.paginationBulletMessage.replace(/{{index}}/,e.index()+1))})},destroy:function(){C.a11y.liveRegion&&C.a11y.liveRegion.length>0&&C.a11y.liveRegion.remove()}},C.init=function(){C.params.loop&&C.createLoop(),C.updateContainerSize(),C.updateSlidesSize(),C.updatePagination(),C.params.scrollbar&&C.scrollbar&&(C.scrollbar.set(),C.params.scrollbarDraggable&&C.scrollbar.enableDraggable()),"slide"!==C.params.effect&&C.effects[C.params.effect]&&(C.params.loop||C.updateProgress(),C.effects[C.params.effect].setTranslate()),C.params.loop?C.slideTo(C.params.initialSlide+C.loopedSlides,0,C.params.runCallbacksOnInit):(C.slideTo(C.params.initialSlide,0,C.params.runCallbacksOnInit),0===C.params.initialSlide&&(C.parallax&&C.params.parallax&&C.parallax.setTranslate(),C.lazy&&C.params.lazyLoading&&(C.lazy.load(),C.lazy.initialImageLoaded=!0))),C.attachEvents(),C.params.observer&&C.support.observer&&C.initObservers(),C.params.preloadImages&&!C.params.lazyLoading&&C.preloadImages(),C.params.zoom&&C.zoom&&C.zoom.init(),C.params.autoplay&&C.startAutoplay(),C.params.keyboardControl&&C.enableKeyboardControl&&C.enableKeyboardControl(),C.params.mousewheelControl&&C.enableMousewheelControl&&C.enableMousewheelControl(),C.params.hashnavReplaceState&&(C.params.replaceState=C.params.hashnavReplaceState),C.params.history&&C.history&&C.history.init(),C.params.hashnav&&C.hashnav&&C.hashnav.init(),C.params.a11y&&C.a11y&&C.a11y.init(),C.emit("onInit",C)},C.cleanupStyles=function(){C.container.removeClass(C.classNames.join(" ")).removeAttr("style"),C.wrapper.removeAttr("style"),C.slides&&C.slides.length&&C.slides.removeClass([C.params.slideVisibleClass,C.params.slideActiveClass,C.params.slideNextClass,C.params.slidePrevClass].join(" ")).removeAttr("style").removeAttr("data-swiper-column").removeAttr("data-swiper-row"),C.paginationContainer&&C.paginationContainer.length&&C.paginationContainer.removeClass(C.params.paginationHiddenClass),C.bullets&&C.bullets.length&&C.bullets.removeClass(C.params.bulletActiveClass),C.params.prevButton&&t(C.params.prevButton).removeClass(C.params.buttonDisabledClass),C.params.nextButton&&t(C.params.nextButton).removeClass(C.params.buttonDisabledClass),C.params.scrollbar&&C.scrollbar&&(C.scrollbar.track&&C.scrollbar.track.length&&C.scrollbar.track.removeAttr("style"),C.scrollbar.drag&&C.scrollbar.drag.length&&C.scrollbar.drag.removeAttr("style"))},C.destroy=function(e,t){C.detachEvents(),C.stopAutoplay(),C.params.scrollbar&&C.scrollbar&&C.params.scrollbarDraggable&&C.scrollbar.disableDraggable(),C.params.loop&&C.destroyLoop(),t&&C.cleanupStyles(),C.disconnectObservers(),C.params.zoom&&C.zoom&&C.zoom.destroy(),C.params.keyboardControl&&C.disableKeyboardControl&&C.disableKeyboardControl(),C.params.mousewheelControl&&C.disableMousewheelControl&&C.disableMousewheelControl(),C.params.a11y&&C.a11y&&C.a11y.destroy(),C.params.history&&!C.params.replaceState&&window.removeEventListener("popstate",C.history.setHistoryPopState),C.params.hashnav&&C.hashnav&&C.hashnav.destroy(),C.emit("onDestroy"),e!==!1&&(C=null)},C.init(),C}};i.prototype={isSafari:function(){var e=navigator.userAgent.toLowerCase();return e.indexOf("safari")>=0&&e.indexOf("chrome")<0&&e.indexOf("android")<0}(),isUiWebView:/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(navigator.userAgent),isArray:function(e){return"[object Array]"===Object.prototype.toString.apply(e)},browser:{ie:window.navigator.pointerEnabled||window.navigator.msPointerEnabled,ieTouch:window.navigator.msPointerEnabled&&window.navigator.msMaxTouchPoints>1||window.navigator.pointerEnabled&&window.navigator.maxTouchPoints>1,lteIE9:function(){var e=document.createElement("div");return e.innerHTML="<!--[if lte IE 9]><i></i><![endif]-->",1===e.getElementsByTagName("i").length}()},device:function(){var e=navigator.userAgent,t=e.match(/(Android);?[\s\/]+([\d.]+)?/),i=e.match(/(iPad).*OS\s([\d_]+)/),n=e.match(/(iPod)(.*OS\s([\d_]+))?/),s=!i&&e.match(/(iPhone\sOS)\s([\d_]+)/);return{ios:i||s||n,android:t}}(),support:{touch:window.Modernizr&&Modernizr.touch===!0||function(){return!!("ontouchstart"in window||window.DocumentTouch&&document instanceof DocumentTouch)}(),transforms3d:window.Modernizr&&Modernizr.csstransforms3d===!0||function(){var e=document.createElement("div").style;return"webkitPerspective"in e||"MozPerspective"in e||"OPerspective"in e||"MsPerspective"in e||"perspective"in e}(),flexbox:function(){for(var e=document.createElement("div").style,t="alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient".split(" "),i=0;i<t.length;i++)if(t[i]in e)return!0}(),observer:function(){return"MutationObserver"in window||"WebkitMutationObserver"in window}(),passiveListener:function(){var e=!1;try{var t=Object.defineProperty({},"passive",{get:function(){e=!0}});window.addEventListener("testPassiveListener",null,t)}catch(e){}return e}(),gestures:function(){return"ongesturestart"in window}()},plugins:{}};for(var n=(function(){var e=function(e){var t=this,i=0;for(i=0;i<e.length;i++)t[i]=e[i];return t.length=e.length,this},t=function(t,i){var n=[],s=0;if(t&&!i&&t instanceof e)return t;if(t)if("string"==typeof t){var r,a,o=t.trim();if(o.indexOf("<")>=0&&o.indexOf(">")>=0){var l="div";for(0===o.indexOf("<li")&&(l="ul"),0===o.indexOf("<tr")&&(l="tbody"),0!==o.indexOf("<td")&&0!==o.indexOf("<th")||(l="tr"),0===o.indexOf("<tbody")&&(l="table"),0===o.indexOf("<option")&&(l="select"),a=document.createElement(l),a.innerHTML=t,s=0;s<a.childNodes.length;s++)n.push(a.childNodes[s])}else for(r=i||"#"!==t[0]||t.match(/[ .<>:~]/)?(i||document).querySelectorAll(t):[document.getElementById(t.split("#")[1])],s=0;s<r.length;s++)r[s]&&n.push(r[s])}else if(t.nodeType||t===window||t===document)n.push(t);else if(t.length>0&&t[0].nodeType)for(s=0;s<t.length;s++)n.push(t[s]);return new e(n)};return e.prototype={addClass:function(e){if("undefined"==typeof e)return this;for(var t=e.split(" "),i=0;i<t.length;i++)for(var n=0;n<this.length;n++)this[n].classList.add(t[i]);return this},removeClass:function(e){for(var t=e.split(" "),i=0;i<t.length;i++)for(var n=0;n<this.length;n++)this[n].classList.remove(t[i]);return this},hasClass:function(e){return!!this[0]&&this[0].classList.contains(e)},toggleClass:function(e){for(var t=e.split(" "),i=0;i<t.length;i++)for(var n=0;n<this.length;n++)this[n].classList.toggle(t[i]);return this},attr:function(e,t){if(1===arguments.length&&"string"==typeof e)return this[0]?this[0].getAttribute(e):void 0;for(var i=0;i<this.length;i++)if(2===arguments.length)this[i].setAttribute(e,t);else for(var n in e)this[i][n]=e[n],this[i].setAttribute(n,e[n]);return this},removeAttr:function(e){for(var t=0;t<this.length;t++)this[t].removeAttribute(e);return this},data:function(e,t){if("undefined"!=typeof t){for(var i=0;i<this.length;i++){var n=this[i];n.dom7ElementDataStorage||(n.dom7ElementDataStorage={}),n.dom7ElementDataStorage[e]=t}return this}if(this[0]){var s=this[0].getAttribute("data-"+e);return s?s:this[0].dom7ElementDataStorage&&e in this[0].dom7ElementDataStorage?this[0].dom7ElementDataStorage[e]:void 0}},transform:function(e){for(var t=0;t<this.length;t++){var i=this[t].style;i.webkitTransform=i.MsTransform=i.msTransform=i.MozTransform=i.OTransform=i.transform=e}return this},transition:function(e){"string"!=typeof e&&(e+="ms");for(var t=0;t<this.length;t++){var i=this[t].style;i.webkitTransitionDuration=i.MsTransitionDuration=i.msTransitionDuration=i.MozTransitionDuration=i.OTransitionDuration=i.transitionDuration=e}return this},on:function(e,i,n,s){function r(e){var s=e.target;if(t(s).is(i))n.call(s,e);else for(var r=t(s).parents(),a=0;a<r.length;a++)t(r[a]).is(i)&&n.call(r[a],e)}var a,o,l=e.split(" ");for(a=0;a<this.length;a++)if("function"==typeof i||i===!1)for("function"==typeof i&&(n=arguments[1],s=arguments[2]||!1),o=0;o<l.length;o++)this[a].addEventListener(l[o],n,s);else for(o=0;o<l.length;o++)this[a].dom7LiveListeners||(this[a].dom7LiveListeners=[]),this[a].dom7LiveListeners.push({listener:n,liveListener:r}),this[a].addEventListener(l[o],r,s);return this},off:function(e,t,i,n){for(var s=e.split(" "),r=0;r<s.length;r++)for(var a=0;a<this.length;a++)if("function"==typeof t||t===!1)"function"==typeof t&&(i=arguments[1],n=arguments[2]||!1),this[a].removeEventListener(s[r],i,n);else if(this[a].dom7LiveListeners)for(var o=0;o<this[a].dom7LiveListeners.length;o++)this[a].dom7LiveListeners[o].listener===i&&this[a].removeEventListener(s[r],this[a].dom7LiveListeners[o].liveListener,n);return this},once:function(e,t,i,n){function s(a){i(a),r.off(e,t,s,n)}var r=this;"function"==typeof t&&(t=!1,i=arguments[1],n=arguments[2]),r.on(e,t,s,n)},trigger:function(e,t){for(var i=0;i<this.length;i++){var n;try{n=new window.CustomEvent(e,{detail:t,bubbles:!0,cancelable:!0})}catch(i){n=document.createEvent("Event"),n.initEvent(e,!0,!0),n.detail=t}this[i].dispatchEvent(n)}return this},transitionEnd:function(e){function t(r){if(r.target===this)for(e.call(this,r),i=0;i<n.length;i++)s.off(n[i],t)}var i,n=["webkitTransitionEnd","transitionend","oTransitionEnd","MSTransitionEnd","msTransitionEnd"],s=this;if(e)for(i=0;i<n.length;i++)s.on(n[i],t);return this},width:function(){return this[0]===window?window.innerWidth:this.length>0?parseFloat(this.css("width")):null},outerWidth:function(e){return this.length>0?e?this[0].offsetWidth+parseFloat(this.css("margin-right"))+parseFloat(this.css("margin-left")):this[0].offsetWidth:null},height:function(){return this[0]===window?window.innerHeight:this.length>0?parseFloat(this.css("height")):null},outerHeight:function(e){return this.length>0?e?this[0].offsetHeight+parseFloat(this.css("margin-top"))+parseFloat(this.css("margin-bottom")):this[0].offsetHeight:null},offset:function(){if(this.length>0){var e=this[0],t=e.getBoundingClientRect(),i=document.body,n=e.clientTop||i.clientTop||0,s=e.clientLeft||i.clientLeft||0,r=window.pageYOffset||e.scrollTop,a=window.pageXOffset||e.scrollLeft;return{top:t.top+r-n,left:t.left+a-s}}return null},css:function(e,t){var i;if(1===arguments.length){if("string"!=typeof e){for(i=0;i<this.length;i++)for(var n in e)this[i].style[n]=e[n];return this}if(this[0])return window.getComputedStyle(this[0],null).getPropertyValue(e)}if(2===arguments.length&&"string"==typeof e){for(i=0;i<this.length;i++)this[i].style[e]=t;return this}return this},each:function(e){for(var t=0;t<this.length;t++)e.call(this[t],t,this[t]);return this},html:function(e){if("undefined"==typeof e)return this[0]?this[0].innerHTML:void 0;for(var t=0;t<this.length;t++)this[t].innerHTML=e;return this},text:function(e){if("undefined"==typeof e)return this[0]?this[0].textContent.trim():null;for(var t=0;t<this.length;t++)this[t].textContent=e;return this},is:function(i){if(!this[0])return!1;var n,s;if("string"==typeof i){var r=this[0];if(r===document)return i===document;if(r===window)return i===window;if(r.matches)return r.matches(i);if(r.webkitMatchesSelector)return r.webkitMatchesSelector(i);if(r.mozMatchesSelector)return r.mozMatchesSelector(i);if(r.msMatchesSelector)return r.msMatchesSelector(i);for(n=t(i),s=0;s<n.length;s++)if(n[s]===this[0])return!0;return!1}if(i===document)return this[0]===document;if(i===window)return this[0]===window;if(i.nodeType||i instanceof e){for(n=i.nodeType?[i]:i,s=0;s<n.length;s++)if(n[s]===this[0])return!0;return!1}return!1},index:function(){if(this[0]){for(var e=this[0],t=0;null!==(e=e.previousSibling);)1===e.nodeType&&t++;return t}},eq:function(t){if("undefined"==typeof t)return this;var i,n=this.length;return t>n-1?new e([]):t<0?(i=n+t,new e(i<0?[]:[this[i]])):new e([this[t]])},append:function(t){var i,n;for(i=0;i<this.length;i++)if("string"==typeof t){var s=document.createElement("div");for(s.innerHTML=t;s.firstChild;)this[i].appendChild(s.firstChild)}else if(t instanceof e)for(n=0;n<t.length;n++)this[i].appendChild(t[n]);else this[i].appendChild(t);return this},prepend:function(t){var i,n;for(i=0;i<this.length;i++)if("string"==typeof t){var s=document.createElement("div");for(s.innerHTML=t,n=s.childNodes.length-1;n>=0;n--)this[i].insertBefore(s.childNodes[n],this[i].childNodes[0])}else if(t instanceof e)for(n=0;n<t.length;n++)this[i].insertBefore(t[n],this[i].childNodes[0]);else this[i].insertBefore(t,this[i].childNodes[0]);return this},insertBefore:function(e){for(var i=t(e),n=0;n<this.length;n++)if(1===i.length)i[0].parentNode.insertBefore(this[n],i[0]);else if(i.length>1)for(var s=0;s<i.length;s++)i[s].parentNode.insertBefore(this[n].cloneNode(!0),i[s])},insertAfter:function(e){for(var i=t(e),n=0;n<this.length;n++)if(1===i.length)i[0].parentNode.insertBefore(this[n],i[0].nextSibling);else if(i.length>1)for(var s=0;s<i.length;s++)i[s].parentNode.insertBefore(this[n].cloneNode(!0),i[s].nextSibling)},next:function(i){return new e(this.length>0?i?this[0].nextElementSibling&&t(this[0].nextElementSibling).is(i)?[this[0].nextElementSibling]:[]:this[0].nextElementSibling?[this[0].nextElementSibling]:[]:[])},nextAll:function(i){var n=[],s=this[0];if(!s)return new e([]);for(;s.nextElementSibling;){var r=s.nextElementSibling;i?t(r).is(i)&&n.push(r):n.push(r),s=r}return new e(n)},prev:function(i){return new e(this.length>0?i?this[0].previousElementSibling&&t(this[0].previousElementSibling).is(i)?[this[0].previousElementSibling]:[]:this[0].previousElementSibling?[this[0].previousElementSibling]:[]:[])},prevAll:function(i){var n=[],s=this[0];if(!s)return new e([]);for(;s.previousElementSibling;){var r=s.previousElementSibling;i?t(r).is(i)&&n.push(r):n.push(r),s=r}return new e(n)},parent:function(e){for(var i=[],n=0;n<this.length;n++)e?t(this[n].parentNode).is(e)&&i.push(this[n].parentNode):i.push(this[n].parentNode);return t(t.unique(i))},parents:function(e){for(var i=[],n=0;n<this.length;n++)for(var s=this[n].parentNode;s;)e?t(s).is(e)&&i.push(s):i.push(s),s=s.parentNode;return t(t.unique(i))},find:function(t){for(var i=[],n=0;n<this.length;n++)for(var s=this[n].querySelectorAll(t),r=0;r<s.length;r++)i.push(s[r]);return new e(i)},children:function(i){for(var n=[],s=0;s<this.length;s++)for(var r=this[s].childNodes,a=0;a<r.length;a++)i?1===r[a].nodeType&&t(r[a]).is(i)&&n.push(r[a]):1===r[a].nodeType&&n.push(r[a]);return new e(t.unique(n))},remove:function(){for(var e=0;e<this.length;e++)this[e].parentNode&&this[e].parentNode.removeChild(this[e]);return this},add:function(){var e,i,n=this;for(e=0;e<arguments.length;e++){var s=t(arguments[e]);for(i=0;i<s.length;i++)n[n.length]=s[i],n.length++}return n}},t.fn=e.prototype,t.unique=function(e){for(var t=[],i=0;i<e.length;i++)t.indexOf(e[i])===-1&&t.push(e[i]);return t},t}()),s=["jQuery","Zepto","Dom7"],r=0;r<s.length;r++)window[s[r]]&&e(window[s[r]]);var a;a="undefined"==typeof n?window.Dom7||window.Zepto||window.jQuery:n,a&&("transitionEnd"in a.fn||(a.fn.transitionEnd=function(e){function t(r){if(r.target===this)for(e.call(this,r),i=0;i<n.length;i++)s.off(n[i],t)}var i,n=["webkitTransitionEnd","transitionend","oTransitionEnd","MSTransitionEnd","msTransitionEnd"],s=this;if(e)for(i=0;i<n.length;i++)s.on(n[i],t);return this}),"transform"in a.fn||(a.fn.transform=function(e){for(var t=0;t<this.length;t++){var i=this[t].style;i.webkitTransform=i.MsTransform=i.msTransform=i.MozTransform=i.OTransform=i.transform=e}return this}),"transition"in a.fn||(a.fn.transition=function(e){"string"!=typeof e&&(e+="ms");for(var t=0;t<this.length;t++){var i=this[t].style;i.webkitTransitionDuration=i.MsTransitionDuration=i.msTransitionDuration=i.MozTransitionDuration=i.OTransitionDuration=i.transitionDuration=e}return this}),"outerWidth"in a.fn||(a.fn.outerWidth=function(e){return this.length>0?e?this[0].offsetWidth+parseFloat(this.css("margin-right"))+parseFloat(this.css("margin-left")):this[0].offsetWidth:null})),window.Swiper=i}(),"undefined"!=typeof module?module.exports=window.Swiper:"function"==typeof define&&define.amd&&define([],function(){"use strict";return window.Swiper})}),function(e){var t,i,n,s,r,a,o,l="Close",p="BeforeClose",c="AfterClose",u="BeforeAppend",d="MarkupParse",h="Open",f="Change",m="mfp",g="."+m,v="mfp-ready",y="mfp-removing",w="mfp-prevent-close",b=function(){},x=!!window.jQuery,T=e(window),C=function(e,i){t.ev.on(m+e+g,i)},S=function(t,i,n,s){var r=document.createElement("div");return r.className="mfp-"+t,n&&(r.innerHTML=n),s?i&&i.appendChild(r):(r=e(r),i&&r.appendTo(i)),r},E=function(i,n){t.ev.triggerHandler(m+i,n),t.st.callbacks&&(i=i.charAt(0).toLowerCase()+i.slice(1),t.st.callbacks[i]&&t.st.callbacks[i].apply(t,e.isArray(n)?n:[n]))},_=function(i){return i===o&&t.currTemplate.closeBtn||(t.currTemplate.closeBtn=e(t.st.closeMarkup.replace("%title%",t.st.tClose)),o=i),t.currTemplate.closeBtn},k=function(){e.magnificPopup.instance||(t=new b,t.init(),e.magnificPopup.instance=t)},M=function(){var e=document.createElement("p").style,t=["ms","O","Moz","Webkit"];if(void 0!==e.transition)return!0;for(;t.length;)if(t.pop()+"Transition"in e)return!0;return!1};b.prototype={constructor:b,init:function(){var i=navigator.appVersion;t.isIE7=i.indexOf("MSIE 7.")!==-1,t.isIE8=i.indexOf("MSIE 8.")!==-1,t.isLowIE=t.isIE7||t.isIE8,t.isAndroid=/android/gi.test(i),t.isIOS=/iphone|ipad|ipod/gi.test(i),t.supportsTransition=M(),t.probablyMobile=t.isAndroid||t.isIOS||/(Opera Mini)|Kindle|webOS|BlackBerry|(Opera Mobi)|(Windows Phone)|IEMobile/i.test(navigator.userAgent),n=e(document.body),s=e(document),t.popupsCache={}},open:function(i){var n;if(i.isObj===!1){t.items=i.items.toArray(),t.index=0;var r,o=i.items;for(n=0;n<o.length;n++)if(r=o[n],r.parsed&&(r=r.el[0]),r===i.el[0]){t.index=n;break}}else t.items=e.isArray(i.items)?i.items:[i.items],t.index=i.index||0;if(t.isOpen)return void t.updateItemHTML();t.types=[],a="",i.mainEl&&i.mainEl.length?t.ev=i.mainEl.eq(0):t.ev=s,i.key?(t.popupsCache[i.key]||(t.popupsCache[i.key]={}),t.currTemplate=t.popupsCache[i.key]):t.currTemplate={},t.st=e.extend(!0,{},e.magnificPopup.defaults,i),t.fixedContentPos="auto"===t.st.fixedContentPos?!t.probablyMobile:t.st.fixedContentPos,t.st.modal&&(t.st.closeOnContentClick=!1,t.st.closeOnBgClick=!1,t.st.showCloseBtn=!1,t.st.enableEscapeKey=!1),t.bgOverlay||(t.bgOverlay=S("bg").on("click"+g,function(){t.close()}),t.wrap=S("wrap").attr("tabindex",-1).on("click"+g,function(e){t._checkIfClose(e.target)&&t.close()}),t.container=S("container",t.wrap)),t.contentContainer=S("content"),t.st.preloader&&(t.preloader=S("preloader",t.container,t.st.tLoading));var l=e.magnificPopup.modules;for(n=0;n<l.length;n++){var p=l[n];p=p.charAt(0).toUpperCase()+p.slice(1),t["init"+p].call(t)}E("BeforeOpen"),t.st.showCloseBtn&&(t.st.closeBtnInside?(C(d,function(e,t,i,n){i.close_replaceWith=_(n.type)}),a+=" error-btn-in"):t.wrap.append(_())),t.st.alignTop&&(a+=" mfp-align-top"),t.fixedContentPos?t.wrap.css({
overflow:t.st.overflowY,overflowX:"hidden",overflowY:t.st.overflowY}):t.wrap.css({top:T.scrollTop(),position:"absolute"}),(t.st.fixedBgPos===!1||"auto"===t.st.fixedBgPos&&!t.fixedContentPos)&&t.bgOverlay.css({height:s.height(),position:"absolute"}),t.st.enableEscapeKey&&s.on("keyup"+g,function(e){27===e.keyCode&&t.close()}),T.on("resize"+g,function(){t.updateSize()}),t.st.closeOnContentClick||(a+=" mfp-auto-cursor"),a&&t.wrap.addClass(a);var c=t.wH=T.height(),u={};if(t.fixedContentPos&&t._hasScrollBar(c)){var f=t._getScrollbarSize();f&&(u.marginRight=f)}t.fixedContentPos&&(t.isIE7?e("body, html").css("overflow","hidden"):u.overflow="hidden");var m=t.st.mainClass;return t.isIE7&&(m+=" mfp-ie7"),m&&t._addClassToMFP(m),t.updateItemHTML(),E("BuildControls"),e("html").css(u),t.bgOverlay.add(t.wrap).prependTo(document.body),t._lastFocusedEl=document.activeElement,setTimeout(function(){t.content?(t._addClassToMFP(v),t._setFocus()):t.bgOverlay.addClass(v),s.on("focusin"+g,t._onFocusIn)},16),t.isOpen=!0,t.updateSize(c),E(h),i},close:function(){t.isOpen&&(E(p),t.isOpen=!1,t.st.removalDelay&&!t.isLowIE&&t.supportsTransition?(t._addClassToMFP(y),setTimeout(function(){t._close()},t.st.removalDelay)):t._close())},_close:function(){E(l);var i=y+" "+v+" ";if(t.bgOverlay.detach(),t.wrap.detach(),t.container.empty(),t.st.mainClass&&(i+=t.st.mainClass+" "),t._removeClassFromMFP(i),t.fixedContentPos){var n={marginRight:""};t.isIE7?e("body, html").css("overflow",""):n.overflow="",e("html").css(n)}s.off("keyup"+g+" focusin"+g),t.ev.off(g),t.wrap.attr("class","mfp-wrap").removeAttr("style"),t.bgOverlay.attr("class","mfp-bg"),t.container.attr("class","mfp-container"),!t.st.showCloseBtn||t.st.closeBtnInside&&t.currTemplate[t.currItem.type]!==!0||t.currTemplate.closeBtn&&t.currTemplate.closeBtn.detach(),t._lastFocusedEl&&e(t._lastFocusedEl).focus(),t.currItem=null,t.content=null,t.currTemplate=null,t.prevHeight=0,E(c)},updateSize:function(e){if(t.isIOS){var i=document.documentElement.clientWidth/window.innerWidth,n=window.innerHeight*i;t.wrap.css("height",n),t.wH=n}else t.wH=e||T.height();t.fixedContentPos||t.wrap.css("height",t.wH),E("Resize")},updateItemHTML:function(){var i=t.items[t.index];t.contentContainer.detach(),t.content&&t.content.detach(),i.parsed||(i=t.parseEl(t.index));var n=i.type;if(E("BeforeChange",[t.currItem?t.currItem.type:"",n]),t.currItem=i,!t.currTemplate[n]){var s=!!t.st[n]&&t.st[n].markup;E("FirstMarkupParse",s),s?t.currTemplate[n]=e(s):t.currTemplate[n]=!0}r&&r!==i.type&&t.container.removeClass("mfp-"+r+"-holder");var a=t["get"+n.charAt(0).toUpperCase()+n.slice(1)](i,t.currTemplate[n]);t.appendContent(a,n),i.preloaded=!0,E(f,i),r=i.type,t.container.prepend(t.contentContainer),E("AfterChange")},appendContent:function(e,i){t.content=e,e?t.st.showCloseBtn&&t.st.closeBtnInside&&t.currTemplate[i]===!0?t.content.find(".error").length||t.content.append(_()):t.content=e:t.content="",E(u),t.container.addClass("mfp-"+i+"-holder"),t.contentContainer.append(t.content)},parseEl:function(i){var n=t.items[i],s=n.type;if(n=n.tagName?{el:e(n)}:{data:n,src:n.src},n.el){for(var r=t.types,a=0;a<r.length;a++)if(n.el.hasClass("mfp-"+r[a])){s=r[a];break}n.src=n.el.attr("data-mfp-src"),n.src||(n.src=n.el.attr("href"))}return n.type=s||t.st.type||"inline",n.index=i,n.parsed=!0,t.items[i]=n,E("ElementParse",n),t.items[i]},addGroup:function(e,i){var n=function(n){n.mfpEl=this,t._openClick(n,e,i)};i||(i={});var s="click.magnificPopup";i.mainEl=e,i.items?(i.isObj=!0,e.off(s).on(s,n)):(i.isObj=!1,i.delegate?e.off(s).on(s,i.delegate,n):(i.items=e,e.off(s).on(s,n)))},_openClick:function(i,n,s){var r=void 0!==s.midClick?s.midClick:e.magnificPopup.defaults.midClick;if(r||2!==i.which&&!i.ctrlKey&&!i.metaKey){var a=void 0!==s.disableOn?s.disableOn:e.magnificPopup.defaults.disableOn;if(a)if(e.isFunction(a)){if(!a.call(t))return!0}else if(T.width()<a)return!0;i.type&&(i.preventDefault(),t.isOpen&&i.stopPropagation()),s.el=e(i.mfpEl),s.delegate&&(s.items=n.find(s.delegate)),t.open(s)}},updateStatus:function(e,n){if(t.preloader){i!==e&&t.container.removeClass("mfp-s-"+i),n||"loading"!==e||(n=t.st.tLoading);var s={status:e,text:n};E("UpdateStatus",s),e=s.status,n=s.text,t.preloader.html(n),t.preloader.find("a").on("click",function(e){e.stopImmediatePropagation()}),t.container.addClass("mfp-s-"+e),i=e}},_checkIfClose:function(i){if(!e(i).hasClass(w)){var n=t.st.closeOnContentClick,s=t.st.closeOnBgClick;if(n&&s)return!0;if(!t.content||e(i).hasClass("error")||t.preloader&&i===t.preloader[0])return!0;if(i===t.content[0]||e.contains(t.content[0],i)){if(n)return!0}else if(s&&e.contains(document,i))return!0;return!1}},_addClassToMFP:function(e){t.bgOverlay.addClass(e),t.wrap.addClass(e)},_removeClassFromMFP:function(e){this.bgOverlay.removeClass(e),t.wrap.removeClass(e)},_hasScrollBar:function(e){return(t.isIE7?s.height():document.body.scrollHeight)>(e||T.height())},_setFocus:function(){(t.st.focus?t.content.find(t.st.focus).eq(0):t.wrap).focus()},_onFocusIn:function(i){if(i.target!==t.wrap[0]&&!e.contains(t.wrap[0],i.target))return t._setFocus(),!1},_parseMarkup:function(t,i,n){var s;n.data&&(i=e.extend(n.data,i)),E(d,[t,i,n]),e.each(i,function(e,i){if(void 0===i||i===!1)return!0;if(s=e.split("_"),s.length>1){var n=t.find(g+"-"+s[0]);if(n.length>0){var r=s[1];"replaceWith"===r?n[0]!==i[0]&&n.replaceWith(i):"img"===r?n.is("img")?n.attr("src",i):n.replaceWith('<img src="'+i+'" class="'+n.attr("class")+'" />'):n.attr(s[1],i)}}else t.find(g+"-"+e).html(i)})},_getScrollbarSize:function(){if(void 0===t.scrollbarSize){var e=document.createElement("div");e.id="mfp-sbm",e.style.cssText="width: 99px; height: 99px; overflow: scroll; position: absolute; top: -9999px;",document.body.appendChild(e),t.scrollbarSize=e.offsetWidth-e.clientWidth,document.body.removeChild(e)}return t.scrollbarSize}},e.magnificPopup={instance:null,proto:b.prototype,modules:[],open:function(t,i){return k(),t=t?e.extend(!0,{},t):{},t.isObj=!0,t.index=i||0,this.instance.open(t)},close:function(){return e.magnificPopup.instance&&e.magnificPopup.instance.close()},registerModule:function(t,i){i.options&&(e.magnificPopup.defaults[t]=i.options),e.extend(this.proto,i.proto),this.modules.push(t)},defaults:{disableOn:0,key:null,midClick:!1,mainClass:"",preloader:!0,focus:"",closeOnContentClick:!1,closeOnBgClick:!0,closeBtnInside:!0,showCloseBtn:!0,enableEscapeKey:!0,modal:!1,alignTop:!1,removalDelay:0,fixedContentPos:"auto",fixedBgPos:"auto",overflowY:"auto",closeMarkup:'<button title="%title%" type="button" class="error">&times;</button>',tClose:"Close (Esc)",tLoading:"Loading..."}},e.fn.magnificPopup=function(i){k();var n=e(this);if("string"==typeof i)if("open"===i){var s,r=x?n.data("magnificPopup"):n[0].magnificPopup,a=parseInt(arguments[1],10)||0;r.items?s=r.items[a]:(s=n,r.delegate&&(s=s.find(r.delegate)),s=s.eq(a)),t._openClick({mfpEl:s},n,r)}else t.isOpen&&t[i].apply(t,Array.prototype.slice.call(arguments,1));else i=e.extend(!0,{},i),x?n.data("magnificPopup",i):n[0].magnificPopup=i,t.addGroup(n,i);return n};var z,I,D,P="inline",$=function(){D&&(I.after(D.addClass(z)).detach(),D=null)};e.magnificPopup.registerModule(P,{options:{hiddenClass:"hide",markup:"",tNotFound:"Content not found"},proto:{initInline:function(){t.types.push(P),C(l+"."+P,function(){$()})},getInline:function(i,n){if($(),i.src){var s=t.st.inline,r=e(i.src);if(r.length){var a=r[0].parentNode;a&&a.tagName&&(I||(z=s.hiddenClass,I=S(z),z="mfp-"+z),D=r.after(I).detach().removeClass(z)),t.updateStatus("ready")}else t.updateStatus("error",s.tNotFound),r=e("<div>");return i.inlineElement=r,r}return t.updateStatus("ready"),t._parseMarkup(n,{},i),n}}});var A,L="ajax",N=function(){A&&n.removeClass(A)},O=function(){N(),t.req&&t.req.abort()};e.magnificPopup.registerModule(L,{options:{settings:null,cursor:"mfp-ajax-cur",tError:'<a href="%url%">The content</a> could not be loaded.'},proto:{initAjax:function(){t.types.push(L),A=t.st.ajax.cursor,C(l+"."+L,O),C("BeforeChange."+L,O)},getAjax:function(i){A&&n.addClass(A),t.updateStatus("loading");var s=e.extend({url:i.src,success:function(n,s,r){var a={data:n,xhr:r};E("ParseAjax",a),t.appendContent(e(a.data),L),i.finished=!0,N(),t._setFocus(),setTimeout(function(){t.wrap.addClass(v)},16),t.updateStatus("ready"),E("AjaxContentAdded")},error:function(){N(),i.finished=i.loadError=!0,t.updateStatus("error",t.st.ajax.tError.replace("%url%",i.src))}},t.st.ajax.settings);return t.req=e.ajax(s),""}}});var H,B=function(i){if(i.data&&void 0!==i.data.title)return i.data.title;var n=t.st.image.titleSrc;if(n){if(e.isFunction(n))return n.call(t,i);if(i.el)return i.el.attr(n)||""}return""};e.magnificPopup.registerModule("image",{options:{markup:'<div class="mfp-figure"><div class="error"></div><figure><div class="mfp-img"></div><figcaption><div class="mfp-bottom-bar"><div class="mfp-title"></div><div class="mfp-counter"></div></div></figcaption></figure></div>',cursor:"mfp-zoom-out-cur",titleSrc:"title",verticalFit:!0,tError:'<a href="%url%">The image</a> could not be loaded.'},proto:{initImage:function(){var e=t.st.image,i=".image";t.types.push("image"),C(h+i,function(){"image"===t.currItem.type&&e.cursor&&n.addClass(e.cursor)}),C(l+i,function(){e.cursor&&n.removeClass(e.cursor),T.off("resize"+g)}),C("Resize"+i,t.resizeImage),t.isLowIE&&C("AfterChange",t.resizeImage)},resizeImage:function(){var e=t.currItem;if(e&&e.img&&t.st.image.verticalFit){var i=0;t.isLowIE&&(i=parseInt(e.img.css("padding-top"),10)+parseInt(e.img.css("padding-bottom"),10)),e.img.css("max-height",t.wH-i)}},_onImageHasSize:function(e){e.img&&(e.hasSize=!0,H&&clearInterval(H),e.isCheckingImgSize=!1,E("ImageHasSize",e),e.imgHidden&&(t.content&&t.content.removeClass("mfp-loading"),e.imgHidden=!1))},findImageSize:function(e){var i=0,n=e.img[0],s=function(r){H&&clearInterval(H),H=setInterval(function(){return n.naturalWidth>0?void t._onImageHasSize(e):(i>200&&clearInterval(H),i++,void(3===i?s(10):40===i?s(50):100===i&&s(500)))},r)};s(1)},getImage:function(i,n){var s=0,r=function(){i&&(i.img[0].complete?(i.img.off(".mfploader"),i===t.currItem&&(t._onImageHasSize(i),t.updateStatus("ready")),i.hasSize=!0,i.loaded=!0,E("ImageLoadComplete")):(s++,s<200?setTimeout(r,100):a()))},a=function(){i&&(i.img.off(".mfploader"),i===t.currItem&&(t._onImageHasSize(i),t.updateStatus("error",o.tError.replace("%url%",i.src))),i.hasSize=!0,i.loaded=!0,i.loadError=!0)},o=t.st.image,l=n.find(".mfp-img");if(l.length){var p=document.createElement("img");p.className="mfp-img",i.img=e(p).on("load.mfploader",r).on("error.mfploader",a),p.src=i.src,l.is("img")&&(i.img=i.img.clone()),i.img[0].naturalWidth>0&&(i.hasSize=!0)}return t._parseMarkup(n,{title:B(i),img_replaceWith:i.img},i),t.resizeImage(),i.hasSize?(H&&clearInterval(H),i.loadError?(n.addClass("mfp-loading"),t.updateStatus("error",o.tError.replace("%url%",i.src))):(n.removeClass("mfp-loading"),t.updateStatus("ready")),n):(t.updateStatus("loading"),i.loading=!0,i.hasSize||(i.imgHidden=!0,n.addClass("mfp-loading"),t.findImageSize(i)),n)}}});var j,R=function(){return void 0===j&&(j=void 0!==document.createElement("p").style.MozTransform),j};e.magnificPopup.registerModule("zoom",{options:{enabled:!1,easing:"ease-in-out",duration:300,opener:function(e){return e.is("img")?e:e.find("img")}},proto:{initZoom:function(){var e,i=t.st.zoom,n=".zoom";if(i.enabled&&t.supportsTransition){var s,r,a=i.duration,o=function(e){var t=e.clone().removeAttr("style").removeAttr("class").addClass("mfp-animated-image"),n="all "+i.duration/1e3+"s "+i.easing,s={position:"fixed",zIndex:9999,left:0,top:0,"-webkit-backface-visibility":"hidden"},r="transition";return s["-webkit-"+r]=s["-moz-"+r]=s["-o-"+r]=s[r]=n,t.css(s),t},c=function(){t.content.css("visibility","visible")};C("BuildControls"+n,function(){if(t._allowZoom()){if(clearTimeout(s),t.content.css("visibility","hidden"),e=t._getItemToZoom(),!e)return void c();r=o(e),r.css(t._getOffset()),t.wrap.append(r),s=setTimeout(function(){r.css(t._getOffset(!0)),s=setTimeout(function(){c(),setTimeout(function(){r.remove(),e=r=null,E("ZoomAnimationEnded")},16)},a)},16)}}),C(p+n,function(){if(t._allowZoom()){if(clearTimeout(s),t.st.removalDelay=a,!e){if(e=t._getItemToZoom(),!e)return;r=o(e)}r.css(t._getOffset(!0)),t.wrap.append(r),t.content.css("visibility","hidden"),setTimeout(function(){r.css(t._getOffset())},16)}}),C(l+n,function(){t._allowZoom()&&(c(),r&&r.remove(),e=null)})}},_allowZoom:function(){return"image"===t.currItem.type},_getItemToZoom:function(){return!!t.currItem.hasSize&&t.currItem.img},_getOffset:function(i){var n;n=i?t.currItem.img:t.st.zoom.opener(t.currItem.el||t.currItem);var s=n.offset(),r=parseInt(n.css("padding-top"),10),a=parseInt(n.css("padding-bottom"),10);s.top-=e(window).scrollTop()-r;var o={width:n.width(),height:(x?n.innerHeight():n[0].offsetHeight)-a-r};return R()?o["-moz-transform"]=o.transform="translate("+s.left+"px,"+s.top+"px)":(o.left=s.left,o.top=s.top),o}}});var F="iframe",W="//about:blank",q=function(e){if(t.currTemplate[F]){var i=t.currTemplate[F].find("iframe");i.length&&(e||(i[0].src=W),t.isIE8&&i.css("display",e?"block":"none"))}};e.magnificPopup.registerModule(F,{options:{markup:'<div class="mfp-iframe-scaler"><div class="error"></div><iframe class="mfp-iframe" src="//about:blank" frameborder="0" allowfullscreen></iframe></div>',srcAction:"iframe_src",patterns:{youtube:{index:"youtube.com",id:"v=",src:"//www.youtube.com/embed/%id%?autoplay=1"},vimeo:{index:"vimeo.com/",id:"/",src:"//player.vimeo.com/video/%id%?autoplay=1"},gmaps:{index:"//maps.google.",src:"%id%&output=embed"}}},proto:{initIframe:function(){t.types.push(F),C("BeforeChange",function(e,t,i){t!==i&&(t===F?q():i===F&&q(!0))}),C(l+"."+F,function(){q()})},getIframe:function(i,n){var s=i.src,r=t.st.iframe;e.each(r.patterns,function(){if(s.indexOf(this.index)>-1)return this.id&&(s="string"==typeof this.id?s.substr(s.lastIndexOf(this.id)+this.id.length,s.length):this.id.call(this,s)),s=this.src.replace("%id%",s),!1});var a={};return r.srcAction&&(a[r.srcAction]=s),t._parseMarkup(n,a,i),t.updateStatus("ready"),n}}});var X=function(e){var i=t.items.length;return e>i-1?e-i:e<0?i+e:e},G=function(e,t,i){return e.replace(/%curr%/gi,t+1).replace(/%total%/gi,i)};e.magnificPopup.registerModule("gallery",{options:{enabled:!1,arrowMarkup:'<button title="%title%" type="button" class="mfp-arrow mfp-arrow-%dir%"></button>',preload:[0,2],navigateByImgClick:!0,arrows:!0,tPrev:"Previous (Left arrow key)",tNext:"Next (Right arrow key)",tCounter:"%curr% of %total%"},proto:{initGallery:function(){var i=t.st.gallery,n=".mfp-gallery",r=Boolean(e.fn.mfpFastClick);return t.direction=!0,!(!i||!i.enabled)&&(a+=" mfp-gallery",C(h+n,function(){i.navigateByImgClick&&t.wrap.on("click"+n,".mfp-img",function(){if(t.items.length>1)return t.next(),!1}),s.on("keydown"+n,function(e){37===e.keyCode?t.prev():39===e.keyCode&&t.next()})}),C("UpdateStatus"+n,function(e,i){i.text&&(i.text=G(i.text,t.currItem.index,t.items.length))}),C(d+n,function(e,n,s,r){var a=t.items.length;s.counter=a>1?G(i.tCounter,r.index,a):""}),C("BuildControls"+n,function(){if(t.items.length>1&&i.arrows&&!t.arrowLeft){var n=i.arrowMarkup,s=t.arrowLeft=e(n.replace(/%title%/gi,i.tPrev).replace(/%dir%/gi,"left")).addClass(w),a=t.arrowRight=e(n.replace(/%title%/gi,i.tNext).replace(/%dir%/gi,"right")).addClass(w),o=r?"mfpFastClick":"click";s[o](function(){t.prev()}),a[o](function(){t.next()}),t.isIE7&&(S("b",s[0],!1,!0),S("a",s[0],!1,!0),S("b",a[0],!1,!0),S("a",a[0],!1,!0)),t.container.append(s.add(a))}}),C(f+n,function(){t._preloadTimeout&&clearTimeout(t._preloadTimeout),t._preloadTimeout=setTimeout(function(){t.preloadNearbyImages(),t._preloadTimeout=null},16)}),void C(l+n,function(){s.off(n),t.wrap.off("click"+n),t.arrowLeft&&r&&t.arrowLeft.add(t.arrowRight).destroyMfpFastClick(),t.arrowRight=t.arrowLeft=null}))},next:function(){t.direction=!0,t.index=X(t.index+1),t.updateItemHTML()},prev:function(){t.direction=!1,t.index=X(t.index-1),t.updateItemHTML()},goTo:function(e){t.direction=e>=t.index,t.index=e,t.updateItemHTML()},preloadNearbyImages:function(){var e,i=t.st.gallery.preload,n=Math.min(i[0],t.items.length),s=Math.min(i[1],t.items.length);for(e=1;e<=(t.direction?s:n);e++)t._preloadItem(t.index+e);for(e=1;e<=(t.direction?n:s);e++)t._preloadItem(t.index-e)},_preloadItem:function(i){if(i=X(i),!t.items[i].preloaded){var n=t.items[i];n.parsed||(n=t.parseEl(i)),E("LazyLoad",n),"image"===n.type&&(n.img=e('<img class="mfp-img" />').on("load.mfploader",function(){n.hasSize=!0}).on("error.mfploader",function(){n.hasSize=!0,n.loadError=!0,E("LazyLoadError",n)}).attr("src",n.src)),n.preloaded=!0}}}});var Y="retina";e.magnificPopup.registerModule(Y,{options:{replaceSrc:function(e){return e.src.replace(/\.\w+$/,function(e){return"@2x"+e})},ratio:1},proto:{initRetina:function(){if(window.devicePixelRatio>1){var e=t.st.retina,i=e.ratio;i=isNaN(i)?i():i,i>1&&(C("ImageHasSize."+Y,function(e,t){t.img.css({"max-width":t.img[0].naturalWidth/i,width:"100%"})}),C("ElementParse."+Y,function(t,n){n.src=e.replaceSrc(n,i)}))}}}}),function(){var t=1e3,i="ontouchstart"in window,n=function(){T.off("touchmove"+r+" touchend"+r)},s="mfpFastClick",r="."+s;e.fn.mfpFastClick=function(s){return e(this).each(function(){var a,o=e(this);if(i){var l,p,c,u,d,h;o.on("touchstart"+r,function(e){u=!1,h=1,d=e.originalEvent?e.originalEvent.touches[0]:e.touches[0],p=d.clientX,c=d.clientY,T.on("touchmove"+r,function(e){d=e.originalEvent?e.originalEvent.touches:e.touches,h=d.length,d=d[0],(Math.abs(d.clientX-p)>10||Math.abs(d.clientY-c)>10)&&(u=!0,n())}).on("touchend"+r,function(e){n(),u||h>1||(a=!0,e.preventDefault(),clearTimeout(l),l=setTimeout(function(){a=!1},t),s())})})}o.on("click"+r,function(){a||s()})})},e.fn.destroyMfpFastClick=function(){e(this).off("touchstart"+r+" click"+r),i&&T.off("touchmove"+r+" touchend"+r)}}(),k()}(window.jQuery||window.Zepto),function(e){"function"==typeof define&&define.amd?define(["jquery"],e):e(window.jQuery||window.Zepto)}(function(e){var t=function(t,i,n){var s,r,a=this;t=e(t),i="function"==typeof i?i(t.val(),void 0,t,n):i;var o={getCaret:function(){try{var e,i=0,n=t.get(0),s=document.selection,r=n.selectionStart;return s&&!~navigator.appVersion.indexOf("MSIE 10")?(e=s.createRange(),e.moveStart("character",t.is("input")?-t.val().length:-t.text().length),i=e.text.length):(r||"0"===r)&&(i=r),i}catch(e){}},setCaret:function(e){try{if(t.is(":focus")){var i,n=t.get(0);n.setSelectionRange?n.setSelectionRange(e,e):n.createTextRange&&(i=n.createTextRange(),i.collapse(!0),i.moveEnd("character",e),i.moveStart("character",e),i.select())}}catch(e){}},events:function(){t.on("keydown.mask",function(){s=o.val()}).on("keyup.mask",o.behaviour).on("paste.mask drop.mask",function(){setTimeout(function(){t.keydown().keyup()},100)}).on("change.mask",function(){t.data("changed",!0)}).on("blur.mask",function(){s===t.val()||t.data("changed")||t.trigger("change"),t.data("changed",!1)}).on("focusout.mask",function(){n.clearIfNotMatch&&!r.test(o.val())&&o.val("")})},getRegexMask:function(){for(var e,t,n,s,r=[],o=0;o<i.length;o++)(e=a.translation[i[o]])?(t=e.pattern.toString().replace(/.{1}$|^.{1}/g,""),n=e.optional,(e=e.recursive)?(r.push(i[o]),s={digit:i[o],pattern:t}):r.push(n||e?t+"?":t)):r.push(i[o].replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&"));return r=r.join(""),s&&(r=r.replace(new RegExp("("+s.digit+"(.*"+s.digit+")?)"),"($1)?").replace(new RegExp(s.digit,"g"),s.pattern)),new RegExp(r)},destroyEvents:function(){t.off("keydown keyup paste drop change blur focusout DOMNodeInserted ".split(" ").join(".mask ")).removeData("changeCalled")},val:function(e){var i=t.is("input");return 0<arguments.length?i?t.val(e):t.text(e):i?t.val():t.text()},getMCharsBeforeCount:function(e,t){for(var n=0,s=0,r=i.length;s<r&&s<e;s++)a.translation[i.charAt(s)]||(e=t?e+1:e,n++);return n},caretPos:function(e,t,n,s){return a.translation[i.charAt(Math.min(e-1,i.length-1))]?Math.min(e+n-t-s,n):o.caretPos(e+1,t,n,s)},behaviour:function(t){t=t||window.event;var i=t.keyCode||t.which;if(-1===e.inArray(i,a.byPassKeys)){var n=o.getCaret(),s=o.val(),r=s.length,l=n<r,p=o.getMasked(),c=p.length,u=o.getMCharsBeforeCount(c-1)-o.getMCharsBeforeCount(r-1);return p!==s&&o.val(p),!l||65===i&&t.ctrlKey||(8!==i&&46!==i&&(n=o.caretPos(n,r,c,u)),o.setCaret(n)),o.callbacks(t)}},getMasked:function(e){var t,s,r=[],l=o.val(),p=0,c=i.length,u=0,d=l.length,h=1,f="push",m=-1;for(n.reverse?(f="unshift",h=-1,t=0,p=c-1,u=d-1,s=function(){return-1<p&&-1<u}):(t=c-1,s=function(){return p<c&&u<d});s();){var g=i.charAt(p),v=l.charAt(u),y=a.translation[g];y?(v.match(y.pattern)?(r[f](v),y.recursive&&(-1===m?m=p:p===t&&(p=m-h),t===m&&(p-=h)),p+=h):y.optional&&(p+=h,u-=h),u+=h):(e||r[f](g),v===g&&(u+=h),p+=h)}return e=i.charAt(t),c!==d+1||a.translation[e]||r.push(e),r.join("")},callbacks:function(e){var r=o.val(),a=r!==s;!0===a&&"function"==typeof n.onChange&&n.onChange(r,e,t,n),!0===a&&"function"==typeof n.onKeyPress&&n.onKeyPress(r,e,t,n),"function"==typeof n.onComplete&&r.length===i.length&&n.onComplete(r,e,t,n)}};a.mask=i,a.options=n,a.remove=function(){var e;return o.destroyEvents(),o.val(a.getCleanVal()).removeAttr("maxlength"),e=o.getCaret(),o.setCaret(e-o.getMCharsBeforeCount(e)),t},a.getCleanVal=function(){return o.getMasked(!0)},a.init=function(){n=n||{},a.byPassKeys=[9,16,17,18,36,37,38,39,40,91],a.translation={0:{pattern:/\d/},9:{pattern:/\d/,optional:!0},"#":{pattern:/\d/,recursive:!0},A:{pattern:/[a-zA-Z0-9]/},S:{pattern:/[a-zA-Z]/}},a.translation=e.extend({},a.translation,n.translation),a=e.extend(!0,{},a,n),r=o.getRegexMask(),!1!==n.maxlength&&t.attr("maxlength",i.length),n.placeholder&&t.attr("placeholder",n.placeholder),t.attr("autocomplete","off"),o.destroyEvents(),o.events();var s=o.getCaret();o.val(o.getMasked()),o.setCaret(s+o.getMCharsBeforeCount(s,!0))}()},i={},n=function(){var t=e(this),i={};t.attr("data-mask-reverse")&&(i.reverse=!0),"false"===t.attr("data-mask-maxlength")&&(i.maxlength=!1),t.attr("data-mask-clearifnotmatch")&&(i.clearIfNotMatch=!0),t.mask(t.attr("data-mask"),i)};e.fn.mask=function(n,s){var r=this.selector,a=function(){var i=e(this).data("mask"),r=JSON.stringify;if("object"!=typeof i||r(i.options)!==r(s)||i.mask!==n)return e(this).data("mask",new t(this,n,s))};this.each(a),r&&!i[r]&&(i[r]=!0,setTimeout(function(){e(document).on("DOMNodeInserted.mask",r,a)},500))},e.fn.unmask=function(){try{return this.each(function(){e(this).data("mask").remove().removeData("mask")})}catch(e){}},e.fn.cleanVal=function(){return this.data("mask").getCleanVal()},e("*[data-mask]").each(n),e(document).on("DOMNodeInserted.mask","*[data-mask]",n)}),window.onload=function(){new Swiper(".swiper-container",{pagination:".swiper-pagination",nextButton:".swiper-button-next",prevButton:".swiper-button-prev",paginationClickable:!0,spaceBetween:30,centeredSlides:!0,autoplay:4e3,autoplayDisableOnInteraction:!1}),new Swiper(".swiper-container1",{pagination:".swiper-pagination",slidesPerView:"3",centeredSlides:!0,paginationClickable:!0,spaceBetween:30})};var map,styles={default:null,silver:[{elementType:"geometry",stylers:[{color:"#000000"}]},{elementType:"labels.text.fill",stylers:[{color:"#ffffff"}]},{elementType:"labels.text.stroke",stylers:[{color:"#626262"}]},{featureType:"administrative.country",elementType:"geometry.stroke",stylers:[{color:"#ffffff"}]},{featureType:"administrative.land_parcel",elementType:"labels.text.fill",stylers:[{color:"#ffffff"}]},{featureType:"administrative.province",elementType:"geometry.stroke",stylers:[{color:"#4b6878"}]},{featureType:"landscape.man_made",elementType:"geometry.fill",stylers:[{color:"#000000"}]},{featureType:"landscape.man_made",elementType:"geometry.stroke",stylers:[{color:"#828282"}]},{featureType:"landscape.natural",elementType:"geometry",stylers:[{color:"#004800"}]},{featureType:"landscape.natural.landcover",elementType:"geometry.fill",stylers:[{color:"#ffffff"}]},{featureType:"poi",elementType:"geometry",stylers:[{color:"#454545"}]},{featureType:"poi",elementType:"geometry.fill",stylers:[{color:"#4b4b4b"}]},{featureType:"poi",elementType:"labels.text.fill",stylers:[{color:"#ffffff"}]},{featureType:"poi",elementType:"labels.text.stroke",stylers:[{color:"#242424"}]},{featureType:"poi.park",elementType:"geometry.fill",stylers:[{color:"#002f17"}]},{featureType:"poi.park",elementType:"labels.text.fill",stylers:[{color:"#3C7680"}]},{featureType:"road",elementType:"geometry",stylers:[{color:"#616161"}]},{featureType:"road",elementType:"labels.text.fill",stylers:[{color:"#ffffff"}]},{featureType:"road",elementType:"labels.text.stroke",stylers:[{color:"#2e2e2e"}]},{featureType:"road.arterial",elementType:"geometry.fill",stylers:[{color:"#2e2e2e"}]},{featureType:"road.highway",elementType:"geometry",stylers:[{color:"#606060"}]},{featureType:"road.highway",elementType:"geometry.fill",stylers:[{color:"#4d4d4d"}]},{featureType:"road.highway",elementType:"geometry.stroke",stylers:[{color:"#c0c0c0"}]},{featureType:"road.highway",elementType:"labels.text.fill",stylers:[{color:"#c0c0c0"}]},{featureType:"road.highway",elementType:"labels.text.stroke",stylers:[{color:"#333333"}]},{featureType:"road.local",elementType:"geometry.fill",stylers:[{color:"#313131"}]},{featureType:"road.local",elementType:"geometry.stroke",stylers:[{color:"#bbbbbb"}]},{featureType:"transit",elementType:"labels.text.fill",stylers:[{color:"#98a5be"}]},{featureType:"transit",elementType:"labels.text.stroke",stylers:[{color:"#1d2c4d"}]},{featureType:"transit.line",elementType:"geometry.fill",stylers:[{color:"#727272"}]},{featureType:"transit.station",elementType:"geometry",stylers:[{color:"#c0c0c0"}]},{featureType:"water",elementType:"geometry",stylers:[{color:"#0e1626"}]},{featureType:"water",elementType:"labels.text.fill",stylers:[{color:"#4e6d70"}]}]};!function(e,t,i,n){function s(t,i){this.settings=null,this.options=e.extend({},s.Defaults,i),this.$element=e(t),this._handlers={},this._plugins={},this._supress={},this._current=null,this._speed=null,this._coordinates=[],this._breakpoint=null,this._width=null,this._items=[],this._clones=[],this._mergers=[],this._widths=[],this._invalidated={},this._pipe=[],this._drag={time:null,target:null,pointer:null,stage:{start:null,current:null},direction:null},this._states={current:{},tags:{initializing:["busy"],animating:["busy"],dragging:["interacting"]}},e.each(["onResize","onThrottledResize"],e.proxy(function(t,i){this._handlers[i]=e.proxy(this[i],this)},this)),e.each(s.Plugins,e.proxy(function(e,t){this._plugins[e.charAt(0).toLowerCase()+e.slice(1)]=new t(this)},this)),e.each(s.Workers,e.proxy(function(t,i){this._pipe.push({filter:i.filter,run:e.proxy(i.run,this)})},this)),this.setup(),this.initialize()}s.Defaults={items:3,loop:!1,center:!1,rewind:!1,mouseDrag:!0,touchDrag:!0,pullDrag:!0,freeDrag:!1,margin:0,stagePadding:0,merge:!1,mergeFit:!0,autoWidth:!1,startPosition:0,rtl:!1,smartSpeed:250,fluidSpeed:!1,dragEndSpeed:!1,responsive:{},responsiveRefreshRate:200,responsiveBaseElement:t,fallbackEasing:"swing",info:!1,nestedItemSelector:!1,itemElement:"div",stageElement:"div",refreshClass:"owl-refresh",loadedClass:"owl-loaded",loadingClass:"owl-loading",rtlClass:"owl-rtl",responsiveClass:"owl-responsive",dragClass:"owl-drag",itemClass:"owl-item",stageClass:"owl-stage",stageOuterClass:"owl-stage-outer",grabClass:"owl-grab"},s.Width={Default:"default",Inner:"inner",Outer:"outer"},s.Type={Event:"event",State:"state"},s.Plugins={},s.Workers=[{filter:["width","settings"],run:function(){this._width=this.$element.width()}},{filter:["width","items","settings"],run:function(e){e.current=this._items&&this._items[this.relative(this._current)]}},{filter:["items","settings"],run:function(){this.$stage.children(".cloned").remove()}},{filter:["width","items","settings"],run:function(e){var t=this.settings.margin||"",i=!this.settings.autoWidth,n=this.settings.rtl,s={width:"auto","margin-left":n?t:"","margin-right":n?"":t};!i&&this.$stage.children().css(s),e.css=s}},{filter:["width","items","settings"],run:function(e){var t=(this.width()/this.settings.items).toFixed(3)-this.settings.margin,i=null,n=this._items.length,s=!this.settings.autoWidth,r=[];for(e.items={merge:!1,width:t};n--;)i=this._mergers[n],i=this.settings.mergeFit&&Math.min(i,this.settings.items)||i,e.items.merge=i>1||e.items.merge,r[n]=s?t*i:this._items[n].width();this._widths=r}},{filter:["items","settings"],run:function(){var t=[],i=this._items,n=this.settings,s=Math.max(2*n.items,4),r=2*Math.ceil(i.length/2),a=n.loop&&i.length?n.rewind?s:Math.max(s,r):0,o="",l="";for(a/=2;a--;)t.push(this.normalize(t.length/2,!0)),o+=i[t[t.length-1]][0].outerHTML,t.push(this.normalize(i.length-1-(t.length-1)/2,!0)),l=i[t[t.length-1]][0].outerHTML+l;this._clones=t,e(o).addClass("cloned").appendTo(this.$stage),e(l).addClass("cloned").prependTo(this.$stage)}},{filter:["width","items","settings"],run:function(){for(var e=this.settings.rtl?1:-1,t=this._clones.length+this._items.length,i=-1,n=0,s=0,r=[];++i<t;)n=r[i-1]||0,s=this._widths[this.relative(i)]+this.settings.margin,r.push(n+s*e);this._coordinates=r}},{filter:["width","items","settings"],run:function(){var e=this.settings.stagePadding,t=this._coordinates,i={width:Math.ceil(Math.abs(t[t.length-1]))+2*e,"padding-left":e||"","padding-right":e||""};this.$stage.css(i)}},{filter:["width","items","settings"],run:function(e){var t=this._coordinates.length,i=!this.settings.autoWidth,n=this.$stage.children();if(i&&e.items.merge)for(;t--;)e.css.width=this._widths[this.relative(t)],n.eq(t).css(e.css);else i&&(e.css.width=e.items.width,n.css(e.css))}},{filter:["items"],run:function(){this._coordinates.length<1&&this.$stage.removeAttr("style")}},{filter:["width","items","settings"],run:function(e){e.current=e.current?this.$stage.children().index(e.current):0,e.current=Math.max(this.minimum(),Math.min(this.maximum(),e.current)),this.reset(e.current)}},{filter:["position"],run:function(){this.animate(this.coordinates(this._current))}},{filter:["width","position","items","settings"],run:function(){var e,t,i,n,s=this.settings.rtl?1:-1,r=2*this.settings.stagePadding,a=this.coordinates(this.current())+r,o=a+this.width()*s,l=[];for(i=0,n=this._coordinates.length;n>i;i++)e=this._coordinates[i-1]||0,t=Math.abs(this._coordinates[i])+r*s,(this.op(e,"<=",a)&&this.op(e,">",o)||this.op(t,"<",a)&&this.op(t,">",o))&&l.push(i);this.$stage.children(".active").removeClass("active"),this.$stage.children(":eq("+l.join("), :eq(")+")").addClass("active"),this.settings.center&&(this.$stage.children(".center").removeClass("center"),this.$stage.children().eq(this.current()).addClass("center"))}}],s.prototype.initialize=function(){if(this.enter("initializing"),this.trigger("initialize"),this.$element.toggleClass(this.settings.rtlClass,this.settings.rtl),this.settings.autoWidth&&!this.is("pre-loading")){var t,i,s;t=this.$element.find("img"),i=this.settings.nestedItemSelector?"."+this.settings.nestedItemSelector:n,s=this.$element.children(i).width(),t.length&&0>=s&&this.preloadAutoWidthImages(t)}this.$element.addClass(this.options.loadingClass),this.$stage=e("<"+this.settings.stageElement+' class="'+this.settings.stageClass+'"/>').wrap('<div class="'+this.settings.stageOuterClass+'"/>'),this.$element.append(this.$stage.parent()),this.replace(this.$element.children().not(this.$stage.parent())),this.$element.is(":visible")?this.refresh():this.invalidate("width"),this.$element.removeClass(this.options.loadingClass).addClass(this.options.loadedClass),this.registerEventHandlers(),this.leave("initializing"),this.trigger("initialized")},s.prototype.setup=function(){var t=this.viewport(),i=this.options.responsive,n=-1,s=null;i?(e.each(i,function(e){t>=e&&e>n&&(n=Number(e))}),s=e.extend({},this.options,i[n]),"function"==typeof s.stagePadding&&(s.stagePadding=s.stagePadding()),delete s.responsive,s.responsiveClass&&this.$element.attr("class",this.$element.attr("class").replace(new RegExp("("+this.options.responsiveClass+"-)\\S+\\s","g"),"$1"+n))):s=e.extend({},this.options),
this.trigger("change",{property:{name:"settings",value:s}}),this._breakpoint=n,this.settings=s,this.invalidate("settings"),this.trigger("changed",{property:{name:"settings",value:this.settings}})},s.prototype.optionsLogic=function(){this.settings.autoWidth&&(this.settings.stagePadding=!1,this.settings.merge=!1)},s.prototype.prepare=function(t){var i=this.trigger("prepare",{content:t});return i.data||(i.data=e("<"+this.settings.itemElement+"/>").addClass(this.options.itemClass).append(t)),this.trigger("prepared",{content:i.data}),i.data},s.prototype.update=function(){for(var t=0,i=this._pipe.length,n=e.proxy(function(e){return this[e]},this._invalidated),s={};i>t;)(this._invalidated.all||e.grep(this._pipe[t].filter,n).length>0)&&this._pipe[t].run(s),t++;this._invalidated={},!this.is("valid")&&this.enter("valid")},s.prototype.width=function(e){switch(e=e||s.Width.Default){case s.Width.Inner:case s.Width.Outer:return this._width;default:return this._width-2*this.settings.stagePadding+this.settings.margin}},s.prototype.refresh=function(){this.enter("refreshing"),this.trigger("refresh"),this.setup(),this.optionsLogic(),this.$element.addClass(this.options.refreshClass),this.update(),this.$element.removeClass(this.options.refreshClass),this.leave("refreshing"),this.trigger("refreshed")},s.prototype.onThrottledResize=function(){t.clearTimeout(this.resizeTimer),this.resizeTimer=t.setTimeout(this._handlers.onResize,this.settings.responsiveRefreshRate)},s.prototype.onResize=function(){return!!this._items.length&&(this._width!==this.$element.width()&&(!!this.$element.is(":visible")&&(this.enter("resizing"),this.trigger("resize").isDefaultPrevented()?(this.leave("resizing"),!1):(this.invalidate("width"),this.refresh(),this.leave("resizing"),void this.trigger("resized")))))},s.prototype.registerEventHandlers=function(){e.support.transition&&this.$stage.on(e.support.transition.end+".owl.core",e.proxy(this.onTransitionEnd,this)),this.settings.responsive!==!1&&this.on(t,"resize",this._handlers.onThrottledResize),this.settings.mouseDrag&&(this.$element.addClass(this.options.dragClass),this.$stage.on("mousedown.owl.core",e.proxy(this.onDragStart,this)),this.$stage.on("dragstart.owl.core selectstart.owl.core",function(){return!1})),this.settings.touchDrag&&(this.$stage.on("touchstart.owl.core",e.proxy(this.onDragStart,this)),this.$stage.on("touchcancel.owl.core",e.proxy(this.onDragEnd,this)))},s.prototype.onDragStart=function(t){var n=null;3!==t.which&&(e.support.transform?(n=this.$stage.css("transform").replace(/.*\(|\)| /g,"").split(","),n={x:n[16===n.length?12:4],y:n[16===n.length?13:5]}):(n=this.$stage.position(),n={x:this.settings.rtl?n.left+this.$stage.width()-this.width()+this.settings.margin:n.left,y:n.top}),this.is("animating")&&(e.support.transform?this.animate(n.x):this.$stage.stop(),this.invalidate("position")),this.$element.toggleClass(this.options.grabClass,"mousedown"===t.type),this.speed(0),this._drag.time=(new Date).getTime(),this._drag.target=e(t.target),this._drag.stage.start=n,this._drag.stage.current=n,this._drag.pointer=this.pointer(t),e(i).on("mouseup.owl.core touchend.owl.core",e.proxy(this.onDragEnd,this)),e(i).one("mousemove.owl.core touchmove.owl.core",e.proxy(function(t){var n=this.difference(this._drag.pointer,this.pointer(t));e(i).on("mousemove.owl.core touchmove.owl.core",e.proxy(this.onDragMove,this)),Math.abs(n.x)<Math.abs(n.y)&&this.is("valid")||(t.preventDefault(),this.enter("dragging"),this.trigger("drag"))},this)))},s.prototype.onDragMove=function(e){var t=null,i=null,n=null,s=this.difference(this._drag.pointer,this.pointer(e)),r=this.difference(this._drag.stage.start,s);this.is("dragging")&&(e.preventDefault(),this.settings.loop?(t=this.coordinates(this.minimum()),i=this.coordinates(this.maximum()+1)-t,r.x=((r.x-t)%i+i)%i+t):(t=this.settings.rtl?this.coordinates(this.maximum()):this.coordinates(this.minimum()),i=this.settings.rtl?this.coordinates(this.minimum()):this.coordinates(this.maximum()),n=this.settings.pullDrag?-1*s.x/5:0,r.x=Math.max(Math.min(r.x,t+n),i+n)),this._drag.stage.current=r,this.animate(r.x))},s.prototype.onDragEnd=function(t){var n=this.difference(this._drag.pointer,this.pointer(t)),s=this._drag.stage.current,r=n.x>0^this.settings.rtl?"left":"right";e(i).off(".owl.core"),this.$element.removeClass(this.options.grabClass),(0!==n.x&&this.is("dragging")||!this.is("valid"))&&(this.speed(this.settings.dragEndSpeed||this.settings.smartSpeed),this.current(this.closest(s.x,0!==n.x?r:this._drag.direction)),this.invalidate("position"),this.update(),this._drag.direction=r,(Math.abs(n.x)>3||(new Date).getTime()-this._drag.time>300)&&this._drag.target.one("click.owl.core",function(){return!1})),this.is("dragging")&&(this.leave("dragging"),this.trigger("dragged"))},s.prototype.closest=function(t,i){var n=-1,s=30,r=this.width(),a=this.coordinates();return this.settings.freeDrag||e.each(a,e.proxy(function(e,o){return"left"===i&&t>o-s&&o+s>t?n=e:"right"===i&&t>o-r-s&&o-r+s>t?n=e+1:this.op(t,"<",o)&&this.op(t,">",a[e+1]||o-r)&&(n="left"===i?e+1:e),-1===n},this)),this.settings.loop||(this.op(t,">",a[this.minimum()])?n=t=this.minimum():this.op(t,"<",a[this.maximum()])&&(n=t=this.maximum())),n},s.prototype.animate=function(t){var i=this.speed()>0;this.is("animating")&&this.onTransitionEnd(),i&&(this.enter("animating"),this.trigger("translate")),e.support.transform3d&&e.support.transition?this.$stage.css({transform:"translate3d("+t+"px,0px,0px)",transition:this.speed()/1e3+"s"}):i?this.$stage.animate({left:t+"px"},this.speed(),this.settings.fallbackEasing,e.proxy(this.onTransitionEnd,this)):this.$stage.css({left:t+"px"})},s.prototype.is=function(e){return this._states.current[e]&&this._states.current[e]>0},s.prototype.current=function(e){if(e===n)return this._current;if(0===this._items.length)return n;if(e=this.normalize(e),this._current!==e){var t=this.trigger("change",{property:{name:"position",value:e}});t.data!==n&&(e=this.normalize(t.data)),this._current=e,this.invalidate("position"),this.trigger("changed",{property:{name:"position",value:this._current}})}return this._current},s.prototype.invalidate=function(t){return"string"===e.type(t)&&(this._invalidated[t]=!0,this.is("valid")&&this.leave("valid")),e.map(this._invalidated,function(e,t){return t})},s.prototype.reset=function(e){e=this.normalize(e),e!==n&&(this._speed=0,this._current=e,this.suppress(["translate","translated"]),this.animate(this.coordinates(e)),this.release(["translate","translated"]))},s.prototype.normalize=function(e,t){var i=this._items.length,s=t?0:this._clones.length;return!this.isNumeric(e)||1>i?e=n:(0>e||e>=i+s)&&(e=((e-s/2)%i+i)%i+s/2),e},s.prototype.relative=function(e){return e-=this._clones.length/2,this.normalize(e,!0)},s.prototype.maximum=function(e){var t,i,n,s=this.settings,r=this._coordinates.length;if(s.loop)r=this._clones.length/2+this._items.length-1;else if(s.autoWidth||s.merge){for(t=this._items.length,i=this._items[--t].width(),n=this.$element.width();t--&&(i+=this._items[t].width()+this.settings.margin,!(i>n)););r=t+1}else r=s.center?this._items.length-1:this._items.length-s.items;return e&&(r-=this._clones.length/2),Math.max(r,0)},s.prototype.minimum=function(e){return e?0:this._clones.length/2},s.prototype.items=function(e){return e===n?this._items.slice():(e=this.normalize(e,!0),this._items[e])},s.prototype.mergers=function(e){return e===n?this._mergers.slice():(e=this.normalize(e,!0),this._mergers[e])},s.prototype.clones=function(t){var i=this._clones.length/2,s=i+this._items.length,r=function(e){return e%2===0?s+e/2:i-(e+1)/2};return t===n?e.map(this._clones,function(e,t){return r(t)}):e.map(this._clones,function(e,i){return e===t?r(i):null})},s.prototype.speed=function(e){return e!==n&&(this._speed=e),this._speed},s.prototype.coordinates=function(t){var i,s=1,r=t-1;return t===n?e.map(this._coordinates,e.proxy(function(e,t){return this.coordinates(t)},this)):(this.settings.center?(this.settings.rtl&&(s=-1,r=t+1),i=this._coordinates[t],i+=(this.width()-i+(this._coordinates[r]||0))/2*s):i=this._coordinates[r]||0,i=Math.ceil(i))},s.prototype.duration=function(e,t,i){return 0===i?0:Math.min(Math.max(Math.abs(t-e),1),6)*Math.abs(i||this.settings.smartSpeed)},s.prototype.to=function(e,t){var i=this.current(),n=null,s=e-this.relative(i),r=(s>0)-(0>s),a=this._items.length,o=this.minimum(),l=this.maximum();this.settings.loop?(!this.settings.rewind&&Math.abs(s)>a/2&&(s+=-1*r*a),e=i+s,n=((e-o)%a+a)%a+o,n!==e&&l>=n-s&&n-s>0&&(i=n-s,e=n,this.reset(i))):this.settings.rewind?(l+=1,e=(e%l+l)%l):e=Math.max(o,Math.min(l,e)),this.speed(this.duration(i,e,t)),this.current(e),this.$element.is(":visible")&&this.update()},s.prototype.next=function(e){e=e||!1,this.to(this.relative(this.current())+1,e)},s.prototype.prev=function(e){e=e||!1,this.to(this.relative(this.current())-1,e)},s.prototype.onTransitionEnd=function(e){return(e===n||(e.stopPropagation(),(e.target||e.srcElement||e.originalTarget)===this.$stage.get(0)))&&(this.leave("animating"),void this.trigger("translated"))},s.prototype.viewport=function(){var n;if(this.options.responsiveBaseElement!==t)n=e(this.options.responsiveBaseElement).width();else if(t.innerWidth)n=t.innerWidth;else{if(!i.documentElement||!i.documentElement.clientWidth)throw"Can not detect viewport width.";n=i.documentElement.clientWidth}return n},s.prototype.replace=function(t){this.$stage.empty(),this._items=[],t&&(t=t instanceof jQuery?t:e(t)),this.settings.nestedItemSelector&&(t=t.find("."+this.settings.nestedItemSelector)),t.filter(function(){return 1===this.nodeType}).each(e.proxy(function(e,t){t=this.prepare(t),this.$stage.append(t),this._items.push(t),this._mergers.push(1*t.find("[data-merge]").addBack("[data-merge]").attr("data-merge")||1)},this)),this.reset(this.isNumeric(this.settings.startPosition)?this.settings.startPosition:0),this.invalidate("items")},s.prototype.add=function(t,i){var s=this.relative(this._current);i=i===n?this._items.length:this.normalize(i,!0),t=t instanceof jQuery?t:e(t),this.trigger("add",{content:t,position:i}),t=this.prepare(t),0===this._items.length||i===this._items.length?(0===this._items.length&&this.$stage.append(t),0!==this._items.length&&this._items[i-1].after(t),this._items.push(t),this._mergers.push(1*t.find("[data-merge]").addBack("[data-merge]").attr("data-merge")||1)):(this._items[i].before(t),this._items.splice(i,0,t),this._mergers.splice(i,0,1*t.find("[data-merge]").addBack("[data-merge]").attr("data-merge")||1)),this._items[s]&&this.reset(this._items[s].index()),this.invalidate("items"),this.trigger("added",{content:t,position:i})},s.prototype.remove=function(e){e=this.normalize(e,!0),e!==n&&(this.trigger("remove",{content:this._items[e],position:e}),this._items[e].remove(),this._items.splice(e,1),this._mergers.splice(e,1),this.invalidate("items"),this.trigger("removed",{content:null,position:e}))},s.prototype.preloadAutoWidthImages=function(t){t.each(e.proxy(function(t,i){this.enter("pre-loading"),i=e(i),e(new Image).one("load",e.proxy(function(e){i.attr("src",e.target.src),i.css("opacity",1),this.leave("pre-loading"),!this.is("pre-loading")&&!this.is("initializing")&&this.refresh()},this)).attr("src",i.attr("src")||i.attr("data-src")||i.attr("data-src-retina"))},this))},s.prototype.destroy=function(){this.$element.off(".owl.core"),this.$stage.off(".owl.core"),e(i).off(".owl.core"),this.settings.responsive!==!1&&(t.clearTimeout(this.resizeTimer),this.off(t,"resize",this._handlers.onThrottledResize));for(var n in this._plugins)this._plugins[n].destroy();this.$stage.children(".cloned").remove(),this.$stage.unwrap(),this.$stage.children().contents().unwrap(),this.$stage.children().unwrap(),this.$element.removeClass(this.options.refreshClass).removeClass(this.options.loadingClass).removeClass(this.options.loadedClass).removeClass(this.options.rtlClass).removeClass(this.options.dragClass).removeClass(this.options.grabClass).attr("class",this.$element.attr("class").replace(new RegExp(this.options.responsiveClass+"-\\S+\\s","g"),"")).removeData("owl.carousel")},s.prototype.op=function(e,t,i){var n=this.settings.rtl;switch(t){case"<":return n?e>i:i>e;case">":return n?i>e:e>i;case">=":return n?i>=e:e>=i;case"<=":return n?e>=i:i>=e}},s.prototype.on=function(e,t,i,n){e.addEventListener?e.addEventListener(t,i,n):e.attachEvent&&e.attachEvent("on"+t,i)},s.prototype.off=function(e,t,i,n){e.removeEventListener?e.removeEventListener(t,i,n):e.detachEvent&&e.detachEvent("on"+t,i)},s.prototype.trigger=function(t,i,n,r,a){var o={item:{count:this._items.length,index:this.current()}},l=e.camelCase(e.grep(["on",t,n],function(e){return e}).join("-").toLowerCase()),p=e.Event([t,"owl",n||"carousel"].join(".").toLowerCase(),e.extend({relatedTarget:this},o,i));return this._supress[t]||(e.each(this._plugins,function(e,t){t.onTrigger&&t.onTrigger(p)}),this.register({type:s.Type.Event,name:t}),this.$element.trigger(p),this.settings&&"function"==typeof this.settings[l]&&this.settings[l].call(this,p)),p},s.prototype.enter=function(t){e.each([t].concat(this._states.tags[t]||[]),e.proxy(function(e,t){this._states.current[t]===n&&(this._states.current[t]=0),this._states.current[t]++},this))},s.prototype.leave=function(t){e.each([t].concat(this._states.tags[t]||[]),e.proxy(function(e,t){this._states.current[t]--},this))},s.prototype.register=function(t){if(t.type===s.Type.Event){if(e.event.special[t.name]||(e.event.special[t.name]={}),!e.event.special[t.name].owl){var i=e.event.special[t.name]._default;e.event.special[t.name]._default=function(e){return!i||!i.apply||e.namespace&&-1!==e.namespace.indexOf("owl")?e.namespace&&e.namespace.indexOf("owl")>-1:i.apply(this,arguments)},e.event.special[t.name].owl=!0}}else t.type===s.Type.State&&(this._states.tags[t.name]?this._states.tags[t.name]=this._states.tags[t.name].concat(t.tags):this._states.tags[t.name]=t.tags,this._states.tags[t.name]=e.grep(this._states.tags[t.name],e.proxy(function(i,n){return e.inArray(i,this._states.tags[t.name])===n},this)))},s.prototype.suppress=function(t){e.each(t,e.proxy(function(e,t){this._supress[t]=!0},this))},s.prototype.release=function(t){e.each(t,e.proxy(function(e,t){delete this._supress[t]},this))},s.prototype.pointer=function(e){var i={x:null,y:null};return e=e.originalEvent||e||t.event,e=e.touches&&e.touches.length?e.touches[0]:e.changedTouches&&e.changedTouches.length?e.changedTouches[0]:e,e.pageX?(i.x=e.pageX,i.y=e.pageY):(i.x=e.clientX,i.y=e.clientY),i},s.prototype.isNumeric=function(e){return!isNaN(parseFloat(e))},s.prototype.difference=function(e,t){return{x:e.x-t.x,y:e.y-t.y}},e.fn.owlCarousel=function(t){var i=Array.prototype.slice.call(arguments,1);return this.each(function(){var n=e(this),r=n.data("owl.carousel");r||(r=new s(this,"object"==typeof t&&t),n.data("owl.carousel",r),e.each(["next","prev","to","destroy","refresh","replace","add","remove"],function(t,i){r.register({type:s.Type.Event,name:i}),r.$element.on(i+".owl.carousel.core",e.proxy(function(e){e.namespace&&e.relatedTarget!==this&&(this.suppress([i]),r[i].apply(this,[].slice.call(arguments,1)),this.release([i]))},r))})),"string"==typeof t&&"_"!==t.charAt(0)&&r[t].apply(r,i)})},e.fn.owlCarousel.Constructor=s}(window.Zepto||window.jQuery,window,document),function(e,t,i,n){var s=function(t){this._core=t,this._interval=null,this._visible=null,this._handlers={"initialized.owl.carousel":e.proxy(function(e){e.namespace&&this._core.settings.autoRefresh&&this.watch()},this)},this._core.options=e.extend({},s.Defaults,this._core.options),this._core.$element.on(this._handlers)};s.Defaults={autoRefresh:!0,autoRefreshInterval:500},s.prototype.watch=function(){this._interval||(this._visible=this._core.$element.is(":visible"),this._interval=t.setInterval(e.proxy(this.refresh,this),this._core.settings.autoRefreshInterval))},s.prototype.refresh=function(){this._core.$element.is(":visible")!==this._visible&&(this._visible=!this._visible,this._core.$element.toggleClass("owl-hidden",!this._visible),this._visible&&this._core.invalidate("width")&&this._core.refresh())},s.prototype.destroy=function(){var e,i;t.clearInterval(this._interval);for(e in this._handlers)this._core.$element.off(e,this._handlers[e]);for(i in Object.getOwnPropertyNames(this))"function"!=typeof this[i]&&(this[i]=null)},e.fn.owlCarousel.Constructor.Plugins.AutoRefresh=s}(window.Zepto||window.jQuery,window,document),function(e,t,i,n){var s=function(t){this._core=t,this._loaded=[],this._handlers={"initialized.owl.carousel change.owl.carousel resized.owl.carousel":e.proxy(function(t){if(t.namespace&&this._core.settings&&this._core.settings.lazyLoad&&(t.property&&"position"==t.property.name||"initialized"==t.type))for(var i=this._core.settings,s=i.center&&Math.ceil(i.items/2)||i.items,r=i.center&&-1*s||0,a=(t.property&&t.property.value!==n?t.property.value:this._core.current())+r,o=this._core.clones().length,l=e.proxy(function(e,t){this.load(t)},this);r++<s;)this.load(o/2+this._core.relative(a)),o&&e.each(this._core.clones(this._core.relative(a)),l),a++},this)},this._core.options=e.extend({},s.Defaults,this._core.options),this._core.$element.on(this._handlers)};s.Defaults={lazyLoad:!1},s.prototype.load=function(i){var n=this._core.$stage.children().eq(i),s=n&&n.find(".owl-lazy");!s||e.inArray(n.get(0),this._loaded)>-1||(s.each(e.proxy(function(i,n){var s,r=e(n),a=t.devicePixelRatio>1&&r.attr("data-src-retina")||r.attr("data-src");this._core.trigger("load",{element:r,url:a},"lazy"),r.is("img")?r.one("load.owl.lazy",e.proxy(function(){r.css("opacity",1),this._core.trigger("loaded",{element:r,url:a},"lazy")},this)).attr("src",a):(s=new Image,s.onload=e.proxy(function(){r.css({"background-image":"url("+a+")",opacity:"1"}),this._core.trigger("loaded",{element:r,url:a},"lazy")},this),s.src=a)},this)),this._loaded.push(n.get(0)))},s.prototype.destroy=function(){var e,t;for(e in this.handlers)this._core.$element.off(e,this.handlers[e]);for(t in Object.getOwnPropertyNames(this))"function"!=typeof this[t]&&(this[t]=null)},e.fn.owlCarousel.Constructor.Plugins.Lazy=s}(window.Zepto||window.jQuery,window,document),function(e,t,i,n){var s=function(t){this._core=t,this._handlers={"initialized.owl.carousel refreshed.owl.carousel":e.proxy(function(e){e.namespace&&this._core.settings.autoHeight&&this.update()},this),"changed.owl.carousel":e.proxy(function(e){e.namespace&&this._core.settings.autoHeight&&"position"==e.property.name&&this.update()},this),"loaded.owl.lazy":e.proxy(function(e){e.namespace&&this._core.settings.autoHeight&&e.element.closest("."+this._core.settings.itemClass).index()===this._core.current()&&this.update()},this)},this._core.options=e.extend({},s.Defaults,this._core.options),this._core.$element.on(this._handlers)};s.Defaults={autoHeight:!1,autoHeightClass:"owl-height"},s.prototype.update=function(){var t=this._core._current,i=t+this._core.settings.items,n=this._core.$stage.children().toArray().slice(t,i),s=[],r=0;e.each(n,function(t,i){s.push(e(i).height())}),r=Math.max.apply(null,s),this._core.$stage.parent().height(r).addClass(this._core.settings.autoHeightClass)},s.prototype.destroy=function(){var e,t;for(e in this._handlers)this._core.$element.off(e,this._handlers[e]);for(t in Object.getOwnPropertyNames(this))"function"!=typeof this[t]&&(this[t]=null)},e.fn.owlCarousel.Constructor.Plugins.AutoHeight=s}(window.Zepto||window.jQuery,window,document),function(e,t,i,n){var s=function(t){this._core=t,this._videos={},this._playing=null,this._handlers={"initialized.owl.carousel":e.proxy(function(e){e.namespace&&this._core.register({type:"state",name:"playing",tags:["interacting"]})},this),"resize.owl.carousel":e.proxy(function(e){e.namespace&&this._core.settings.video&&this.isInFullScreen()&&e.preventDefault()},this),"refreshed.owl.carousel":e.proxy(function(e){e.namespace&&this._core.is("resizing")&&this._core.$stage.find(".cloned .owl-video-frame").remove()},this),"changed.owl.carousel":e.proxy(function(e){e.namespace&&"position"===e.property.name&&this._playing&&this.stop()},this),"prepared.owl.carousel":e.proxy(function(t){if(t.namespace){var i=e(t.content).find(".owl-video");i.length&&(i.css("display","none"),this.fetch(i,e(t.content)))}},this)},this._core.options=e.extend({},s.Defaults,this._core.options),this._core.$element.on(this._handlers),this._core.$element.on("click.owl.video",".owl-video-play-icon",e.proxy(function(e){this.play(e)},this))};s.Defaults={video:!1,videoHeight:!1,videoWidth:!1},s.prototype.fetch=function(e,t){var i=function(){return e.attr("data-vimeo-id")?"vimeo":e.attr("data-vzaar-id")?"vzaar":"youtube"}(),n=e.attr("data-vimeo-id")||e.attr("data-youtube-id")||e.attr("data-vzaar-id"),s=e.attr("data-width")||this._core.settings.videoWidth,r=e.attr("data-height")||this._core.settings.videoHeight,a=e.attr("href");if(!a)throw new Error("Missing video URL.");if(n=a.match(/(http:|https:|)\/\/(player.|www.|app.)?(vimeo\.com|youtu(be\.com|\.be|be\.googleapis\.com)|vzaar\.com)\/(video\/|videos\/|embed\/|channels\/.+\/|groups\/.+\/|watch\?v=|v\/)?([A-Za-z0-9._%-]*)(\&\S+)?/),n[3].indexOf("youtu")>-1)i="youtube";else if(n[3].indexOf("vimeo")>-1)i="vimeo";else{if(!(n[3].indexOf("vzaar")>-1))throw new Error("Video URL not supported.");i="vzaar"}n=n[6],this._videos[a]={type:i,id:n,width:s,height:r},t.attr("data-video",a),this.thumbnail(e,this._videos[a])},s.prototype.thumbnail=function(t,i){var n,s,r,a=i.width&&i.height?'style="width:'+i.width+"px;height:"+i.height+'px;"':"",o=t.find("img"),l="src",p="",c=this._core.settings,u=function(e){s='<div class="owl-video-play-icon"></div>',n=c.lazyLoad?'<div class="owl-video-tn '+p+'" '+l+'="'+e+'"></div>':'<div class="owl-video-tn" style="opacity:1;background-image:url('+e+')"></div>',t.after(n),t.after(s)};return t.wrap('<div class="owl-video-wrapper"'+a+"></div>"),this._core.settings.lazyLoad&&(l="data-src",p="owl-lazy"),o.length?(u(o.attr(l)),o.remove(),!1):void("youtube"===i.type?(r="//img.youtube.com/vi/"+i.id+"/hqdefault.jpg",u(r)):"vimeo"===i.type?e.ajax({type:"GET",url:"//vimeo.com/api/v2/video/"+i.id+".json",jsonp:"callback",dataType:"jsonp",success:function(e){r=e[0].thumbnail_large,u(r)}}):"vzaar"===i.type&&e.ajax({type:"GET",url:"//vzaar.com/api/videos/"+i.id+".json",jsonp:"callback",dataType:"jsonp",success:function(e){r=e.framegrab_url,u(r)}}))},s.prototype.stop=function(){this._core.trigger("stop",null,"video"),this._playing.find(".owl-video-frame").remove(),this._playing.removeClass("owl-video-playing"),this._playing=null,this._core.leave("playing"),this._core.trigger("stopped",null,"video")},s.prototype.play=function(t){var i,n=e(t.target),s=n.closest("."+this._core.settings.itemClass),r=this._videos[s.attr("data-video")],a=r.width||"100%",o=r.height||this._core.$stage.height();this._playing||(this._core.enter("playing"),this._core.trigger("play",null,"video"),s=this._core.items(this._core.relative(s.index())),this._core.reset(s.index()),"youtube"===r.type?i='<iframe width="'+a+'" height="'+o+'" src="//www.youtube.com/embed/'+r.id+"?autoplay=1&v="+r.id+'" frameborder="0" allowfullscreen></iframe>':"vimeo"===r.type?i='<iframe src="//player.vimeo.com/video/'+r.id+'?autoplay=1" width="'+a+'" height="'+o+'" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>':"vzaar"===r.type&&(i='<iframe frameborder="0"height="'+o+'"width="'+a+'" allowfullscreen mozallowfullscreen webkitAllowFullScreen src="//view.vzaar.com/'+r.id+'/player?autoplay=true"></iframe>'),e('<div class="owl-video-frame">'+i+"</div>").insertAfter(s.find(".owl-video")),this._playing=s.addClass("owl-video-playing"))},s.prototype.isInFullScreen=function(){var t=i.fullscreenElement||i.mozFullScreenElement||i.webkitFullscreenElement;return t&&e(t).parent().hasClass("owl-video-frame")},s.prototype.destroy=function(){var e,t;this._core.$element.off("click.owl.video");for(e in this._handlers)this._core.$element.off(e,this._handlers[e]);for(t in Object.getOwnPropertyNames(this))"function"!=typeof this[t]&&(this[t]=null)},e.fn.owlCarousel.Constructor.Plugins.Video=s}(window.Zepto||window.jQuery,window,document),function(e,t,i,n){var s=function(t){this.core=t,this.core.options=e.extend({},s.Defaults,this.core.options),this.swapping=!0,this.previous=n,this.next=n,this.handlers={"change.owl.carousel":e.proxy(function(e){e.namespace&&"position"==e.property.name&&(this.previous=this.core.current(),this.next=e.property.value)},this),"drag.owl.carousel dragged.owl.carousel translated.owl.carousel":e.proxy(function(e){e.namespace&&(this.swapping="translated"==e.type)},this),"translate.owl.carousel":e.proxy(function(e){e.namespace&&this.swapping&&(this.core.options.animateOut||this.core.options.animateIn)&&this.swap()},this)},this.core.$element.on(this.handlers)};s.Defaults={animateOut:!1,animateIn:!1},s.prototype.swap=function(){if(1===this.core.settings.items&&e.support.animation&&e.support.transition){this.core.speed(0);var t,i=e.proxy(this.clear,this),n=this.core.$stage.children().eq(this.previous),s=this.core.$stage.children().eq(this.next),r=this.core.settings.animateIn,a=this.core.settings.animateOut;this.core.current()!==this.previous&&(a&&(t=this.core.coordinates(this.previous)-this.core.coordinates(this.next),n.one(e.support.animation.end,i).css({left:t+"px"}).addClass("animated owl-animated-out").addClass(a)),r&&s.one(e.support.animation.end,i).addClass("animated owl-animated-in").addClass(r))}},s.prototype.clear=function(t){e(t.target).css({left:""}).removeClass("animated owl-animated-out owl-animated-in").removeClass(this.core.settings.animateIn).removeClass(this.core.settings.animateOut),this.core.onTransitionEnd()},s.prototype.destroy=function(){var e,t;for(e in this.handlers)this.core.$element.off(e,this.handlers[e]);for(t in Object.getOwnPropertyNames(this))"function"!=typeof this[t]&&(this[t]=null)},e.fn.owlCarousel.Constructor.Plugins.Animate=s}(window.Zepto||window.jQuery,window,document),function(e,t,i,n){var s=function(t){this._core=t,this._timeout=null,this._paused=!1,this._handlers={"changed.owl.carousel":e.proxy(function(e){e.namespace&&"settings"===e.property.name?this._core.settings.autoplay?this.play():this.stop():e.namespace&&"position"===e.property.name&&this._core.settings.autoplay&&this._setAutoPlayInterval()},this),"initialized.owl.carousel":e.proxy(function(e){e.namespace&&this._core.settings.autoplay&&this.play()},this),"play.owl.autoplay":e.proxy(function(e,t,i){e.namespace&&this.play(t,i)},this),"stop.owl.autoplay":e.proxy(function(e){e.namespace&&this.stop()},this),"mouseover.owl.autoplay":e.proxy(function(){this._core.settings.autoplayHoverPause&&this._core.is("rotating")&&this.pause()},this),"mouseleave.owl.autoplay":e.proxy(function(){this._core.settings.autoplayHoverPause&&this._core.is("rotating")&&this.play()},this),"touchstart.owl.core":e.proxy(function(){this._core.settings.autoplayHoverPause&&this._core.is("rotating")&&this.pause()},this),"touchend.owl.core":e.proxy(function(){this._core.settings.autoplayHoverPause&&this.play()},this)},this._core.$element.on(this._handlers),this._core.options=e.extend({},s.Defaults,this._core.options)};s.Defaults={autoplay:!1,autoplayTimeout:5e3,autoplayHoverPause:!1,autoplaySpeed:!1},s.prototype.play=function(e,t){this._paused=!1,this._core.is("rotating")||(this._core.enter("rotating"),this._setAutoPlayInterval())},s.prototype._getNextTimeout=function(n,s){return this._timeout&&t.clearTimeout(this._timeout),t.setTimeout(e.proxy(function(){this._paused||this._core.is("busy")||this._core.is("interacting")||i.hidden||this._core.next(s||this._core.settings.autoplaySpeed)},this),n||this._core.settings.autoplayTimeout)},s.prototype._setAutoPlayInterval=function(){this._timeout=this._getNextTimeout()},s.prototype.stop=function(){this._core.is("rotating")&&(t.clearTimeout(this._timeout),this._core.leave("rotating"))},s.prototype.pause=function(){this._core.is("rotating")&&(this._paused=!0)},s.prototype.destroy=function(){var e,t;this.stop();for(e in this._handlers)this._core.$element.off(e,this._handlers[e]);for(t in Object.getOwnPropertyNames(this))"function"!=typeof this[t]&&(this[t]=null)},e.fn.owlCarousel.Constructor.Plugins.autoplay=s}(window.Zepto||window.jQuery,window,document),function(e,t,i,n){"use strict";var s=function(t){this._core=t,this._initialized=!1,this._pages=[],this._controls={},this._templates=[],this.$element=this._core.$element,this._overrides={next:this._core.next,prev:this._core.prev,to:this._core.to},this._handlers={"prepared.owl.carousel":e.proxy(function(t){t.namespace&&this._core.settings.dotsData&&this._templates.push('<div class="'+this._core.settings.dotClass+'">'+e(t.content).find("[data-dot]").addBack("[data-dot]").attr("data-dot")+"</div>")},this),"added.owl.carousel":e.proxy(function(e){e.namespace&&this._core.settings.dotsData&&this._templates.splice(e.position,0,this._templates.pop())},this),"remove.owl.carousel":e.proxy(function(e){e.namespace&&this._core.settings.dotsData&&this._templates.splice(e.position,1)},this),"changed.owl.carousel":e.proxy(function(e){e.namespace&&"position"==e.property.name&&this.draw()},this),"initialized.owl.carousel":e.proxy(function(e){e.namespace&&!this._initialized&&(this._core.trigger("initialize",null,"navigation"),this.initialize(),this.update(),this.draw(),this._initialized=!0,this._core.trigger("initialized",null,"navigation"))},this),"refreshed.owl.carousel":e.proxy(function(e){e.namespace&&this._initialized&&(this._core.trigger("refresh",null,"navigation"),this.update(),this.draw(),this._core.trigger("refreshed",null,"navigation"))},this)},this._core.options=e.extend({},s.Defaults,this._core.options),this.$element.on(this._handlers)};s.Defaults={nav:!1,navText:["",""],navSpeed:!1,navElement:"div",navContainer:!1,navContainerClass:"owl-nav",navClass:["owl-prev","owl-next"],slideBy:1,dotClass:"owl-dot",dotsClass:"owl-dots",dots:!0,dotsEach:!1,dotsData:!1,dotsSpeed:!1,dotsContainer:!1},s.prototype.initialize=function(){var t,i=this._core.settings;this._controls.$relative=(i.navContainer?e(i.navContainer):e("<div>").addClass(i.navContainerClass).appendTo(this.$element)).addClass("disabled"),this._controls.$previous=e("<"+i.navElement+">").addClass(i.navClass[0]).html(i.navText[0]).prependTo(this._controls.$relative).on("click",e.proxy(function(e){this.prev(i.navSpeed)},this)),this._controls.$next=e("<"+i.navElement+">").addClass(i.navClass[1]).html(i.navText[1]).appendTo(this._controls.$relative).on("click",e.proxy(function(e){this.next(i.navSpeed)},this)),i.dotsData||(this._templates=[e("<div>").addClass(i.dotClass).append(e("<span>")).prop("outerHTML")]),this._controls.$absolute=(i.dotsContainer?e(i.dotsContainer):e("<div>").addClass(i.dotsClass).appendTo(this.$element)).addClass("disabled"),this._controls.$absolute.on("click","div",e.proxy(function(t){var n=e(t.target).parent().is(this._controls.$absolute)?e(t.target).index():e(t.target).parent().index();t.preventDefault(),this.to(n,i.dotsSpeed)},this));for(t in this._overrides)this._core[t]=e.proxy(this[t],this)},s.prototype.destroy=function(){var e,t,i,n;for(e in this._handlers)this.$element.off(e,this._handlers[e]);for(t in this._controls)this._controls[t].remove();for(n in this.overides)this._core[n]=this._overrides[n];for(i in Object.getOwnPropertyNames(this))"function"!=typeof this[i]&&(this[i]=null)},s.prototype.update=function(){var e,t,i,n=this._core.clones().length/2,s=n+this._core.items().length,r=this._core.maximum(!0),a=this._core.settings,o=a.center||a.autoWidth||a.dotsData?1:a.dotsEach||a.items;if("page"!==a.slideBy&&(a.slideBy=Math.min(a.slideBy,a.items)),a.dots||"page"==a.slideBy)for(this._pages=[],e=n,t=0,i=0;s>e;e++){if(t>=o||0===t){if(this._pages.push({start:Math.min(r,e-n),end:e-n+o-1}),Math.min(r,e-n)===r)break;t=0,++i}t+=this._core.mergers(this._core.relative(e))}},s.prototype.draw=function(){var t,i=this._core.settings,n=this._core.items().length<=i.items,s=this._core.relative(this._core.current()),r=i.loop||i.rewind;this._controls.$relative.toggleClass("disabled",!i.nav||n),i.nav&&(this._controls.$previous.toggleClass("disabled",!r&&s<=this._core.minimum(!0)),
this._controls.$next.toggleClass("disabled",!r&&s>=this._core.maximum(!0))),this._controls.$absolute.toggleClass("disabled",!i.dots||n),i.dots&&(t=this._pages.length-this._controls.$absolute.children().length,i.dotsData&&0!==t?this._controls.$absolute.html(this._templates.join("")):t>0?this._controls.$absolute.append(new Array(t+1).join(this._templates[0])):0>t&&this._controls.$absolute.children().slice(t).remove(),this._controls.$absolute.find(".active").removeClass("active"),this._controls.$absolute.children().eq(e.inArray(this.current(),this._pages)).addClass("active"))},s.prototype.onTrigger=function(t){var i=this._core.settings;t.page={index:e.inArray(this.current(),this._pages),count:this._pages.length,size:i&&(i.center||i.autoWidth||i.dotsData?1:i.dotsEach||i.items)}},s.prototype.current=function(){var t=this._core.relative(this._core.current());return e.grep(this._pages,e.proxy(function(e,i){return e.start<=t&&e.end>=t},this)).pop()},s.prototype.getPosition=function(t){var i,n,s=this._core.settings;return"page"==s.slideBy?(i=e.inArray(this.current(),this._pages),n=this._pages.length,t?++i:--i,i=this._pages[(i%n+n)%n].start):(i=this._core.relative(this._core.current()),n=this._core.items().length,t?i+=s.slideBy:i-=s.slideBy),i},s.prototype.next=function(t){e.proxy(this._overrides.to,this._core)(this.getPosition(!0),t)},s.prototype.prev=function(t){e.proxy(this._overrides.to,this._core)(this.getPosition(!1),t)},s.prototype.to=function(t,i,n){var s;!n&&this._pages.length?(s=this._pages.length,e.proxy(this._overrides.to,this._core)(this._pages[(t%s+s)%s].start,i)):e.proxy(this._overrides.to,this._core)(t,i)},e.fn.owlCarousel.Constructor.Plugins.Navigation=s}(window.Zepto||window.jQuery,window,document),function(e,t,i,n){"use strict";var s=function(i){this._core=i,this._hashes={},this.$element=this._core.$element,this._handlers={"initialized.owl.carousel":e.proxy(function(i){i.namespace&&"URLHash"===this._core.settings.startPosition&&e(t).trigger("hashchange.owl.navigation")},this),"prepared.owl.carousel":e.proxy(function(t){if(t.namespace){var i=e(t.content).find("[data-hash]").addBack("[data-hash]").attr("data-hash");if(!i)return;this._hashes[i]=t.content}},this),"changed.owl.carousel":e.proxy(function(i){if(i.namespace&&"position"===i.property.name){var n=this._core.items(this._core.relative(this._core.current())),s=e.map(this._hashes,function(e,t){return e===n?t:null}).join();if(!s||t.location.hash.slice(1)===s)return;t.location.hash=s}},this)},this._core.options=e.extend({},s.Defaults,this._core.options),this.$element.on(this._handlers),e(t).on("hashchange.owl.navigation",e.proxy(function(e){var i=t.location.hash.substring(1),s=this._core.$stage.children(),r=this._hashes[i]&&s.index(this._hashes[i]);r!==n&&r!==this._core.current()&&this._core.to(this._core.relative(r),!1,!0)},this))};s.Defaults={URLhashListener:!1},s.prototype.destroy=function(){var i,n;e(t).off("hashchange.owl.navigation");for(i in this._handlers)this._core.$element.off(i,this._handlers[i]);for(n in Object.getOwnPropertyNames(this))"function"!=typeof this[n]&&(this[n]=null)},e.fn.owlCarousel.Constructor.Plugins.Hash=s}(window.Zepto||window.jQuery,window,document),function(e,t,i,n){function s(t,i){var s=!1,r=t.charAt(0).toUpperCase()+t.slice(1);return e.each((t+" "+o.join(r+" ")+r).split(" "),function(e,t){return a[t]!==n?(s=!i||t,!1):void 0}),s}function r(e){return s(e,!0)}var a=e("<support>").get(0).style,o="Webkit Moz O ms".split(" "),l={transition:{end:{WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd",transition:"transitionend"}},animation:{end:{WebkitAnimation:"webkitAnimationEnd",MozAnimation:"animationend",OAnimation:"oAnimationEnd",animation:"animationend"}}},p={csstransforms:function(){return!!s("transform")},csstransforms3d:function(){return!!s("perspective")},csstransitions:function(){return!!s("transition")},cssanimations:function(){return!!s("animation")}};p.csstransitions()&&(e.support.transition=new String(r("transition")),e.support.transition.end=l.transition.end[e.support.transition]),p.cssanimations()&&(e.support.animation=new String(r("animation")),e.support.animation.end=l.animation.end[e.support.animation]),p.csstransforms()&&(e.support.transform=new String(r("transform")),e.support.transform3d=p.csstransforms3d())}(window.Zepto||window.jQuery,window,document),!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var t;"undefined"!=typeof window?t=window:"undefined"!=typeof global?t=global:"undefined"!=typeof self&&(t=self),t.Slideout=e()}}(function(){return function e(t,i,n){function s(a,o){if(!i[a]){if(!t[a]){var l="function"==typeof require&&require;if(!o&&l)return l(a,!0);if(r)return r(a,!0);var p=new Error("Cannot find module '"+a+"'");throw p.code="MODULE_NOT_FOUND",p}var c=i[a]={exports:{}};t[a][0].call(c.exports,function(e){var i=t[a][1][e];return s(i?i:e)},c,c.exports,e,t,i,n)}return i[a].exports}for(var r="function"==typeof require&&require,a=0;a<n.length;a++)s(n[a]);return s}({1:[function(e,t,i){"use strict";function n(e,t){for(var i in t)t[i]&&(e[i]=t[i]);return e}function s(e,t){e.prototype=n(e.prototype||{},t.prototype)}function r(e){for(;e.parentNode;){if(null!==e.getAttribute("data-slideout-ignore"))return e;e=e.parentNode}return null}function a(e){e=e||{},this._startOffsetX=0,this._currentOffsetX=0,this._opening=!1,this._moved=!1,this._opened=!1,this._preventOpen=!1,this._touch=void 0===e.touch||e.touch&&!0,this._side=e.side||"left",this.panel=e.panel,this.menu=e.menu,this.panel.classList.contains("slideout-panel")||this.panel.classList.add("slideout-panel"),this.panel.classList.contains("slideout-panel-"+this._side)||this.panel.classList.add("slideout-panel-"+this._side),this.menu.classList.contains("slideout-menu")||this.menu.classList.add("slideout-menu"),this.menu.classList.contains("slideout-menu-"+this._side)||this.menu.classList.add("slideout-menu-"+this._side),this._fx=e.fx||"ease",this._duration=parseInt(e.duration,10)||300,this._tolerance=parseInt(e.tolerance,10)||70,this._padding=this._translateTo=parseInt(e.padding,10)||256,this._orientation="right"===this._side?-1:1,this._translateTo*=this._orientation,this._touch&&this._initTouchEvents()}var o,l=e("decouple"),p=e("emitter"),c=!1,u=window.document,d=u.documentElement,h=window.navigator.msPointerEnabled,f={start:h?"MSPointerDown":"touchstart",move:h?"MSPointerMove":"touchmove",end:h?"MSPointerUp":"touchend"},m=function(){var e=/^(Webkit|Khtml|Moz|ms|O)(?=[A-Z])/,t=u.getElementsByTagName("script")[0].style;for(var i in t)if(e.test(i))return"-"+i.match(e)[0].toLowerCase()+"-";return"WebkitOpacity"in t?"-webkit-":"KhtmlOpacity"in t?"-khtml-":""}();s(a,p),a.prototype.open=function(){var e=this;return this.emit("beforeopen"),d.classList.contains("slideout-open")||d.classList.add("slideout-open"),this._setTransition(),this._translateXTo(this._translateTo),this._opened=!0,setTimeout(function(){e.panel.style.transition=e.panel.style["-webkit-transition"]="",e.emit("open")},this._duration+50),this},a.prototype.close=function(){var e=this;return this.isOpen()||this._opening?(this.emit("beforeclose"),this._setTransition(),this._translateXTo(0),this._opened=!1,setTimeout(function(){d.classList.remove("slideout-open"),e.panel.style.transition=e.panel.style["-webkit-transition"]=e.panel.style[m+"transform"]=e.panel.style.transform="",e.emit("close")},this._duration+50),this):this},a.prototype.toggle=function(){return this.isOpen()?this.close():this.open()},a.prototype.isOpen=function(){return this._opened},a.prototype._translateXTo=function(e){return this._currentOffsetX=e,this.panel.style[m+"transform"]=this.panel.style.transform="translateX("+e+"px)",this},a.prototype._setTransition=function(){return this.panel.style[m+"transition"]=this.panel.style.transition=m+"transform "+this._duration+"ms "+this._fx,this},a.prototype._initTouchEvents=function(){var e=this;return this._onScrollFn=l(u,"scroll",function(){e._moved||(clearTimeout(o),c=!0,o=setTimeout(function(){c=!1},250))}),this._preventMove=function(t){e._moved&&t.preventDefault()},u.addEventListener(f.move,this._preventMove),this._resetTouchFn=function(t){"undefined"!=typeof t.touches&&(e._moved=!1,e._opening=!1,e._startOffsetX=t.touches[0].pageX,e._preventOpen=!e._touch||!e.isOpen()&&0!==e.menu.clientWidth)},this.panel.addEventListener(f.start,this._resetTouchFn),this._onTouchCancelFn=function(){e._moved=!1,e._opening=!1},this.panel.addEventListener("touchcancel",this._onTouchCancelFn),this._onTouchEndFn=function(){e._moved&&(e.emit("translateend"),e._opening&&Math.abs(e._currentOffsetX)>e._tolerance?e.open():e.close()),e._moved=!1},this.panel.addEventListener(f.end,this._onTouchEndFn),this._onTouchMoveFn=function(t){if(!(c||e._preventOpen||"undefined"==typeof t.touches||r(t.target))){var i=t.touches[0].clientX-e._startOffsetX,n=e._currentOffsetX=i;if(!(Math.abs(n)>e._padding)&&Math.abs(i)>20){e._opening=!0;var s=i*e._orientation;if(e._opened&&s>0||!e._opened&&s<0)return;e._moved||e.emit("translatestart"),s<=0&&(n=i+e._padding*e._orientation,e._opening=!1),e._moved&&d.classList.contains("slideout-open")||d.classList.add("slideout-open"),e.panel.style[m+"transform"]=e.panel.style.transform="translateX("+n+"px)",e.emit("translate",n),e._moved=!0}}},this.panel.addEventListener(f.move,this._onTouchMoveFn),this},a.prototype.enableTouch=function(){return this._touch=!0,this},a.prototype.disableTouch=function(){return this._touch=!1,this},a.prototype.destroy=function(){return this.close(),u.removeEventListener(f.move,this._preventMove),this.panel.removeEventListener(f.start,this._resetTouchFn),this.panel.removeEventListener("touchcancel",this._onTouchCancelFn),this.panel.removeEventListener(f.end,this._onTouchEndFn),this.panel.removeEventListener(f.move,this._onTouchMoveFn),u.removeEventListener("scroll",this._onScrollFn),this.open=this.close=function(){},this},t.exports=a},{decouple:2,emitter:3}],2:[function(e,t,i){"use strict";function n(e,t,i){function n(e){o=e,r()}function r(){l||(s(a),l=!0)}function a(){i.call(e,o),l=!1}var o,l=!1;return e.addEventListener(t,n,!1),n}var s=function(){return window.requestAnimationFrame||window.webkitRequestAnimationFrame||function(e){window.setTimeout(e,1e3/60)}}();t.exports=n},{}],3:[function(e,t,i){"use strict";var n=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")};i.__esModule=!0;var s=function(){function e(){n(this,e)}return e.prototype.on=function(e,t){return this._eventCollection=this._eventCollection||{},this._eventCollection[e]=this._eventCollection[e]||[],this._eventCollection[e].push(t),this},e.prototype.once=function(e,t){function i(){n.off(e,i),t.apply(this,arguments)}var n=this;return i.listener=t,this.on(e,i),this},e.prototype.off=function(e,t){var i=void 0;return this._eventCollection&&(i=this._eventCollection[e])?(i.forEach(function(e,n){e!==t&&e.listener!==t||i.splice(n,1)}),0===i.length&&delete this._eventCollection[e],this):this},e.prototype.emit=function(e){for(var t=this,i=arguments.length,n=Array(i>1?i-1:0),s=1;s<i;s++)n[s-1]=arguments[s];var r=void 0;return this._eventCollection&&(r=this._eventCollection[e])?(r=r.slice(0),r.forEach(function(e){return e.apply(t,n)}),this):this},e}();i.default=s,t.exports=i.default},{}]},{},[1])(1)}),function(e){e.fn.viewportChecker=function(t){var i={classToAdd:"visible",offset:100,callbackFunction:function(e){}};e.extend(i,t);var n=this,s=e(window).height();this.checkElements=function(){var t=navigator.userAgent.toLowerCase().indexOf("webkit")!=-1?"body":"html",r=e(t).scrollTop(),a=r+s;n.each(function(){var t=e(this);if(!t.hasClass(i.classToAdd)){var n=Math.round(t.offset().top)+i.offset,s=n+t.height();n<a&&s>r&&(t.addClass(i.classToAdd),i.callbackFunction(t))}})},e(window).scroll(this.checkElements),this.checkElements(),e(window).resize(function(e){s=e.currentTarget.innerHeight})}}(jQuery),jQuery(document).ready(function(){jQuery(".post1").addClass("hidden1").viewportChecker({classToAdd:"visible animated bounceInLeft",offset:100}),jQuery(".post2").addClass("hidden1").viewportChecker({classToAdd:"visible animated bounceInRight",offset:100}),jQuery(".post3").addClass("hidden1").viewportChecker({classToAdd:"visible animated bounceInUp",offset:100}),jQuery(".post4").addClass("hidden1").viewportChecker({classToAdd:"visible animated fadeInDown",offset:100})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
